{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/AdListing.ts","webpack:///./src/app/core/ad.service.ts","webpack:///./src/app/core/auth.guard.ts","webpack:///./src/app/core/auth.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/notify.service.ts","webpack:///./src/app/notes/note-detail/note-detail.component.html","webpack:///./src/app/notes/note-detail/note-detail.component.scss","webpack:///./src/app/notes/note-detail/note-detail.component.ts","webpack:///./src/app/notes/notes-list/notes-list.component.html","webpack:///./src/app/notes/notes-list/notes-list.component.scss","webpack:///./src/app/notes/notes-list/notes-list.component.ts","webpack:///./src/app/notes/notes.module.ts","webpack:///./src/app/notes/notes.service.ts","webpack:///./src/app/ui/ad-listing/ad-listing.component.html","webpack:///./src/app/ui/ad-listing/ad-listing.component.scss","webpack:///./src/app/ui/ad-listing/ad-listing.component.ts","webpack:///./src/app/ui/addresume/addresume.component.html","webpack:///./src/app/ui/addresume/addresume.component.scss","webpack:///./src/app/ui/addresume/addresume.component.ts","webpack:///./src/app/ui/addresume/dialog-content-example-dialog.html","webpack:///./src/app/ui/fire-form.directive.ts","webpack:///./src/app/ui/google-places.directive.ts","webpack:///./src/app/ui/home-page/home-page.component.html","webpack:///./src/app/ui/home-page/home-page.component.scss","webpack:///./src/app/ui/home-page/home-page.component.ts","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.html","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.scss","webpack:///./src/app/ui/loading-spinner/loading-spinner.component.ts","webpack:///./src/app/ui/main-nav/main-nav.component.html","webpack:///./src/app/ui/main-nav/main-nav.component.scss","webpack:///./src/app/ui/main-nav/main-nav.component.ts","webpack:///./src/app/ui/notification-message/notification-message.component.html","webpack:///./src/app/ui/notification-message/notification-message.component.scss","webpack:///./src/app/ui/notification-message/notification-message.component.ts","webpack:///./src/app/ui/onboarding/builder/builder.component.html","webpack:///./src/app/ui/onboarding/builder/builder.component.scss","webpack:///./src/app/ui/onboarding/builder/builder.component.ts","webpack:///./src/app/ui/onboarding/location/location.component.html","webpack:///./src/app/ui/onboarding/location/location.component.scss","webpack:///./src/app/ui/onboarding/location/location.component.ts","webpack:///./src/app/ui/onboarding/looking/looking.component.html","webpack:///./src/app/ui/onboarding/looking/looking.component.scss","webpack:///./src/app/ui/onboarding/looking/looking.component.ts","webpack:///./src/app/ui/onboarding/onboardingprofile/onboardingprofile.component.html","webpack:///./src/app/ui/onboarding/onboardingprofile/onboardingprofile.component.scss","webpack:///./src/app/ui/onboarding/onboardingprofile/onboardingprofile.component.ts","webpack:///./src/app/ui/onboarding/preferences/preferences.component.html","webpack:///./src/app/ui/onboarding/preferences/preferences.component.scss","webpack:///./src/app/ui/onboarding/preferences/preferences.component.ts","webpack:///./src/app/ui/onboarding/preview/preview.component.html","webpack:///./src/app/ui/onboarding/preview/preview.component.scss","webpack:///./src/app/ui/onboarding/preview/preview.component.ts","webpack:///./src/app/ui/onboarding/welcome/welcome.component.html","webpack:///./src/app/ui/onboarding/welcome/welcome.component.scss","webpack:///./src/app/ui/onboarding/welcome/welcome.component.ts","webpack:///./src/app/ui/postjob/postjob.component.html","webpack:///./src/app/ui/postjob/postjob.component.scss","webpack:///./src/app/ui/postjob/postjob.component.ts","webpack:///./src/app/ui/profile-resume-form.directive.ts","webpack:///./src/app/ui/profile/dialog-overview-example-dialog.html","webpack:///./src/app/ui/profile/profile.component.html","webpack:///./src/app/ui/profile/profile.component.scss","webpack:///./src/app/ui/profile/profile.component.ts","webpack:///./src/app/ui/profileresume/dialog-content-example-dialog.html","webpack:///./src/app/ui/profileresume/profileresume.component.html","webpack:///./src/app/ui/profileresume/profileresume.component.scss","webpack:///./src/app/ui/profileresume/profileresume.component.ts","webpack:///./src/app/ui/resumelist/resumelist.component.html","webpack:///./src/app/ui/resumelist/resumelist.component.scss","webpack:///./src/app/ui/resumelist/resumelist.component.ts","webpack:///./src/app/ui/searchcandidates/searchcandidates.component.html","webpack:///./src/app/ui/searchcandidates/searchcandidates.component.scss","webpack:///./src/app/ui/searchcandidates/searchcandidates.component.ts","webpack:///./src/app/ui/ssr-page/ssr-page.component.html","webpack:///./src/app/ui/ssr-page/ssr-page.component.scss","webpack:///./src/app/ui/ssr-page/ssr-page.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/app/ui/user-form/user-form.component.html","webpack:///./src/app/ui/user-form/user-form.component.scss","webpack:///./src/app/ui/user-form/user-form.component.ts","webpack:///./src/app/ui/user-login/user-login.component.html","webpack:///./src/app/ui/user-login/user-login.component.scss","webpack:///./src/app/ui/user-login/user-login.component.ts","webpack:///./src/app/ui/user-profile/user-profile.component.html","webpack:///./src/app/ui/user-profile/user-profile.component.scss","webpack:///./src/app/ui/user-profile/user-profile.component.ts","webpack:///./src/app/ui/viewresume/viewresume.component.html","webpack:///./src/app/ui/viewresume/viewresume.component.scss","webpack:///./src/app/ui/viewresume/viewresume.component.ts","webpack:///./src/app/uploads/drop-zone.directive.ts","webpack:///./src/app/uploads/file-size.pipe.ts","webpack:///./src/app/uploads/upload-page/upload-page.component.html","webpack:///./src/app/uploads/upload-page/upload-page.component.scss","webpack:///./src/app/uploads/upload-page/upload-page.component.ts","webpack:///./src/app/uploads/uploads.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAET;AAC4B;AACH;AACM;AACK;AAEd;AACF;AACM;AACG;AACA;AACD;AACR;AACkB;AACP;AACG;AACH;AAC8B;AAEd;AACJ;AACZ;AAE7E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAiB,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sFAAkB,EAAE;IAChD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yFAAkB,EAAG,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE;IAC3E,EAAE,IAAI,EAAE,SAAS,EAAG,SAAS,EAAE,8FAAmB,EAAG,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE;IAC/E,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,8EAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,wFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,wFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gFAAgB,EAAE;IAC5C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+EAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,iGAAsB,EAAC;IAC3D,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAC,0FAAgB,EAAC;IACzD,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,6FAAiB,EAAC;IAC5D,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,0FAAgB,EAAC;IAC1D,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,0GAAyB,EAAC;IACjE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,wHAA0B,EAAC;IACpE,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,sGAAoB,EAAC;IAClE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,0FAAgB,EAAC;CAC3D,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpD7B,6sCAA6sC,cAAc,YAAY,oBAAoB,QAAQ,WAAW,UAAU,8VAA8V,ysBAAysB,0EAA0E,qDAAqD,6CAA6C,6DAA6D,6CAA6C,kEAAkE,6CAA6C,iEAAiE,eAAe,sDAAsD,kDAAkD,wDAAwD,4CAA4C,kFAAkF,eAAe,2C;;;;;;;;;;;ACAjkG,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACQ;AAOlD;IAEE,sBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QADrC,UAAK,GAAG,KAAK,CAAC;IAC0B,CAAC;IAF9B,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG0B,8DAAW;OAF1B,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRwC;AAK9B;AAEqB;AACT;AACe;AACJ;AAE1D,0BAA0B;AACsB;AACS;AACf;AACS;AAGnD,uBAAuB;AAC0B;AACe;AACA;AACN;AACU;AAEpE,YAAY;AACZ,wDAAwD;AA0BxD;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,OAAO,EAAE;gBACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;gBAC1D,oFAA0B;gBAC1B,oEAAgB;gBAChB,4DAAU;gBACV,sDAAQ;gBACR,+DAAW;gBACX,qEAAa;gBACb,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,EAAE,aAAa,CAAC;gBACpE,8EAAsB,CAAC,iBAAiB,EAAE;gBAC1C,wEAAqB;gBACrB,8EAAwB;gBACxB,kFAA0B;gBAC1B,2EAAmB,CAAC,QAAQ,CAAC,iBAAiB,EAAE;oBAC9C,OAAO,EAAE,qEAAW,CAAC,UAAU;iBAChC,CAAC;aACH;YACD,OAAO,EAAE;gBACP,oEAAsB;aACvB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;ACrDtB;AAAA;IAAA;QACI,UAAK,GAAM,YAAY;QACvB,YAAO,GAAI,YAAY;QACvB,UAAK,GAAM,IAAI;QACf,UAAK,GAAM,oCAAoC;IACjD,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLwC;AAC4B;AAG/B;AAKxC;IAEE,mBAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;IAAI,CAAC;IAE9C,4CAA4C;IAC5C,4BAAQ,GAAR;QACE,IAAM,SAAS,GAAG,IAAI,oDAAS,EAAE;QACjC,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG;QACtD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;IACxC,CAAC;IAGD,0BAA0B;IAC1B,4BAAQ,GAAR,UAAS,EAAuC,EAAE,IAAS;QACzD,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;IACxB,CAAC;IAfQ,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGwB,oFAAmB;OAFhC,SAAS,CAiBrB;IAAD,gBAAC;CAAA;AAjBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTqB;AAMlB;AAEuB;AAGH;AACI;AAKjD;IACE,mBACU,IAAiB,EACjB,MAAc,EACd,MAAqB;QAFrB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IAC5B,CAAC;IACJ,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAF5B,iBAeC;QAXC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACxB,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,cAAI,IAAI,QAAC,CAAC,IAAI,EAAN,CAAM,CAAC,EACnB,0DAAG,CAAC,kBAAQ;YACV,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;gBACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IArBU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGgB,yDAAW;YACT,sDAAM;YACN,6DAAa;OAJpB,SAAS,CAsBrB;IAAD,gBAAC;CAAA;AAtBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBqB;AACF;AAGX;AACsB;AAIpB;AACiB;AAEX;AAC6B;AAWnE;IAGE,qBACU,MAAuB,EACvB,GAAqB,EACrB,MAAc,EACd,MAAqB;QAJ/B,iBAiBC;QAhBS,WAAM,GAAN,MAAM,CAAiB;QACvB,QAAG,GAAH,GAAG,CAAkB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAE7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CACpC,gEAAS,CAAC,cAAI;YACZ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,KAAI,CAAC,GAAG,CAAC,GAAG,CAAO,WAAS,IAAI,CAAC,GAAK,CAAC,CAAC,YAAY,EAAE,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC;QACH,CAAC,CAAC;QACF,mEAAmE;QACnE,sDAAsD;SACvD,CAAC;IACJ,CAAC;IAED,0BAA0B;IAE1B,iCAAW,GAAX;QACE,0DAA0D;QAC1D,IAAM,QAAQ,GAAG,IAAI,6CAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,iCAAW,GAAX;QACE,0DAA0D;QAC1D,IAAM,QAAQ,GAAG,IAAI,6CAAI,CAAC,kBAAkB,EAAE;QAC9C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,mCAAa,GAAb;QACE,4DAA4D;QAC5D,IAAM,QAAQ,GAAG,IAAI,6CAAI,CAAC,oBAAoB,EAAE,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,kCAAY,GAAZ;QACE,2DAA2D;QAC3D,IAAM,QAAQ,GAAG,IAAI,6CAAI,CAAC,mBAAmB,EAAE;QAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAEO,gCAAU,GAAlB,UAAmB,QAAa;QAAhC,iBAQC;QAPC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;aACpB,eAAe,CAAC,QAAQ,CAAC;aACzB,IAAI,CAAC,oBAAU;YACd,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC;aACD,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;IAC7C,CAAC;IAED,wBAAwB;IAExB,oCAAc,GAAd;QAAA,iBAUC;QATC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;aACpB,iBAAiB,EAAE;aACnB,IAAI,CAAC,oBAAU;YACd,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;YAC3D,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB;QACpE,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAA6B;IAE7B,iCAAW,GAAX,UAAY,KAAa,EAAE,QAAgB;QAA3C,iBAQC;QAPC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;aACpB,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC;aAC/C,IAAI,CAAC,oBAAU;YACd,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;YACnD,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB;QACpE,CAAC,CAAC;aACD,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;IAC7C,CAAC;IAED,gCAAU,GAAV,UAAW,KAAa,EAAE,QAAgB;QAA1C,iBAQC;QAPC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI;aACpB,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;aAC3C,IAAI,CAAC,oBAAU;YACd,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC;aACD,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC;IAC7C,CAAC;IAED,8CAA8C;IAC9C,mCAAa,GAAb,UAAc,KAAa;QACzB,iCAAiC;QACjC,sBAAsB;QACtB,eAAe;QACb,gCAAgC;QAChC,uEAAuE;QACvE,2CAA2C;IAC/C,CAAC;IAED,6BAAO,GAAP;QAAA,iBAIC;QAHC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAwC;IAChC,iCAAW,GAAnB,UAAoB,KAAY;QAC9B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,oDAAoD;IAC5C,oCAAc,GAAtB,UAAuB,IAAU;QAC/B,IAAM,OAAO,GAAmC,IAAI,CAAC,GAAG,CAAC,GAAG,CAC1D,WAAS,IAAI,CAAC,GAAK,CACpB,CAAC;QAEF,IAAM,IAAI,GAAS;YACjB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,eAAe;YAChD,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,uBAAuB;SACnD,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAjIU,WAAW;QADvB,gEAAU,EAAE;yCAKO,iEAAe;YAClB,uEAAgB;YACb,sDAAM;YACN,6DAAa;OAPpB,WAAW,CAkIvB;IAAD,kBAAC;CAAA;AAlIuB;;;;;;;;;;;;;;;;;;;;;;;;;ACxBiB;AAEI;AACJ;AACQ;AAKjD;IAAA;IAA0B,CAAC;IAAd,UAAU;QAHtB,8DAAQ,CAAC;YACR,SAAS,EAAE,CAAC,yDAAW,EAAE,qDAAS,EAAE,6DAAa,CAAC;SACnD,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACToB;AAEZ;AAS/B;IADA;QAGU,eAAU,GAAG,IAAI,4CAAO,EAAc,CAAC;QAE/C,QAAG,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAUvC,CAAC;IARC,8BAAM,GAAN,UAAO,OAAe,EAAE,KAAmC;QACzD,IAAM,GAAG,GAAQ,EAAE,OAAO,WAAE,KAAK,SAAE,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,6BAAK,GAAL;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAbU,aAAa;QADzB,gEAAU,EAAE;OACA,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB;;;;;;;;;;;;ACX1B,wDAAwD,gBAAgB,uJAAuJ,oJAAoJ,oBAAoB,oB;;;;;;;;;;;ACAvY,+BAA+B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAR;AAED;AAOhD;IAIE,6BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,4CAAc,GAAd,UAAe,GAAW;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;QAClE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAED,wCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAdQ;QAAR,2DAAK,EAAE;;qDAAW;IAFR,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAKkC,2DAAY;OAJnC,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;ACThC,mhB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACF;AAQhD;IAKE,4BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,qCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC3C,CAAC;IAED,yCAAY,GAAZ;QACE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAdU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMkC,2DAAY;OALnC,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA;AAhB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACM;AACF;AAE0B;AACG;AAC3B;AAU/C;IAAA;IAA2B,CAAC;IAAf,WAAW;QARvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;aACZ;YACD,YAAY,EAAE,CAAC,mFAAkB,EAAE,sFAAmB,CAAC;YACvD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBmB;AAEqE;AAG3E;AAGrC;IAKE,sBAAoB,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;QACvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,EAAE,UAAC,GAAG,IAAK,UAAG,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;IACrG,CAAC;IAED,8BAAO,GAAP;QACE,mCAAmC;QACnC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAChD,0DAAG,CAAC,UAAC,OAAO;YACV,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC;gBACnB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,MAAM,YAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAK,IAAI,EAAG;YAC3C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,8BAAO,GAAP,UAAQ,EAAU;QAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAM,WAAS,EAAI,CAAC,CAAC;IAC1C,CAAC;IAED,iCAAU,GAAV,UAAW,OAAe;QACxB,IAAM,IAAI,GAAG;YACX,OAAO;YACP,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SAC3B,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,iCAAU,GAAV,UAAW,EAAU,EAAE,IAAS;QAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,iCAAU,GAAV,UAAW,EAAU;QACnB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;IACnC,CAAC;IAxCU,YAAY;QADxB,gEAAU,EAAE;yCAMc,uEAAgB;OAL9B,YAAY,CAyCxB;IAAD,mBAAC;CAAA;AAzCwB;;;;;;;;;;;;ACRzB,sNAAsN,oBAAoB,uIAAuI,wBAAwB,kDAAkD,gCAAgC,6FAA6F,uBAAuB,4BAA4B,wBAAwB,gjBAAgjB,uNAAuN,inBAAinB,oNAAoN,+0BAA+0B,gOAAgO,+mBAA+mB,0NAA0N,8V;;;;;;;;;;;ACAvkI,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AAEkB;AAOpE;IAKE,4BAAoB,SAAoB,EAAU,EAAe;QAA7C,cAAS,GAAT,SAAS,CAAW;QAAU,OAAE,GAAF,EAAE,CAAa;IAAI,CAAC;IACtE,cAAc;IAEd,8CAAiB,GAAjB;QACE,IAAI,CAAC,EAAE,GAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;QACvC,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAED,0CAAa,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC;YACzD,MAAM;QACR,CAAC;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;QAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;IACxC,CAAC;IAEO,sCAAS,GAAjB;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,KAAK,EAAK,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACpC,OAAO,EAAG,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACpC,KAAK,EAAK,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACpC,KAAK,EAAK,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SACrC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,YAAE;YAClB,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAjCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAM+B,0DAAS,EAAc,0DAAW;OALtD,kBAAkB,CAqC9B;IAAD,yBAAC;CAAA;AArC8B;;;;;;;;;;;;ACV/B,iFAAiF,YAAY,4KAA4K,sDAAsD,2yIAA2yI,sBAAsB,wdAAwd,iqCAAiqC,yTAAyT,y+CAAy+C,KAAK,qpBAAqpB,wkIAAwkI,qhBAAqhB,i9GAAi9G,uMAAuM,aAAa,+hCAA+hC,YAAY,8jCAA8jC,WAAW,wvDAAwvD,+nBAA+nB,0NAA0N,qiFAAqiF,s1BAAs1B,uiCAAuiC,wNAAwN,eAAe,wLAAwL,eAAe,yOAAyO,q5CAAq5C,ueAAue,6FAA6F,KAAK,0uBAA0uB,uvBAAuvB,gmBAAgmB,06BAA06B,w9BAAw9B,o0CAAo0C,44FAA44F,+PAA+P,giBAAgiB,y0CAAy0C,ueAAue,6FAA6F,KAAK,0wBAA0wB,21CAA21C,umBAAumB,8pF;;;;;;;;;;;ACAnq0C,kCAAkC,mBAAmB,EAAE,mBAAmB,qBAAqB,sBAAsB,gBAAgB,EAAE,yBAAyB,gBAAgB,EAAE,uBAAuB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlI;AACG;AACnC;AAEP;AACe;AAKtC;AAc3B;IAwBE,4BAAoB,EAAe,EAAU,GAAqB,EAC/C,QAAqB,EAAS,MAAiB,EAC5C,cAA8B,EAChC,MAAc,EAAU,IAAY;QACtD,yCAAyC;QAJvB,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAC/C,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QApBxD,gBAAW,GAAa,CAAC,oBAAoB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QACvE,cAAS,GAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAGlD,YAAO,GAAW,mBAAmB,CAAC;QACtC,sBAAiB,GAAW,OAAO,CAAC;QACpC,WAAM,GAAY,IAAI,CAAC;QACvB,gBAAW,GAAY,IAAI,CAAC;QAC5B,aAAQ,GAAW,IAAI,CAAC;QACxB,uBAAkB,GAAkC,MAAM,CAAC;QAC3D,qBAAgB,GAAgC,QAAQ,CAAC;QACzD,aAAQ,GAAU,SAAS,CAAC;QAErB,UAAK,GAAG,QAAQ,CAAC;IAUxB,CAAC;IAED,2DAA2D;IAC3D,wDAAwD;IACxD,uCAAU,GAAV,UAAW,OAAO;QAAlB,iBAQC;QAPC,yDAAyD;QACzD,2BAA2B;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAO,EAAE,CAAC;QAA/B,iBAYC;QAVC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,yEAAyE;YACzE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3C,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,2CAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,0CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA0CC;QAxCC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,MAAc;YACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,CACjC,CAAC;YACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACxC,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACtB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,iBAAiB,EAAE,CAAC,EAAE,CAAC;YACvB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,4BAA4B;YAC5B,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,yBAAyB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7C,CAAC;QACF,6DAA6D;QAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC;QAEtE,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,wCAAW,GAAX;QAAA,iBA8GC;QA5GC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAEvB,oEAAoE;QACpE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAC3D,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAE/E,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzD,2EAA2E;oBAE3E,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,cAAI;wBACzB,IAAM,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAC1B,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;4BAC9B,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;yBACjC,CAAC;wBACF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE9B,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,CACJ,CAAC;oBACC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;oBACxB,iEAAiE;gBAEnE,CAAC;gBAED,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAG3E,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,cAAI;wBAC9B,IAAM,UAAU,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAE/B,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAC1B,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACtB,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAC1B,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC1F,MAAM,EAAE,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACpF,iBAAiB,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;4BAC9C,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BAC5B,kBAAkB,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;yBACjD,CAAC;wBACF,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACxC,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,EAAC;oBACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACpC,CAAC;gBAKD,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;oBAC/F,IAAI,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,cAAI;wBAC5C,IAAM,SAAS,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAE9B,qBAAqB,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;4BACtD,gBAAgB,EAAG,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACnH,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BAChC,iBAAiB,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;yBAE/C,CAAC;wBACF,KAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACtD,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,EAAC;oBACH,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC;gBACnD,CAAC;gBAED,wBAAwB;YAC1B,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,uBAAuB;gBACvB,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvB,IAAM,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAC1B,SAAS,EAAE,EAAE;wBACb,UAAU,EAAE,EAAE;qBACf,CAAC;oBACF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;YACL,CAAC;QACH,CAAC,CAAC,EACF,2DAAI,CAAC,CAAC,CAAC,CACR;aACE,SAAS,EAAE;IAChB,CAAC;IAED,uCAAU,GAAV,UAAW,UAAU;QACnB,IAAI,UAAU,GAAC,EAAE;QACjB,EAAE,EAAC,UAAU,IAAI,IAAI,CAAC,EAAC;YACrB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAE,UAAU,GAAE,IAAI,CAAC,CAAC;YACzC,UAAU,GAAG,MAAM,CAAC,cAAc,EAAE;QACtC,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAED,0CAAa,GAAb;QACE,4DAA4D;QAC5D,gCAAgC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACxB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE;gBACX,KAAK,EAAE,IAAI,CAAC,UAAU;aACvB;YACD,mBAAmB,EAAE,OAAO;YAC5B,kDAAkD;YAClD,kBAAkB,EAAE,KAAK;YACzB,4BAA4B;SAC7B,CAAC,CAAC;IAEN,CAAC;IAEC,sCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjB,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IAED,yCAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAE1C,IAAI,MAAM,GAAG,IAAI,mEAAiB,EAAE,CAAC;QACrC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACpD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAExF,CAAC;IAED,uCAAU,GAAV,UAAW,OAAe,EAAE,QAAe;QACzC,iEAAiE;QADnE,iBA4BC;QAzBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE;YAC/C,IAAI,EAAE;gBACJ,UAAU,EAAE,OAAO;gBACnB,WAAW,EAAE,eAAe,GAAG,QAAQ;aACxC;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,oBAAkB,MAAQ,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;YAC5B,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CACnB,CAAC;gBACC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;gBACnC,MAAM,CAAC,CAAC,OAAO,CAAC,CAChB,CAAC;oBACC,KAAK,YAAY;wBACf,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;wBAC7B,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;wBAC/B,KAAK,CAAC;oBACR,KAAK,WAAW;wBACd,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;wBAC9B,KAAK,CAAC;gBACV,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,0CAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAc;QAC/C,CAAC;;;OAAA;IAED,sBAAI,+CAAe;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAc;QACpD,CAAC;;;OAAA;IAED,sBAAI,8DAA8B;aAAlC;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,2BAA2B,CAAc;QAClE,CAAC;;;OAAA;IAED,0CAAa,GAAb,UAAc,CAAC;QACb,iBAAiB;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,qCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAG,CAAC;YACF,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE,EAAE;aACf,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;QACpB,CAAC;IAEH,CAAC;IAED,sCAAS,GAAT,UAAU,SAA2B,EAAE,YAA8B;QACnE,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CACjC,CAAC;YACC,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,SAAS,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5B,UAAU,EAAE,CAAC,EAAE,CAAC;aACjB,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,0CAAa,GAAb,UAAc,YAA8B,EAAE,KAAwB,EAAE,OAAyB;QAC/F,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;QACvC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAC7B,CAAC;YACC,IAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC/B,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;gBACtB,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,EAAE;gBACV,iBAAiB,EAAE,EAAE;gBACrB,kBAAkB,EAAE,EAAE;aACvB,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CACJ,CAAC;YAEC,wCAAwC;YACxC,+CAA+C;QACjD,CAAC;IACH,CAAC;IAED,sCAAS,GAAT,UAAU,UAA6B,EAAE,eAAiC;QAExE,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAClC,CAAC;YACC,IAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,qBAAqB,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;gBACzC,gBAAgB,EAAE,EAAE;gBACpB,UAAU,EAAE,EAAE;gBACd,iBAAiB,EAAE,EAAE;aACtB,CAAC;YAEF,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CACJ,CAAC;YAEC,wCAAwC;YACxC,+CAA+C;QACjD,CAAC;IACH,CAAC;IAGD,6CAAgB,GAAhB,UAAiB,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAC,QAAQ,CAAC;IACnD,CAAC;IAED,wCAAW,GAAX,UAAY,CAAC;QACX,+BAA+B;QAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,4CAAe,GAAf,UAAgB,CAAC;QACf,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAC,QAAQ,CAAC;IAC/C,CAAC;IArZU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAyBwB,0DAAW,EAAe,uEAAgB;YACrC,6DAAW,EAAiB,2DAAS;YAC5B,8DAAc;YACxB,sDAAM,EAAgB,oDAAM;OA3B7C,kBAAkB,CAuZ9B;IAAD,yBAAC;CAAA;AAvZ8B;AA8Z/B;IACE,sBAA4C,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IADrD,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;;SAE1C,CAAC;QAEa,uEAAM,CAAC,iEAAe,CAAC;;OADzB,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;ACtbzB,wKAAwK,kBAAkB,iBAAiB,iBAAiB,yFAAyF,wGAAwG,uGAAuG,upC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5Z;AACpB;AACJ;AAClB;AAG/B;AAK/B;IAmBE,2BAAoB,EAAe,EAAU,GAAqB;QAA9C,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAVlE,UAAU;QACA,gBAAW,GAAG,IAAI,0DAAY,EAAU,CAAC;QACzC,cAAS,GAAG,IAAI,0DAAY,EAAU,CAAC;IAQqB,CAAC;IAGvE,oCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,yCAAyC;IACzC,uCAAW,GAAX;QAAA,iBAgDC;QA/CC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM;aACR,YAAY,EAAE;aACd,IAAI,CACH,0DAAG,CAAC,aAAG;YACL,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,oDAAoD;gBACpD,iCAAiC;gBACjC,8BAA8B;gBAC9B,oCAAoC;gBACpC,qBAAqB;gBACrB,sBAAsB;gBACtB,wBAAwB;gBACxB,SAAS;gBACT,4BAA4B;gBAC5B,0BAA0B;gBAC1B,UAAU;gBACV,SAAS;gBACT,0BAA0B;gBAC1B,yBAAyB;gBACzB,SAAS;gBACT,OAAO;gBACP,KAAK;gBACL,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACzD,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;oBACtB,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC;oBACnC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC;oBACnB,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC;oBACrB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;oBACf,wDAAwD;oBACxD,gEAAgE;oBAChE,uDAAuD;oBACvD,yFAAyF;oBACzF,sKAAsK;oBACtK,uDAAuD;iBACxD,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;gBAC3B,KAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;gBAChC,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACxB,CAAC;QACH,CAAC,CAAC,EACF,2DAAI,CAAC,CAAC,CAAC,CACR;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,sBAAI,4CAAa;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAc;QAC1D,CAAC;;;OAAA;IAED,oCAAQ,GAAR;QAEE,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,KAAK,EAAE,CAAC,OAAO,CAAC;YAChB,KAAK,EAAE,CAAC,OAAO,CAAC;SACjB,CAAC;QACF,IAAM,OAAO,GAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC;QACpE,yBAAyB;QACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,qCAAS,GAAT,UAAU,UAAoB;QAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,OAAO,UAAU,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,oDAAO,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,UAAU,CAAC;QAC1C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,CAC5B,CAAC;YACC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;YAEpI,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,KAAK,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC7C,KAAK,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;aAC9C,CAAC;YAEF,oCAAoC;YACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC;QAChC,CAAC;QAGD,6JAA6J;IAC/J,CAAC;IAED,yBAAyB;IACzB,oCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aACzC,IAAI,CACH,0DAAG,CAAC,gBAAM;YACR,KAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QAC1B,CAAC,CAAC,EACF,mEAAY,CAAC,IAAI,CAAC,EAClB,0DAAG,CAAC,gBAAM;YACR,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,IAAI,KAAI,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBACvD,KAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;QACH,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;IACf,CAAC;IAED,2DAA2D;IAE3D,oCAAQ,GAAR,UAAS,CAAC;QACR,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAGD,iDAAiD;IACjD,qCAAS,GAAT,UAAU,IAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAI,IAAI,SAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAI,CAAC,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,8BAA8B;IACxB,kCAAM,GAAZ;;;;;;;wBAEI,qBAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;wBAA5D,SAA4D,CAAC;wBAC7D,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;;;;wBAEtB,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC;wBAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAG,CAAC,OAAO,CAAC;wBAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;;;;;;KAExB;IAGD,sBAAI,oCAAK;QADT,2BAA2B;aAC3B,UAAU,GAAG;YACX,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC;;;OAAA;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IApKQ;QAAR,2DAAK,EAAE;;mDAAc;IACb;QAAR,2DAAK,EAAE;kCAAY,wDAAS;wDAAC;IAMpB;QAAT,4DAAM,EAAE;;0DAA0C;IACzC;QAAT,4DAAM,EAAE;;wDAAwC;IA0HjD;QADC,kEAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAGpC;IAvIU,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;yCAoBwB,0DAAW,EAAe,uEAAgB;OAnBvD,iBAAiB,CAyK7B;IAAD,wBAAC;CAAA;AAzK6B;;;;;;;;;;;;;;;;;;;;;;;;;ACXsD;AAOpF;IAIE,+BAAY,KAAiB;QAHnB,aAAQ,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAIzD,iDAAiD;QACjD,yBAAyB;QACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC;IACrC,CAAC;IAED,mDAAmB,GAAnB,UAAoB,KAAK;QACvB,mDAAmD;QACnD,qEAAqE;QACrE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACjD,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAEvC,IAAI,IAAI,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACvC,gCAAgC;YAChC,uBAAuB;YACvB,YAAY,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC,iBAAiB,CAAC;YAC5D,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrE,YAAY,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,YAAY,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,YAAY,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAClD,CAAC;QAEH,CAAC;QACD,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAOC;QANC,IAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvE,sDAAsD;QACtD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,eAAe,EAAE;YAC3D,mDAAmD;YACnD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IA9CS;QAAT,4DAAM,EAAE;kCAAW,0DAAY;2DAA2B;IADhD,qBAAqB;QAHjC,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;yCAKmB,wDAAU;OAJlB,qBAAqB,CAkDjC;IAAD,4BAAC;CAAA;AAlDiC;;;;;;;;;;;;ACPlC,kEAAkE,yyCAAyyC,43H;;;;;;;;;;;ACA32C,kCAAkC,mBAAmB,EAAE,yBAAyB,gBAAgB,EAAE,eAAe,uCAAuC,oBAAoB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA5H;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,+M;;;;;;;;;;;ACAA,4BAA4B,uBAAuB,gBAAgB,iBAAiB,uBAAuB,oBAAoB,EAAE,oBAAoB,2BAA2B,iBAAiB,eAAe,0BAA0B,iEAAiE,yDAAyD,EAAE,qBAAqB,mCAAmC,2BAA2B,EAAE,qBAAqB,mCAAmC,2BAA2B,EAAE,qBAAqB,mCAAmC,2BAA2B,EAAE,qBAAqB,mCAAmC,2BAA2B,EAAE,wCAAwC,mBAAmB,qCAAqC,EAAE,SAAS,mCAAmC,EAAE,EAAE,gCAAgC,mBAAmB,6BAA6B,qCAAqC,EAAE,SAAS,2BAA2B,mCAAmC,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA59B;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;ACPpC,ibAAib,kBAAkB,o7BAAo7B,oBAAoB,m+BAAm+B,kBAAkB,mEAAmE,yK;;;;;;;;;;;ACAn8E,uBAAuB,qCAAqC,EAAE,mBAAmB,yBAAyB,EAAE,kBAAkB,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACArG;AACI;AAMtD;IAIE,0BAAmB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAFpC,SAAI,GAAG,KAAK,CAAC;IAE2B,CAAC;IAEzC,yCAAc,GAAd;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAZU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKyB,8DAAW;OAJzB,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;ACP7B,kGAAkG,6HAA6H,0EAA0E,eAAe,W;;;;;;;;;;;ACAxT,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACQ;AAO1D;IAEE,sCAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAFlC,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAG2B,kEAAa;OAF7B,4BAA4B,CAGxC;IAAD,mCAAC;CAAA;AAHwC;;;;;;;;;;;;ACRzC,m2D;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAC0B;AAC3B;AACP;AAOlD;IAoBE,0BAAoB,YAAyB,EAAU,GAAqB,EAAU,IAAY;QAA9E,iBAAY,GAAZ,YAAY,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAlBlG,WAAM,GAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAQ3H,UAAK,GAAG;YACN,EAAC,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,wBAAwB,EAAC;YAC/D,EAAC,KAAK,EAAE,kCAAkC,EAAE,OAAO,EAAE,cAAc,EAAC;YACpE,EAAC,KAAK,EAAE,sBAAsB,EAAE,OAAO,EAAE,4BAA4B,EAAC;YACtE,EAAC,KAAK,EAAE,kBAAkB,EAAE,OAAO,EAAE,WAAW,EAAC;SAClD,CAAC;IAKoG,CAAC;IAFvG,sBAAI,uCAAS;QADb,qDAAqD;aACrD,cAA0C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAInF,mCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACvC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBACjC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACtB,iBAAiB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC5C,gBAAgB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;iBAC5C,CAAC;gBACF,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACtB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;iBACtC,CAAC;aACH,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,EAAE,CAAC;QAEzD,IAAI,CAAC,WAAW,EAAE;QAElB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC3C,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,wCAAa,GAAb,UAAc,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,iBAAiB;IACnB,CAAC;IAED,sCAAW,GAAX;QAAA,iBAgBC;QAdC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAEvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAC9C,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAEhE,CAAC;QACH,CAAC,CAAC,EAAC,2DAAI,CAAC,CAAC,CAAC,CACX;aACA,SAAS,EAAE;IACd,CAAC;IAtEU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAqBkC,0DAAW,EAAe,uEAAgB,EAAgB,oDAAM;OApBvF,gBAAgB,CAuE5B;IAAD,uBAAC;CAAA;AAvE4B;;;;;;;;;;;;ACV7B,wxCAAwxC,gHAAgH,KAAK,iBAAiB,WAAW,ioB;;;;;;;;;;;ACAz6C,iCAAiC,qBAAqB,qBAAqB,gBAAgB,EAAE,yBAAyB,gBAAgB,EAAE,WAAW,6CAA6C,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxI;AACD;AACmC;AAC1C;AAOlD;IA8BE,2BAAoB,EAAe,EAAU,GAAqB,EAAU,IAAY;QAApE,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QA5BjF,UAAK,GAAG,QAAQ,CAAC;IA4BmE,CAAC;IApB5F,2DAA2D;IAC3D,wDAAwD;IACxD,sCAAU,GAAV,UAAW,OAAO;QAAlB,iBAgBC;QAfC,yDAAyD;QACzD,2BAA2B;QAC3B,sCAAsC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YACzC,oDAAoD;YACpD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAEvE,2EAA2E;YAE3E,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,0DAAW,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtF,0BAA0B;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAID,oCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SACjC,CACF;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,CAAC;QAEvD,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAGD,yCAAa,GAAb,UAAc,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,iBAAiB;IACnB,CAAC;IACD,yCAAa,GAAb,UAAc,KAAuB;QACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QACxB,kCAAkC;IAEpC,CAAC;IAED,sBAAI,kDAAmB;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAc;QACxD,CAAC;;;OAAA;IAED,uCAAW,GAAX;QAAA,iBA0BC;QAxBC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAEvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAC5C,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3D,qEAAqE;gBAErE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAC;oBAC3B,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,cAAI;wBAClC,IAAM,cAAc,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BACnC,MAAM,EAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBAC5B,CAAC;oBAEJ,CAAC,CAAC,CAAC;gBACL,CAAC;YAEH,CAAC;QACH,CAAC,CAAC,EAAC,2DAAI,CAAC,CAAC,CAAC,CACX;aACA,SAAS,EAAE;IACd,CAAC;IAtFU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCA+BwB,0DAAW,EAAe,uEAAgB,EAAgB,oDAAM;OA9B7E,iBAAiB,CAwF7B;IAAD,wBAAC;CAAA;AAxF6B;;;;;;;;;;;;ACV9B,8+H;;;;;;;;;;;ACAA,wCAAwC,yBAAyB,2BAA2B,EAAE,2BAA2B,gBAAgB,EAAE,6BAA6B,mBAAmB,EAAE,yBAAyB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AACD;AACS;AAChB;AAOlD;IAYE,0BAAoB,YAAyB,EAAU,GAAqB,EAAU,IAAY;QAA9E,iBAAY,GAAZ,YAAY,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QANlG,aAAQ,GAAG,KAAK,CAAC;IAMqF,CAAC;IAEvG,mCAAQ,GAAR;QAGE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,QAAQ,EAAE,CAAC,EAAE,CAAC;SACb,CACF;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,EAAE,CAAC;QAEzD,IAAI,CAAC,WAAW,EAAE;QAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC7C,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAGD,wCAAa,GAAb,UAAc,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,iBAAiB;IACnB,CAAC;IAED,sCAAW,GAAX;QAAA,iBAgBC;QAdC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAEvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAC9C,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAErE,CAAC;QACH,CAAC,CAAC,EAAC,2DAAI,CAAC,CAAC,CAAC,CACX;aACA,SAAS,EAAE;IACd,CAAC;IA3DU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAakC,0DAAW,EAAe,uEAAgB,EAAgB,oDAAM;OAZvF,gBAAgB,CA8D5B;IAAD,uBAAC;CAAA;AA9D4B;;;;;;;;;;;;ACV7B,+VAA+V,okD;;;;;;;;;;;ACA/V,mCAAmC,mBAAmB,EAAE,yBAAyB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAjD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,6CAAQ,GAAR;IACA,CAAC;IALU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,0BAA0B,CAOtC;IAAD,iCAAC;CAAA;AAPsC;;;;;;;;;;;;ACPvC,maAAma,igCAAigC,29C;;;;;;;;;;;ACAp6C,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,gD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACP7B,iVAAiV,wsE;;;;;;;;;;;ACAjV,+BAA+B,iBAAiB,EAAE,sBAAsB,kBAAkB,0BAA0B,wBAAwB,iBAAiB,EAAE,qBAAqB,mBAAmB,gBAAgB,EAAE,cAAc,iBAAiB,EAAE,mBAAmB,qBAAqB,qBAAqB,gBAAgB,EAAE,yBAAyB,gBAAgB,EAAE,WAAW,6CAA6C,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA5X;AAOlD;IAOE;QALA,YAAO,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,OAAO,CAAC;QACxB,aAAQ,GAAG,KAAK,CAAC;IAED,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IAVU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;;OACW,gBAAgB,CAY5B;IAAD,uBAAC;CAAA;AAZ4B;;;;;;;;;;;;ACP7B,yNAAyN,8CAA8C,+jEAA+jE,6BAA6B,62EAA62E,KAAK,wdAAwd,MAAM,42MAA42M,mBAAmB,+5B;;;;;;;;;;;ACAljX,yBAAyB,gBAAgB,EAAE,iBAAiB,gBAAgB,EAAE,oBAAoB,qBAAqB,iBAAiB,mBAAmB,iBAAiB,4BAA4B,sBAAsB,qBAAqB,YAAY,aAAa,4BAA4B,wBAAwB,eAAe,uBAAuB,EAAE,yBAAyB,gBAAgB,EAAE,+HAA+H,kBAAkB,uBAAuB,EAAE,oEAAoE,mCAAmC,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtmB;AACqB;AACnD;AAEP;AAOlD;IAYE,0BAAoB,EAAe,EAAU,GAAqB,EAAU,IAAY;QAApE,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAVjF,UAAK,GAAG,QAAQ,CAAC;QAQxB,gBAAW,GAAa,CAAC,oBAAoB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QACvE,aAAQ,GAAa,CAAC,mBAAmB,EAAE,iBAAiB,EAAE,UAAU,CAAC,CAAC;QAkH1E,SAAI,GAAG,CAAC,CAAC;IAjHmF,CAAC;IAE7F,mCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,iBAAiB,EAAE,CAAC,EAAE,CAAC;YACvB,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,mBAAmB,EAAC,CAAC,EAAE,CAAC;YACxB,2DAA2D;YAC3D,oCAAoC;SACnC,CACF;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC;QAEnD,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAGD,sCAAW,GAAX;QAAA,iBA+CC;QA7CC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAEvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CACxC,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACvE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAEzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACjE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACxE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAI9D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC9E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAGhF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACpE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAClF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAClF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBAClF,8CAA8C;gBAE9C,gCAAgC;gBAChC,8CAA8C;gBAC9C,6CAA6C;gBAC7C,oCAAoC;gBACpC,SAAS;gBAET,QAAQ;gBACR,IAAI;YAEN,CAAC;QACH,CAAC,CAAC,EAAC,2DAAI,CAAC,CAAC,CAAC,CACX;aACA,SAAS,EAAE;IACd,CAAC;IAGD,wCAAa,GAAb,UAAc,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACd,iBAAiB;IACnB,CAAC;IAGD,2DAA2D;IAC3D,wDAAwD;IACxD,qCAAU,GAAV,UAAW,OAAO;QAAlB,iBAgBC;QAfC,yDAAyD;QACzD,2BAA2B;QAC3B,sCAAsC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YACzC,oDAAoD;YACpD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAEvE,2EAA2E;YAE3E,wFAAwF;YACxF,0BAA0B;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAa,GAAb,UAAc,KAAuB;QACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QACxB,kCAAkC;IAEpC,CAAC;IAID,kCAAO,GAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,0CAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC;YAC7F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;gBACtE,EAAE,CAAC;IACb,CAAC;IA/IU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAawB,0DAAW,EAAe,uEAAgB,EAAgB,oDAAM;OAZ7E,gBAAgB,CAgJ5B;IAAD,uBAAC;CAAA;AAhJ4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX2E;AACpB;AACf;AACP;AAMnC;AAM3B;IA2BE,oCAAoB,EAAe,EAAU,GAAqB,EACzD,QAAqB,EAAS,MAAiB;QADpC,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QACzD,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAnBxD,YAAO,GAAW,mBAAmB,CAAC;QACtC,sBAAiB,GAAW,OAAO,CAAC;QACpC,WAAM,GAAY,IAAI,CAAC;QACvB,gBAAW,GAAY,IAAI,CAAC;QAC5B,aAAQ,GAAW,IAAI,CAAC;QACxB,uBAAkB,GAAkC,MAAM,CAAC;QAC3D,qBAAgB,GAAgC,QAAQ,CAAC;QAEzD,UAAU;QACA,gBAAW,GAAG,IAAI,0DAAY,EAAU,CAAC;QACzC,cAAS,GAAG,IAAI,0DAAY,EAAU,CAAC;IASW,CAAC;IAG7D,6CAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGD,yBAAyB;IACzB,6CAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aACzC,IAAI,CACH,0DAAG,CAAC,gBAAM;YACR,KAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QAC1B,CAAC,CAAC,EACF,mEAAY,CAAC,IAAI,CAAC,EAClB,0DAAG,CAAC,gBAAM;YACR,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,IAAI,KAAI,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBACvD,KAAI,CAAC,MAAM,EAAE,CAAC;YAChB,CAAC;QACH,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;IACf,CAAC;IAED,2DAA2D;IAE3D,6CAAQ,GAAR,UAAS,CAAC;QACR,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAGD,iDAAiD;IACjD,8CAAS,GAAT,UAAU,IAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAI,IAAI,SAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAI,CAAC,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,iDAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAE1C,IAAI,MAAM,GAAG,IAAI,mEAAiB,EAAE,CAAC;QACrC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACpD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,wFAAwF;QACxF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAC,EAAE,EAAC,MAAM,CAAC;IACvC,CAAC;IAED,8BAA8B;IACxB,2CAAM,GAAZ;;;;;;;wBAEI,qBAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;;wBAA5D,SAA4D,CAAC;wBAC7D,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;wBACtB,IAAI,CAAC,YAAY,CAAC,aAAa,EAAC,QAAQ,CAAC;;;;wBAEzC,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC;wBAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAG,CAAC,OAAO,CAAC;wBAChC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;;;;;;KAExB;IAGD,sBAAI,6CAAK;QADT,2BAA2B;aAC3B,UAAU,GAAG;YACX,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC;;;OAAA;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IAlGQ;QAAR,2DAAK,EAAE;;4DAAc;IACb;QAAR,2DAAK,EAAE;kCAAY,wDAAS;iEAAC;IAcpB;QAAT,4DAAM,EAAE;;mEAA0C;IACzC;QAAT,4DAAM,EAAE;;iEAAwC;IAqCjD;QADC,kEAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;8DAGpC;IA1DU,0BAA0B;QAHtC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;SAChC,CAAC;yCA4BwB,0DAAW,EAAe,uEAAgB;YAC/C,6DAAW,EAAiB,2DAAS;OA5B7C,0BAA0B,CAwGtC;IAAD,iCAAC;CAAA;AAxGsC;;;;;;;;;;;;ACfvC,4CAA4C,WAAW,2W;;;;;;;;;;;ACAvD,8uBAA8uB,0kBAA0kB,SAAS,yJAAyJ,uWAAuW,4SAA4S,6WAA6W,0eAA0e,sBAAsB,iPAAiP,2WAA2W,wLAAwL,0zBAA0zB,SAAS,2IAA2I,uLAAuL,iiBAAiiB,kLAAkL,uPAAuP,KAAK,4QAA4Q,uLAAuL,6SAA6S,iRAAiR,yUAAyU,2SAA2S,mQAAmQ,2JAA2J,6NAA6N,+fAA+f,qOAAqO,kmBAAkmB,0KAA0K,qFAAqF,8IAA8I,qFAAqF,ujBAAujB,SAAS,2IAA2I,kOAAkO,yNAAyN,0WAA0W,0WAA0W,gfAAgf,gwBAAgwB,2FAA2F,mCAAmC,KAAK,wDAAwD,kvBAAkvB,6jBAA6jB,SAAS,yqBAAyqB,6bAA6b,uUAAuU,IAAI,o6CAAo6C,qmEAAqmE,kQAAkQ,6CAA6C,KAAK,mVAAmV,gWAAgW,iSAAiS,wVAAwV,q1BAAq1B,yGAAyG,w5CAAw5C,sEAAsE,qNAAqN,wNAAwN,mNAAmN,yBAAyB,4FAA4F,yW;;;;;;;;;;;ACAlkwB,kCAAkC,mBAAmB,EAAE,cAAc,sBAAsB,EAAE,mBAAmB,qBAAqB,qBAAqB,gBAAgB,EAAE,yBAAyB,gBAAgB,EAAE,uBAAuB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtM;AACkC;AAClC;AACR;AAKvB;AACsC;AAejE;IA6BE,0BAAoB,EAAe,EAAU,GAAqB,EACzD,QAAqB,EAAS,MAAiB,EAC9C,cAA8B,EAC9B,MAAc;QAHJ,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QACzD,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAC9C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QA7BxB,aAAQ,GAAG,KAAK,CAAC;QACjB,gBAAW,GAAa,CAAC,oBAAoB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QACvE,aAAQ,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC7B,gBAAW,GAAa,CAAC,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEhG,cAAS,GAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAGlD,aAAa;QACb,YAAO,GAAG,KAAK,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAKhB,aAAQ,GAAG,SAAS,CAAC;QAErB,YAAO,GAAW,mBAAmB,CAAC;QACtC,sBAAiB,GAAW,OAAO,CAAC;QACpC,WAAM,GAAY,IAAI,CAAC;QACvB,gBAAW,GAAY,IAAI,CAAC;QAC5B,aAAQ,GAAW,IAAI,CAAC;QACxB,uBAAkB,GAAkC,MAAM,CAAC;QAC3D,qBAAgB,GAAgC,QAAQ,CAAC;IAM7B,CAAC;IAE7B,mCAAQ,GAAR;QAAA,iBAsCC;QApCC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,iBAAiB,EAAE,CAAC,EAAE,CAAC;YACvB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,4BAA4B;YAC5B,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC/B,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,MAAc;YACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,CACjC,CAAC;YACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtC,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAGD,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,wCAAa,GAAb;QACE,4DAA4D;QAC5D,gCAAgC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACxB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE;gBACX,KAAK,EAAE,IAAI,CAAC,UAAU;aACvB;YACD,mBAAmB,EAAE,OAAO;YAC3B,kDAAkD;YAClD,kBAAkB,EAAE,KAAK;YACzB,4BAA4B;SAC7B,CAAC,CAAC;IAEL,CAAC;IAED,uCAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAE1C,IAAI,MAAM,GAAG,IAAI,mEAAiB,EAAE,CAAC;QACrC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACpD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAExF,CAAC;IAED,qCAAU,GAAV;QACE,kEAAkE;QAElE,gDAAgD;QAChD,6CAA6C;QAC7C,MAAM;IACR,CAAC;IAED,kCAAO,GAAP,UAAQ,GAAG;QACT,GAAG,EAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;YACjB,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK,CAAC;QACrB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,sBAAI,wCAAU;aAAd;YACE,sDAAsD;YACtD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAc;QAC/C,CAAC;;;OAAA;IAED,sBAAI,6CAAe;aAAnB;YACE,sDAAsD;YACtD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAc;QACpD,CAAC;;;OAAA;IAED,qBAAqB;IAErB,kDAAkD;IAClD,IAAI;IAEJ,mCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAG,CAAC;YACF,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE,EAAE;aACf,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;QACpB,CAAC;IAEH,CAAC;IAED,wCAAa,GAAb;QAEE,IAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,kBAAkB,EAAE,EAAE;SACvB,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAED,eAAe;IAEf,kCAAkC;IAClC,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;IAChB,OAAO;IAEP,iCAAiC;IACjC,IAAI;IAEJ,mBAAmB;IACnB,gCAAgC;IAChC,IAAI;IAEJ,2CAAgB,GAAhB,UAAiB,CAAC;QAChB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,sCAAW,GAAX,UAAY,CAAC;QACX,+BAA+B;QAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEK,mCAAQ,GAAd;;;;;;wBACQ,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;;;;6BAK9B,IAAI,CAAC,QAAQ,EAAb,wBAAa;wBACf,qBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC;;wBAA9E,SAA8E;;4BAI9E,qBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;;wBAAnE,SAAmE;;;wBAGrE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAC,EAAE,CAAC;wBAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;;;wBAEpB,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC;;;;;;KAGrB;IAGD,0BAA0B;IAC1B,yBAAyB;IAEzB,yCAAyC;IAEzC,UAAU;IACV,4DAA4D;IAC5D,2BAA2B;IAC3B,mBAAmB;IACnB,yBAAyB;IACzB,MAAM;IAEN,0BAA0B;IAC1B,IAAI;IAEJ,sCAAW,GAAX;QAAA,iBA0FC;QAxFC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE/C,oEAAoE;QACpE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAC7D,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAE/E,kGAAkG;gBAClG,8MAA8M;gBAC9M,4DAA4D;gBAC5D,gCAAgC;gBAChC,kBAAkB;gBAClB,oBAAoB;gBACpB,mBAAmB;gBACnB,IAAI;gBACJ,wCAAwC;gBAExC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzD,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,cAAI;wBACzB,IAAM,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAC1B,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;4BAC9B,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;yBACjC,CAAC;wBACF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC9B,CAAC,CAAC;gBACJ,CAAC;gBAGD,wBAAwB;gBACxB,qCAAqC;gBACrC,4EAA4E;gBAC5E,oCAAoC;gBACpC,8BAA8B;gBAC9B,gCAAgC;gBAChC,gCAAgC;gBAChC,SAAS;gBACT,mCAAmC;gBACnC,OAAO;gBACP,IAAI;gBAEJ,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,cAAI;wBAC9B,IAAM,UAAU,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAE/B,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAC1B,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACtB,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAC1B,+DAA+D;4BAC/D,QAAQ,EAAE,IAAI,0DAAW,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;4BACrD,oFAAoF;4BACpF,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BAC5B,kBAAkB,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;yBACjD,CAAC;wBACF,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACxC,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,EAAC;oBACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACpC,CAAC;gBACD,8BAA8B;gBAC9B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC;YACD,IAAI,EAAC;gBACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,EACF,2DAAI,CAAC,CAAC,CAAC,CACR;aACE,SAAS,EAAE;IAChB,CAAC;IAzTU,gBAAgB;QAP5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAgCwB,0DAAW,EAAe,uEAAgB;YAC/C,6DAAW,EAAiB,2DAAS;YAC9B,8DAAc;YACtB,sDAAM;OAhCb,gBAAgB,CA0T5B;IAAD,uBAAC;CAAA;AA1T4B;AAgU7B;IAEE,qCACS,SAAoD,EAC3B,IAAgB;QADzC,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEvD,+CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IARU,2BAA2B;QAJvC,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;;SAE3C,CAAC;QAKG,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;OAHrB,2BAA2B,CAUvC;IAAD,kCAAC;CAAA;AAVuC;AAYxC,eAAe;AACf,+CAA+C;AAC/C,uDAAuD;AACvD,KAAK;AACL,8CAA8C;;;;;;;;;;;;ACxW9C,wKAAwK,kBAAkB,iBAAiB,iBAAiB,yFAAyF,wGAAwG,uGAAuG,upC;;;;;;;;;;;ACApgB,gIAAgI,YAAY,46DAA46D,SAAS,6NAA6N,+sBAA+sB,4tCAA4tC,yhBAAyhB,0uBAA0uB,sBAAsB,uWAAuW,yhBAAyhB,oRAAoR,msCAAmsC,SAAS,+MAA+M,YAAY,iQAAiQ,q4BAAq4B,4PAA4P,2UAA2U,KAAK,8ZAA8Z,iQAAiQ,6ZAA6Z,maAAma,iQAAiQ,23BAA23B,yXAAyX,+OAA+O,YAAY,8XAA8X,uvBAAuvB,sYAAsY,s5BAAs5B,sQAAsQ,6GAA6G,kNAAkN,6GAA6G,2xBAA2xB,SAAS,+MAA+M,iXAAiX,+UAA+U,shBAAshB,shBAAshB,8tBAA8tB,m+BAAm+B,0GAA0G,aAAa,svBAAsvB,YAAY,qxBAAqxB,WAAW,o3CAAo3C,+dAA+d,0JAA0J,2rDAA2rD,uPAAuP,w5BAAw5B,0vBAA0vB,wKAAwK,eAAe,wIAAwI,eAAe,yLAAyL,o9BAAo9B,+WAA+W,qEAAqE,KAAK,ifAAif,8fAA8f,uZAAuZ,+wBAA+wB,usBAAusB,85BAA85B,+/CAA+/C,urBAAurB,uLAAuL,+WAA+W,y8BAAy8B,+WAA+W,qEAAqE,KAAK,0kBAA0kB,i7BAAi7B,8ZAA8Z,0sDAA0sD,SAAS,yQAAyQ,uBAAuB,4GAA4G,wBAAwB,iDAAiD,4BAA4B,gE;;;;;;;;;;;ACAp7yC,kCAAkC,mBAAmB,EAAE,cAAc,sBAAsB,EAAE,mBAAmB,qBAAqB,qBAAqB,gBAAgB,EAAE,yBAAyB,gBAAgB,EAAE,uBAAuB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvK;AACG;AACnC;AAEP;AACe;AAKtC;AAc3B;IAuBE,gCAAoB,EAAe,EAAU,GAAqB,EAC/C,QAAqB,EAAS,MAAiB,EAC5C,cAA8B,EAChC,MAAc,EAAU,IAAY;QACtD,yCAAyC;QAJvB,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAkB;QAC/C,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QApBxD,gBAAW,GAAa,CAAC,oBAAoB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QACvE,cAAS,GAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAGlD,YAAO,GAAW,mBAAmB,CAAC;QACtC,sBAAiB,GAAW,OAAO,CAAC;QACpC,WAAM,GAAY,IAAI,CAAC;QACvB,gBAAW,GAAY,IAAI,CAAC;QAC5B,aAAQ,GAAW,IAAI,CAAC;QACxB,uBAAkB,GAAkC,MAAM,CAAC;QAC3D,qBAAgB,GAAgC,QAAQ,CAAC;QACzD,aAAQ,GAAU,SAAS,CAAC;QAErB,UAAK,GAAG,QAAQ,CAAC;IAUxB,CAAC;IAED,2DAA2D;IAC3D,wDAAwD;IACxD,2CAAU,GAAV,UAAW,OAAO;QAAlB,iBAQC;QAPC,yDAAyD;QACzD,2BAA2B;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAoB,GAApB,UAAqB,OAAO,EAAE,CAAC;QAA/B,iBAYC;QAVC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,yEAAyE;YACzE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3C,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,+CAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,8CAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,yCAAQ,GAAR;QAAA,iBA0CC;QAxCC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,MAAc;YACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC,CACjC,CAAC;YACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACxC,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACtB,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,eAAe,EAAE,CAAC,EAAE,CAAC;YACrB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,iBAAiB,EAAE,CAAC,EAAE,CAAC;YACvB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,4BAA4B;YAC5B,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,yBAAyB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7C,CAAC;QACF,6DAA6D;QAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC;QAEtE,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,4CAAW,GAAX;QAAA,iBA8GC;QA5GC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAEvB,oEAAoE;QACpE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAC3D,0DAAG,CAAC,cAAI;YACN,+BAA+B;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAElC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBACjF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACzE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC7E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAE/E,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzD,2EAA2E;oBAE3E,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,cAAI;wBACzB,IAAM,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAC1B,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;4BAC9B,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;yBACjC,CAAC;wBACF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE9B,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,CACJ,CAAC;oBACC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;oBACxB,iEAAiE;gBAEnE,CAAC;gBAED,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAG3E,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,cAAI;wBAC9B,IAAM,UAAU,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAE/B,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAC1B,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACtB,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAC1B,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC1F,MAAM,EAAE,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACpF,iBAAiB,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;4BAC9C,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BAC5B,kBAAkB,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;yBACjD,CAAC;wBACF,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACxC,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,EAAC;oBACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACpC,CAAC;gBAKD,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;oBAC/F,IAAI,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,cAAI;wBAC5C,IAAM,SAAS,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;4BAE9B,qBAAqB,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;4BACtD,gBAAgB,EAAG,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACnH,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BAChC,iBAAiB,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;yBAE/C,CAAC;wBACF,KAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACtD,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,EAAC;oBACH,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC;gBACnD,CAAC;gBAED,wBAAwB;YAC1B,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,uBAAuB;gBACvB,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvB,IAAM,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;wBAC1B,SAAS,EAAE,EAAE;wBACb,UAAU,EAAE,EAAE;qBACf,CAAC;oBACF,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;YACL,CAAC;QACH,CAAC,CAAC,EACF,2DAAI,CAAC,CAAC,CAAC,CACR;aACE,SAAS,EAAE;IAChB,CAAC;IAED,2CAAU,GAAV,UAAW,UAAU;QACnB,IAAI,UAAU,GAAC,EAAE;QACjB,EAAE,EAAC,UAAU,IAAI,IAAI,CAAC,EAAC;YACrB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAE,UAAU,GAAE,IAAI,CAAC,CAAC;YACzC,UAAU,GAAG,MAAM,CAAC,cAAc,EAAE;QACtC,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAED,8CAAa,GAAb;QACE,4DAA4D;QAC5D,gCAAgC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACxB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE;gBACX,KAAK,EAAE,IAAI,CAAC,UAAU;aACvB;YACD,mBAAmB,EAAE,OAAO;YAC5B,kDAAkD;YAClD,kBAAkB,EAAE,KAAK;YACzB,4BAA4B;SAC7B,CAAC,CAAC;IAEN,CAAC;IAEC,0CAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjB,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IAED,6CAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAE1C,IAAI,MAAM,GAAG,IAAI,mEAAiB,EAAE,CAAC;QACrC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChD,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACpD,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAExF,CAAC;IAED,2CAAU,GAAV,UAAW,OAAe,EAAE,QAAe;QACzC,iEAAiE;QADnE,iBA4BC;QAzBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE;YAC7D,IAAI,EAAE;gBACJ,UAAU,EAAE,OAAO;gBACnB,WAAW,EAAE,eAAe,GAAG,QAAQ;aACxC;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,oBAAkB,MAAQ,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;YAC5B,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CACnB,CAAC;gBACC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;gBACnC,MAAM,CAAC,CAAC,OAAO,CAAC,CAChB,CAAC;oBACC,KAAK,YAAY;wBACf,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;wBAC7B,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;wBAC/B,KAAK,CAAC;oBACR,KAAK,WAAW;wBACd,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;wBAC9B,KAAK,CAAC;gBACV,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,8CAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAc;QAC/C,CAAC;;;OAAA;IAED,sBAAI,mDAAe;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAc;QACpD,CAAC;;;OAAA;IAED,sBAAI,kEAA8B;aAAlC;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,2BAA2B,CAAc;QAClE,CAAC;;;OAAA;IAED,8CAAa,GAAb,UAAc,CAAC;QACb,iBAAiB;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,yCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAG,CAAC;YACF,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE,EAAE;aACf,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;QACpB,CAAC;IAEH,CAAC;IAED,0CAAS,GAAT,UAAU,SAA2B,EAAE,YAA8B;QACnE,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CACjC,CAAC;YACC,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,SAAS,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5B,UAAU,EAAE,CAAC,EAAE,CAAC;aACjB,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,8CAAa,GAAb,UAAc,YAA8B,EAAE,KAAwB,EAAE,OAAyB;QAC/F,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;QACvC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAC7B,CAAC;YACC,IAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC/B,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;gBACtB,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,EAAE;gBACV,iBAAiB,EAAE,EAAE;gBACrB,kBAAkB,EAAE,EAAE;aACvB,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CACJ,CAAC;YAEC,wCAAwC;YACxC,+CAA+C;QACjD,CAAC;IACH,CAAC;IAED,0CAAS,GAAT,UAAU,UAA6B,EAAE,eAAiC;QAExE,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAClC,CAAC;YACC,IAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,qBAAqB,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;gBACzC,gBAAgB,EAAE,EAAE;gBACpB,UAAU,EAAE,EAAE;gBACd,iBAAiB,EAAE,EAAE;aACtB,CAAC;YAEF,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CACJ,CAAC;YAEC,wCAAwC;YACxC,+CAA+C;QACjD,CAAC;IACH,CAAC;IAGD,iDAAgB,GAAhB,UAAiB,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAC,QAAQ,CAAC;IACnD,CAAC;IAED,4CAAW,GAAX,UAAY,CAAC;QACX,+BAA+B;QAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,gDAAe,GAAf,UAAgB,CAAC;QACf,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAC,QAAQ,CAAC;IAC/C,CAAC;IApZU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAwBwB,0DAAW,EAAe,uEAAgB;YACrC,6DAAW,EAAiB,2DAAS;YAC5B,8DAAc;YACxB,sDAAM,EAAgB,oDAAM;OA1B7C,sBAAsB,CAsZlC;IAAD,6BAAC;CAAA;AAtZkC;AA8ZnC;IACE,oCAA4C,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IADrD,0BAA0B;QAJtC,+DAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;;SAE1C,CAAC;QAEa,uEAAM,CAAC,iEAAe,CAAC;;OADzB,0BAA0B,CAEtC;IAAD,iCAAC;CAAA;AAFsC;;;;;;;;;;;;ACtbvC,i9CAAi9C,eAAe,4TAA4T,cAAc,QAAQ,gBAAgB,qUAAqU,gBAAgB,sUAAsU,iBAAiB,orBAAorB,2BAA2B,qdAAqd,eAAe,kDAAkD,cAAc,kDAAkD,iBAAiB,2K;;;;;;;;;;;ACApyH,0DAA0D,iBAAiB,kBAAkB,uBAAuB,EAAE,qBAAqB,oBAAoB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7G;AAEkB;AACG;AAC1D;AAEK;AASpC;IAgBE,6BAAoB,GAAqB,EAAS,MAAiB;QAA/C,QAAG,GAAH,GAAG,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAW;QAdnE,gEAAgE;QAChE,qBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAQ7C,eAAU,GAAG,CAAC,CAAC;IAKwD,CAAC;IAExE,oCAAM,GAAN;QACE,IAAM,MAAM,GAAG;YACb,IAAI,EAAE,0CAAU,CAAC,QAAQ,EAAE;YAC3B,GAAG,EAAE,4CAAY,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;YAC9C,KAAK,EAAE,8CAAc,CAAC,KAAK,EAAE;YAC7B,MAAM,EAAE,4CAAY,CAAC,MAAM,EAAE;YAC7B,GAAG,EAAE,4CAAY,CAAC,YAAY,CAAC,EAAE,CAAC;SACnC;QACD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;IAC5D,CAAC;IAED,6CAAe,GAAf;QAAA,iBAkBC;QAhBC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAM,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAEjC,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QAC7C,CAAC,CAAC;QAEF,uCAAuC;QACvC,wCAAwC;QAExC,sDAAsD;QACtD,wCAAwC;QACxC,kDAAkD;QAClD,OAAO;IAET,CAAC;IAED,yCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;QACjC,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IAEvC,CAAC;IAED,uCAAS,GAAT;QAAA,iBAUC;QAPC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAM,QAAQ,CAAC,CAAC;QAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,iBAAO;YAClE,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC;YACjC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAM,IAAI,QAAC,EAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAC,CAAC,EAA/B,CAA+B,CAAC;QAC7D,CAAC,CAAC,CACH;IAEH,CAAC;IAED,0BAA0B;IAC1B,6DAA6D;IAC7D,qBAAqB;IACrB,gBAAgB;IAChB,OAAO;IACP,GAAG;IAEH,wCAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,MAAM,CAAC,IAAI,CAAC,GAAG;IACjB,CAAC;IAED,uCAAS,GAAT,UAAU,GAAG;QACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAvEmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;qDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;0DAAC;IAdtC,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAkByB,uEAAgB,EAAiB,2DAAS;OAhBxD,mBAAmB,CAsF/B;IAAD,0BAAC;CAAA;AAtF+B;;;;;;;;;;;;ACfhC,wHAAwH,0pCAA0pC,eAAe,0BAA0B,cAAc,0BAA0B,iBAAiB,w9BAAw9B,eAAe,GAAG,gBAAgB,mPAAmP,cAAc,QAAQ,gBAAgB,4OAA4O,iBAAiB,sKAAsK,2BAA2B,4BAA4B,iBAAiB,uP;;;;;;;;;;;ACAlnG,sCAAsC,gBAAgB,EAAE,8BAA8B,iBAAiB,sBAAsB,EAAE,sBAAsB,kBAAkB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACArG;AAEkB;AACG;AAWzF;IAcE,mCAAoB,GAAqB,EAAS,MAAiB;QAA/C,QAAG,GAAH,GAAG,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAW;QAbnE,qBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAQ7C,eAAU,GAAG,CAAC,CAAC;IAKwD,CAAC;IACxE,mDAAe,GAAf;QAAA,iBASC;QAPC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAM,QAAQ,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAEjC,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IAED,+CAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;QACjC,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IAEvC,CAAC;IAED,8CAAU,GAAV,UAAW,KAAK,EAAE,IAAI;QACpB,MAAM,CAAC,IAAI,CAAC,GAAG;IACjB,CAAC;IAED,6CAAS,GAAT,UAAU,GAAG;QACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IA/BmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;2DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;gEAAC;IAZtC,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAeyB,uEAAgB,EAAiB,2DAAS;OAdxD,yBAAyB,CA2CrC;IAAD,gCAAC;CAAA;AA3CqC;;;;;;;;;;;;ACdtC,sxBAAsxB,cAAc,qIAAqI,eAAe,4BAA4B,cAAc,+D;;;;;;;;;;;ACAl+B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACM;AACE;AAEV;AACwB;AAExE,IAAM,IAAI,GAAG,8EAAY,CAAM,SAAS,CAAC,CAAC;AAO1C;IAIE,0BACU,GAAqB,EACrB,IAAU,EACV,YAAmB,EACnB,KAAoB;QAHpB,QAAG,GAAH,GAAG,CAAkB;QACrB,SAAI,GAAJ,IAAI,CAAM;QACV,iBAAY,GAAZ,YAAY,CAAO;QACnB,UAAK,GAAL,KAAK,CAAe;IAC1B,CAAC;IAEL,mCAAQ,GAAR;QAAA,iBAsBC;QArBA,2BAA2B;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;QAElB,oCAAoC;QACpC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,CAAC;QAE/D,uDAAuD;QACvD,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,EAAS,CAAC,CAAC;QAC/C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACnB,QAAQ,CAAC,IAAI,CACX,0DAAG,CAAC,cAAI;gBACN,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC,CACH;iBACA,SAAS,EAAE,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC;IAGH,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;QAEvD,gBAAgB;QAChB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC,CAAC;QACpF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,mEAAmE,EAAE,CAAC,CAAC;QACnI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;IAClF,CAAC;IA5CU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMe,uEAAgB;YACf,8DAAI;YACI,+DAAK;YACZ,uEAAa;OARnB,gBAAgB,CA8C5B;IAAD,uBAAC;CAAA;AA9C4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdY;AACM;AACA;AACM;AAEkB;AACH;AACH;AACqB;AACe;AACxB;AACT;AACH;AACF;AAEL;AACqB;AAKf;AACN;AACmB;AACR;AACG;AACA;AACD;AACR;AACU;AACY;AACtB;AACkB;AACJ;AACH;AACA;AACY;AACZ;AACR;AACwB;AACc;AAC9B;AAC1E,iEAAiE;AACjE,mBAAmB;AA0DnB;IAAA;IAAuB,CAAC;IAAX,QAAQ;QAxDpB,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,4DAAY,EAAE,kEAAmB;gBACvD,wEAAa;gBACb,6FAAuB;gBACvB,kEAAe,EAAE,oEAAiB,EAAE,gEAAa;gBACjD,iEAAc,EAAE,oEAAiB;gBACjC,mEAAgB,EAAE,kEAAe;gBACjC,mEAAgB,EAAE,sEAAmB,EAAC,qEAAkB;gBACxD,gEAAa,EAAE,gEAAa,EAAE,iEAAc;gBAC5C,gEAAa,EAAE,qEAAkB,EAAE,sEAAmB;gBACtD,iEAAc,EAAE,qEAAkB,EAAE,gEAAa;gBACjD,qEAAkB,EAAE,oEAAiB,EAAE,kEAAe,EAAE,gEAAa;gBACrE,gEAAa,EAAE,gEAAa,EAAE,mEAAgB,EAAE,mEAAgB;gBAChE,oCAAoC;aACrC;YACD,YAAY,EAAE;gBACZ,mFAAkB;gBAClB,gFAAiB;gBACjB,6EAAgB;gBAChB,kGAAuB;gBACvB,iHAA4B;gBAC5B,yFAAoB;gBACpB,iFAAiB;gBACjB,8EAAgB;gBAChB,4EAAgB;gBAChB,uEAAiB;gBACjB,0FAA0B;gBAC1B,kFAAkB;gBAClB,qFAAmB;gBACnB,qFAAmB;gBACnB,oFAAkB;gBAClB,4EAAgB;gBAChB,uFAA2B;gBAC3B,kGAA0B;gBAC1B,4EAAY;gBACZ,8FAAsB;gBACtB,0FAAiB;gBACjB,uFAAgB;gBAChB,uFAAgB;gBAChB,mGAAoB;gBACpB,uFAAgB;gBAChB,+EAAqB;gBACrB,uGAAyB;gBACzB,qHAA0B;gBAC1B,uFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,6EAAgB;gBAChB,kGAAuB;gBACvB,iHAA4B;gBAC5B,yFAAoB;gBACpB,iFAAiB;aAClB;YACD,eAAe,EAAE,CAAE,uFAA2B,EAAE,kGAA0B,EAAE,4EAAY,CAAC;YACzF,SAAS,EAAE,EAAE;SACd,CAAC;OACW,QAAQ,CAAG;IAAD,eAAC;CAAA;AAAH;;;;;;;;;;;;ACrGrB,mdAAmd,oBAAoB,2PAA2P,uBAAuB,0pBAA0pB,oBAAoB,kSAAkS,uBAAuB,4UAA4U,sBAAsB,wH;;;;;;;;;;;ACAlkE,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACuC;AAEnC;AAUtD;IAsBE,2BAAoB,EAAe,EAAU,IAAiB;QAA1C,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAnB9D,YAAO,GAAG,IAAI,CAAC,CAAC,iCAAiC;QACjD,cAAS,GAAG,KAAK,CAAC,CAAC,+CAA+C;QAClE,eAAU,GAAe;YACvB,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;SACf,CAAC;QACF,uBAAkB,GAAG;YACnB,OAAO,EAAE;gBACP,UAAU,EAAE,oBAAoB;gBAChC,OAAO,EAAE,6BAA6B;aACvC;YACD,UAAU,EAAE;gBACV,UAAU,EAAE,uBAAuB;gBACnC,SAAS,EAAE,wDAAwD;gBACnE,WAAW,EAAE,8CAA8C;gBAC3D,WAAW,EAAE,kDAAkD;aAChE;SACF,CAAC;IAEgE,CAAC;IAEnE,oCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,yCAAa,GAAb;QACE,uDAAuD;QACvD,uCAAuC;IACzC,CAAC;IAED,qCAAS,GAAT;QAAA,iBAeC;QAdC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,OAAO,EAAE,CAAC,EAAE,EAAE;oBACZ,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC;YACF,UAAU,EAAE,CAAC,EAAE,EAAE;oBACf,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC;oBAC/D,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAI,IAAK,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,4BAA4B;IACrD,CAAC;IAED,4CAA4C;IAC5C,0CAAc,GAAd,UAAe,IAAU;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QAC/B,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,GAAG,CAAC,CAAC,IAAM,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChH,wCAAwC;gBACxC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAChD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;wBACnB,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;4BACjC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAE,CAAC,CAAC,CAAC;gCAC/D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAQ,QAAoC,CAAC,GAAG,CAAC,MAAG,CAAC;4BAC7E,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAnFU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAuBwB,0DAAW,EAAgB,8DAAW;OAtBnD,iBAAiB,CAoF7B;IAAD,wBAAC;CAAA;AApF6B;;;;;;;;;;;;ACb9B,4NAA4N,wnC;;;;;;;;;;;ACA5N,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACD;AAGa;AAOtD;IAEE,4BAAmB,IAAiB,EAChB,MAAc;QADf,SAAI,GAAJ,IAAI,CAAa;QAChB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,gBAAgB;IAEV,6CAAgB,GAAtB;;;;4BACE,qBAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;wBAA7B,SAA6B,CAAC;wBACvB,qBAAM,IAAI,CAAC,WAAW,EAAE;4BAA/B,sBAAO,SAAwB,EAAC;;;;KACjC;IAEK,6CAAgB,GAAtB;;;;4BACE,qBAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;wBAA7B,SAA6B,CAAC;wBACvB,qBAAM,IAAI,CAAC,WAAW,EAAE;4BAA/B,sBAAO,SAAwB,EAAC;;;;KACjC;IAEK,+CAAkB,GAAxB;;;;4BACE,qBAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;;wBAA/B,SAA+B,CAAC;wBAChC,qBAAM,IAAI,CAAC,WAAW,EAAE;;wBAAxB,SAAwB,CAAC;;;;;KAC1B;IAEK,8CAAiB,GAAvB;;;;4BACE,qBAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;;wBAA9B,SAA8B,CAAC;wBACxB,qBAAM,IAAI,CAAC,WAAW,EAAE;4BAA/B,sBAAO,SAAwB,EAAC;;;;KACjC;IAED,qBAAqB;IAEf,8CAAiB,GAAvB;;;;4BACE,qBAAM,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;;wBAAhC,SAAgC,CAAC;wBAC1B,qBAAM,IAAI,CAAC,WAAW,EAAE;4BAA/B,sBAAO,SAAwB,EAAC;;;;KACjC;IAED,UAAU;IAEF,wCAAW,GAAnB;QACE,yEAAyE;QACzE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAvCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGyB,8DAAW;YACR,sDAAM;OAHvB,kBAAkB,CAyC9B;IAAD,yBAAC;CAAA;AAzC8B;;;;;;;;;;;;ACX/B,sEAAsE,kcAAkc,oBAAoB,oKAAoK,YAAY,sG;;;;;;;;;;;ACA5sB,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEY;AAOtD;IAEE,8BAAmB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAEzC,qCAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IANU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGyB,8DAAW;OAFzB,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACTjC,6HAA6H,YAAY,2BAA2B,eAAe,0BAA0B,uBAAuB,qFAAqF,gBAAgB,MAAM,gBAAgB,uDAAuD,kCAAkC,S;;;;;;;;;;;ACAxb,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACQ;AAa1D;IAME,6BAAoB,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;IAAI,CAAC;IAE9C,sCAAQ,GAAR;QAEE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAE3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;IAEnD,CAAC;IAdU,mBAAmB;QAR/B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAUyB,uEAAgB;OAN9B,mBAAmB,CAgB/B;IAAD,0BAAC;CAAA;AAhB+B;;;;;;;;;;;;;;;;;;;;;;;;;ACd2D;AAK3F;IAKE;QAHU,YAAO,GAAI,IAAI,0DAAY,EAAY,CAAC;QACxC,YAAO,GAAI,IAAI,0DAAY,EAAW,CAAC;IAEjC,CAAC;IAGjB,kCAAM,GAAN,UAAO,MAAM;QACX,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAGD,sCAAU,GAAV,UAAW,MAAM;QACf,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAGD,uCAAW,GAAX,UAAY,MAAM;QAChB,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAtBS;QAAT,4DAAM,EAAE;;sDAAyC;IACxC;QAAT,4DAAM,EAAE;;sDAAwC;IAKjD;QADC,kEAAY,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;mDAKhC;IAGD;QADC,kEAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;uDAIpC;IAGD;QADC,kEAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;wDAIrC;IAxBU,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;;OACW,iBAAiB,CA0B7B;IAAD,wBAAC;CAAA;AA1B6B;;;;;;;;;;;;;;;;;;;;;;ACLsB;AAEpD,IAAM,eAAe,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9E,IAAM,oBAAoB,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;AAMpI;IAAA;IAiBA,CAAC;IAfC,gCAAS,GAAT,UAAU,WAAmB,EAAE,QAAiB;QAC9C,IAAM,KAAK,GAAG,QAAQ;YACpB,CAAC,CAAC,oBAAoB;YACtB,CAAC,CAAC,eAAe,CAAC;QAEpB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/D,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE1C,IAAM,IAAI,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,oBAAoB;QACtE,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,wBAAwB;QAC5E,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAI,aAAa,SAAI,IAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACjD,CAAC;IAfU,YAAY;QAHxB,0DAAI,CAAC;YACJ,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,YAAY,CAiBxB;IAAD,mBAAC;CAAA;AAjBwB;;;;;;;;;;;;ACTzB,g/BAAg/B,gBAAgB,yEAAyE,oCAAoC,MAAM,8BAA8B,wjB;;;;;;;;;;;ACAjpC,6BAA6B,kBAAkB,wBAAwB,4BAA4B,2BAA2B,qBAAqB,kBAAkB,+BAA+B,uBAAuB,sBAAsB,mBAAmB,EAAE,wBAAwB,gCAAgC,gCAAgC,EAAE,2BAA2B,uBAAuB,EAAE,sCAAsC,gCAAgC,EAAE,SAAS,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtc;AAIpB;AAC4B;AAEX;AAO/C;IAeE,6BACU,OAA2B,EAC3B,EAAoB;QADpB,YAAO,GAAP,OAAO,CAAoB;QAC3B,OAAE,GAAF,EAAE,CAAkB;IAC3B,CAAC;IAEJ,yCAAW,GAAX,UAAY,KAAc;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,yCAAW,GAAX,UAAY,KAAe;QAA3B,iBAiCC;QAhCC,kBAAkB;QAClB,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE3B,iCAAiC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC;YACxC,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;YAC3C,MAAM,CAAC;QACT,CAAC;QAED,mBAAmB;QACnB,IAAM,IAAI,GAAG,UAAQ,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,SAAI,IAAI,CAAC,IAAM,CAAC;QAEzD,4BAA4B;QAC5B,IAAM,cAAc,GAAG,EAAE,GAAG,EAAE,6BAA6B,EAAE,CAAC;QAE9D,gBAAgB;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,cAAc,kBAAE,CAAC,CAAC;QAEhE,sBAAsB;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAC9C,0DAAG,CAAC,cAAI;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9C,iCAAiC;gBACjC,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,QAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YACpE,CAAC;QACH,CAAC,CAAC,EACF,+DAAQ,CAAC,cAAM,YAAI,CAAC,WAAW,GAAG,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,EAA1D,CAA0D,CAAE,CAC5E,CAAC;QAGF,0BAA0B;IAC5B,CAAC;IAED,0CAA0C;IAC1C,sCAAQ,GAAR,UAAS,QAAQ;QACf,MAAM,CAAC,CACL,QAAQ,CAAC,KAAK,KAAK,SAAS;YAC5B,QAAQ,CAAC,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAChD,CAAC;IACJ,CAAC;IAjEU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAiBmB,uEAAkB;YACvB,uEAAgB;OAjBnB,mBAAmB,CAkE/B;IAAD,0BAAC;CAAA;AAlE+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACdS;AACM;AAC2B;AAChB;AACV;AAQhD;IAAA;IAA6B,CAAC;IAAjB,aAAa;QANzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE,CAAC,sFAAmB,EAAE,sEAAiB,EAAE,4DAAY,CAAC;SACrE,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACZ1B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,gCAAgC;QAC5C,WAAW,EAAE,uCAAuC;QACpD,SAAS,EAAE,gBAAgB;QAC3B,aAAa,EAAE,4BAA4B;QAC3C,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACtBpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC5C,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;SAClD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './core/auth.guard';\nimport { UserLoginComponent } from './ui/user-login/user-login.component';\nimport { HomePageComponent } from './ui/home-page/home-page.component';\nimport { NotesListComponent } from './notes/notes-list/notes-list.component';\nimport { UploadPageComponent } from './uploads/upload-page/upload-page.component';\n\nimport { SsrPageComponent } from './ui/ssr-page/ssr-page.component';\nimport { PostjobComponent } from './ui/postjob/postjob.component';\nimport { AddresumeComponent } from './ui/addresume/addresume.component';\nimport { ViewresumeComponent } from './ui/viewresume/viewresume.component';\nimport { ResumelistComponent } from './ui/resumelist/resumelist.component';\nimport { AdListingComponent } from './ui/ad-listing/ad-listing.component';\nimport { ProfileComponent } from './ui/profile/profile.component';\nimport { ProfileresumeComponent } from './ui/profileresume/profileresume.component';\nimport { WelcomeComponent } from './ui/onboarding/welcome/welcome.component';\nimport { LocationComponent } from './ui/onboarding/location/location.component';\nimport { LookingComponent } from './ui/onboarding/looking/looking.component';\nimport { OnboardingprofileComponent } from './ui/onboarding/onboardingprofile/onboardingprofile.component';\n\nimport { SearchcandidatesComponent } from './ui/searchcandidates/searchcandidates.component';\nimport { PreferencesComponent } from './ui/onboarding/preferences/preferences.component';\nimport { BuilderComponent } from './ui/onboarding/builder/builder.component';\n\nconst routes: Routes = [\n  { path: '', component: HomePageComponent },\n  { path: 'login', component: UserLoginComponent },\n  { path: 'notes', component: NotesListComponent,  canActivate: [AuthGuard] },\n  { path: 'uploads',  component: UploadPageComponent,  canActivate: [AuthGuard] },\n  { path: 'postjob', component: PostjobComponent},\n  { path: 'addresume', component: AddresumeComponent },\n  { path: 'viewresume', component: ViewresumeComponent },\n  { path: 'resumelist', component: ResumelistComponent },\n  { path: 'adlisting', component: AdListingComponent },\n  { path: 'ssr', component: SsrPageComponent },\n  { path: 'profile', component: ProfileComponent},\n  { path: 'profileresume', component: ProfileresumeComponent},\n  { path: 'onboarding/welcome', component:WelcomeComponent},\n  { path: 'onboarding/location', component: LocationComponent},\n  { path: 'onboarding/looking', component: LookingComponent},\n  { path: 'searchcandidates', component: SearchcandidatesComponent},\n  { path: 'onboarding/profile', component: OnboardingprofileComponent},\n  { path: 'onboarding/preferences', component: PreferencesComponent},\n  { path: 'onboarding/builder', component: BuilderComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div id=\\\"wrapper\\\" class=\\\"content\\\">\\n    <main-nav></main-nav>\\n\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column is-12\\\">\\n            \\n                <!-- <div class=\\\"columns\\\">\\n                    <main class=\\\"column is-10 is-offset-1 \\\"> -->\\n                        <notification-message></notification-message>\\n                        <router-outlet></router-outlet>\\n                    <!-- </main>\\n                </div> -->\\n            \\n        </div>\\n        <!-- <aside class=\\\"column is-2 is-offset-1\\\">\\n            <user-profile></user-profile>\\n        </aside> -->\\n    </div>\\n\\n\\n    <footer class=\\\"footer\\\">\\n        Angular v6.x + Firebase PWA Starter App <br> Build me from scratch at <a href=\\\"https://angularfirebase.com\\\">AngularFirebase.com</a><br>\\n        <br>Open Source | MIT License | Created by <a href=\\\"https://jeffdelaney.me\\\">Jeff Delaney</a>\\n    </footer>\\n\\n\\n    <!-- <div class=\\\"github-banner\\\" style=\\\"z-index: 9999999\\\">\\n        <a href=\\\"https://github.com/codediodeio/angular-firestarter\\\" class=\\\"github-corner\\\" aria-label=\\\"View source on Github\\\">\\n            <svg width=\\\"60\\\" height=\\\"60\\\" viewBox=\\\"0 0 250 250\\\" style=\\\"z-index: 11; fill:#FD6C6C; color:#fff; position: absolute; top: 0; border: 0; right: 0;\\\" aria-hidden=\\\"true\\\"><path d=\\\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\\\"></path><path d=\\\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\\\" fill=\\\"currentColor\\\" style=\\\"transform-origin: 130px 106px;\\\" class=\\\"octo-arm\\\"></path><path d=\\\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\\\" fill=\\\"currentColor\\\" class=\\\"octo-body\\\"></path>\\n      </svg>\\n        </a>\\n        <style>\\n            .github-corner:hover .octo-arm {\\n                animation: octocat-wave 560ms ease-in-out\\n            }\\n            \\n            @keyframes octocat-wave {\\n                0%,\\n                100% {\\n                    transform: rotate(0)\\n                }\\n                20%,\\n                60% {\\n                    transform: rotate(-25deg)\\n                }\\n                40%,\\n                80% {\\n                    transform: rotate(10deg)\\n                }\\n            }\\n            \\n            @media (max-width:500px) {\\n                .github-corner:hover .octo-arm {\\n                    animation: none\\n                }\\n                .github-corner .octo-arm {\\n                    animation: octocat-wave 560ms ease-in-out\\n                }\\n            }\\n        </style>\\n    </div> -->\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { AuthService } from './core/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private auth: AuthService) {}\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport {\n  BrowserModule,\n  BrowserTransferStateModule\n} from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n// Firestarter App Modules\nimport { CoreModule } from './core/core.module';\nimport { UploadsModule } from './uploads/uploads.module';\nimport { UiModule } from './ui/ui.module';\nimport { NotesModule } from './notes/notes.module';\n\n\n// AngularFire2 Modules\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireFunctionsModule } from 'angularfire2/functions';\n\n// IMPORTANT\n// Add your own project credentials to environments/*.ts\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    BrowserTransferStateModule,\n    AppRoutingModule,\n    CoreModule,\n    UiModule,\n    NotesModule,\n    UploadsModule,\n    AngularFireModule.initializeApp(environment.firebase, 'firestarter'),\n    AngularFirestoreModule.enablePersistence(),\n    AngularFireAuthModule,\n    AngularFireStorageModule,\n    AngularFireFunctionsModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', {\n      enabled: environment.production\n    })\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export class AdListing {\n    title    = 'Your Title'\n    content  = 'Ad Content'\n    price    = 5.00\n    image    = 'http://via.placeholder.com/350x150'\n  }","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database-deprecated';\nimport { FirebaseObjectObservable } from 'angularfire2/database-deprecated';\n\nimport { AdListing } from './AdListing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n    /// Creates an Ad, then returns as an object\n    createAd(): FirebaseObjectObservable<AdListing> {\n      const adDefault = new AdListing()\n      const adKey = this.db.list('/ads').push(adDefault).key\n      return this.db.object('/ads/' + adKey)\n    }\n  \n  \n    /// Updates an existing Ad\n    updateAd(ad: FirebaseObjectObservable<AdListing>, data: any) {\n      return ad.update(data)\n    }\n    \n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AuthService } from './auth.service';\nimport { NotifyService } from './notify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private notify: NotifyService\n  ) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.auth.user.pipe(\n      take(1),\n      map(user => !!user),\n      tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('access denied');\n          this.notify.update('You must be logged in!', 'error');\n          this.router.navigate(['/login']);\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { firebase } from '@firebase/app';\nimport {auth} from 'firebase';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument\n} from 'angularfire2/firestore';\nimport { NotifyService } from './notify.service';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, startWith, tap, filter } from 'rxjs/operators';\nimport { FirebaseApp } from '../../../node_modules/@firebase/app-types';\n\ninterface User {\n  uid: string;\n  email?: string | null;\n  photoURL?: string;\n  displayName?: string;\n}\n\n@Injectable()\nexport class AuthService {\n  user: Observable<User | null>;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notify: NotifyService\n  ) {\n    this.user = this.afAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        } else {\n          return of(null);\n        }\n      })\n      // tap(user => localStorage.setItem('user', JSON.stringify(user))),\n      // startWith(JSON.parse(localStorage.getItem('user')))\n    );\n  }\n\n  ////// OAuth Methods /////\n\n  googleLogin() {\n    //const provider = new firebase.auth.GoogleAuthProvider();\n    const provider = new auth.GoogleAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  githubLogin() {\n    //const provider = new firebase.auth.GithubAuthProvider();\n    const provider = new auth.GithubAuthProvider()\n    return this.oAuthLogin(provider);\n  }\n\n  facebookLogin() {\n    //const provider = new firebase.auth.FacebookAuthProvider();\n    const provider = new auth.FacebookAuthProvider();\n    return this.oAuthLogin(provider);\n  }\n\n  twitterLogin() {\n    //const provider = new firebase.auth.TwitterAuthProvider();\n    const provider = new auth.TwitterAuthProvider()\n    return this.oAuthLogin(provider);\n  }\n\n  private oAuthLogin(provider: any) {\n    return this.afAuth.auth\n      .signInWithPopup(provider)\n      .then(credential => {\n        this.notify.update('Welcome to Firestarter!!!', 'success');\n        return this.updateUserData(credential.user);\n      })\n      .catch(error => this.handleError(error));\n  }\n\n  //// Anonymous Auth ////\n\n  anonymousLogin() {\n    return this.afAuth.auth\n      .signInAnonymously()\n      .then(credential => {\n        this.notify.update('Welcome to Firestarter!!!', 'success');\n        return this.updateUserData(credential.user); // if using firestore\n      })\n      .catch(error => {\n        this.handleError(error);\n      });\n  }\n\n  //// Email/Password Auth ////\n\n  emailSignUp(email: string, password: string) {\n    return this.afAuth.auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(credential => {\n        this.notify.update('Welcome new user!', 'success');\n        return this.updateUserData(credential.user); // if using firestore\n      })\n      .catch(error => this.handleError(error));\n  }\n\n  emailLogin(email: string, password: string) {\n    return this.afAuth.auth\n      .signInWithEmailAndPassword(email, password)\n      .then(credential => {\n        this.notify.update('Welcome back!', 'success');\n        return this.updateUserData(credential.user);\n      })\n      .catch(error => this.handleError(error));\n  }\n\n  // Sends email allowing user to reset password\n  resetPassword(email: string) {\n    //const fbAuth = firebase.auth();\n    //const fbAuth = auth;\n    //return fbAuth\n      //.sendPasswordResetEmail(email)\n      //.then(() => this.notify.update('Password update email sent', 'info'))\n      //.catch(error => this.handleError(error));\n  }\n\n  signOut() {\n    this.afAuth.auth.signOut().then(() => {\n      this.router.navigate(['/']);\n    });\n  }\n\n  // If error, console log and notify user\n  private handleError(error: Error) {\n    console.error(error);\n    this.notify.update(error.message, 'error');\n  }\n\n  // Sets user data to firestore after succesful login\n  private updateUserData(user: User) {\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(\n      `users/${user.uid}`\n    );\n\n    const data: User = {\n      uid: user.uid,\n      email: user.email || null,\n      displayName: user.displayName || 'nameless user',\n      photoURL: user.photoURL || 'https://goo.gl/Fz9nrQ'\n    };\n    return userRef.set(data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { NotifyService } from './notify.service';\n\n@NgModule({\n  providers: [AuthService, AuthGuard, NotifyService]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n/// Notify users about errors and other helpful stuff\nexport interface Msg {\n  content: string;\n  style: string;\n}\n\n@Injectable()\nexport class NotifyService {\n\n  private _msgSource = new Subject<Msg | null>();\n\n  msg = this._msgSource.asObservable();\n\n  update(content: string, style: 'error' | 'info' | 'success') {\n    const msg: Msg = { content, style };\n    this._msgSource.next(msg);\n  }\n\n  clear() {\n    this._msgSource.next(null);\n  }\n}\n","module.exports = \"<div class=\\\"basic-note\\\">\\n    <h3>{{ note.content }}</h3>\\n    <span class=\\\"button is-small is-info\\\" (click)='addHeartToNote(note.hearts)'>\\n    Heart <i class=\\\"fa fa-heart\\\" style=\\\"margin-left: 5px;\\\"></i>\\n  </span>\\n    <span class=\\\"button is-small is-danger\\\" (click)='deleteNote(note?.id)'>Delete</span>\\n    <p>This note has been hearted {{ note.hearts || 0 }} times.</p>\\n</div>\"","module.exports = \".basic-note {\\n  visibility: visible; }\\n\"","import { Component, Input } from '@angular/core';\n\nimport { NotesService } from '../notes.service';\n\n@Component({\n  selector: 'note-detail',\n  templateUrl: './note-detail.component.html',\n  styleUrls: ['./note-detail.component.scss'],\n})\nexport class NoteDetailComponent {\n\n  @Input() note: any;\n\n  constructor(private notesService: NotesService) { }\n\n  addHeartToNote(val: number) {\n    if (this.note.id) {\n      this.notesService.updateNote(this.note.id, { hearts: val + 1 });\n    } else {\n      console.error('Note missing ID!');\n    }\n  }\n\n  deleteNote(id: string) {\n    this.notesService.deleteNote(id);\n  }\n\n}\n","module.exports = \"<h1>Firestore Notes</h1>\\n<p>\\n    Learn how to build\\n    <a href=\\\"https://angularfirebase.com/tag/firestore\\\">cool stuff with Firestore</a>\\n</p>\\n<hr>\\n\\n<input [(ngModel)]=\\\"content\\\" placeholder=\\\"Add your own note\\\" class=\\\"input\\\" name=\\\"note\\\">\\n\\n\\n<button class=\\\"button is-success\\\" (click)=\\\"clickHandler()\\\" [disabled]=\\\"content?.length < 2 || content?.length > 200\\\">\\n  Add Note\\n</button>\\n<hr>\\n<div *ngFor=\\\"let note of notes | async\\\">\\n    <note-detail [note]=\\\"note\\\"></note-detail>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../notes.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'notes-list',\n  templateUrl: './notes-list.component.html',\n  styleUrls: ['./notes-list.component.scss']\n})\nexport class NotesListComponent implements OnInit {\n\n  notes: Observable<any[]>;\n  content: string;\n\n  constructor(private notesService: NotesService) { }\n\n  ngOnInit() {\n    this.notes = this.notesService.getData();\n  }\n\n  clickHandler() {\n    this.notesService.createNote(this.content);\n    this.content = '';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NotesListComponent } from './notes-list/notes-list.component';\nimport { NoteDetailComponent } from './note-detail/note-detail.component';\nimport { NotesService } from './notes.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [NotesListComponent, NoteDetailComponent],\n  providers: [NotesService]\n})\nexport class NotesModule { }\n","import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class NotesService {\n\n  notesCollection: AngularFirestoreCollection<any>;\n  noteDocument:   AngularFirestoreDocument<any>;\n\n  constructor(private afs: AngularFirestore) {\n    this.notesCollection = this.afs.collection('notes', (ref) => ref.orderBy('time', 'desc').limit(5));\n  }\n\n  getData(): Observable<any[]> {\n    // ['added', 'modified', 'removed']\n    return this.notesCollection.snapshotChanges().pipe(\n      map((actions) => {\n        return actions.map((a) => {\n          const data = a.payload.doc.data();\n          return { id: a.payload.doc.id, ...data };\n        });\n      })\n    );\n  }\n\n  getNote(id: string) {\n    return this.afs.doc<any>(`notes/${id}`);\n  }\n\n  createNote(content: string) {\n    const note = {\n      content,\n      hearts: 0,\n      time: new Date().getTime(),\n    };\n    return this.notesCollection.add(note);\n  }\n\n  updateNote(id: string, data: any) {\n    return this.getNote(id).update(data);\n  }\n\n  deleteNote(id: string) {\n    return this.getNote(id).delete();\n  }\n}\n","module.exports = \"<div class=\\\"content columns\\\" *ngIf=\\\"ad\\\">\\n  <div class=\\\"column is-6\\\">\\n    <h1>Ad Listing Preview</h1>\\n\\n    <article class=\\\"message\\\">\\n      <div class=\\\"message-header\\\">\\n        <p>{{(ad | async).title}}</p>\\n      </div>\\n      <div class=\\\"message-body\\\">\\n\\n        <img [src]=\\\"(ad | async).image\\\" width=\\\"350px\\\"><br>\\n        <p>{{ (ad | async).content }}</p>\\n\\n        <hr>\\n\\n        <h4>List Price: {{ (ad | async).price | currency}}</h4>\\n      </div>\\n    </article>\\n\\n    <h3>Form Values</h3>\\n\\n    <p>Form value: <br> {{ adForm.value | json }}</p>\\n    <p>Form status: {{ adForm.status | json }}</p>\\n\\n  </div>\\n\\n\\n  <div class=\\\"column\\\">\\n\\n    <form  [formGroup]=\\\"adForm\\\" novalidate>\\n\\n    <h1>Create your Listing</h1>\\n\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Title</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input class=\\\"input\\\" type=\\\"text\\\"\\n                   formControlName=\\\"title\\\"\\n                   (change)=\\\"saveAdChanges()\\\"\\n                   [ngClass]=\\\"{\\n                                'is-success' :  adForm.get('title').valid &&  adForm.get('title').dirty,\\n                                'is-danger'  :  !adForm.get('title').valid\\n                              }\\\">\\n          </div>\\n\\n          <p class=\\\"error is-danger\\\" [hidden]=\\\"adForm.get('title').valid\\\">\\n            Title is required\\n          </p>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Image URL</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <input class=\\\"input\\\" type=\\\"text\\\"\\n                   formControlName=\\\"image\\\"\\n                   (change)=\\\"saveAdChanges()\\\"\\n                   [ngClass]=\\\"{\\n                               'is-success' :  adForm.get('image').valid &&  adForm.get('image').dirty,\\n                               'is-danger'  :  !adForm.get('image').valid\\n                             }\\\">\\n          </div>\\n          <p class=\\\"error is-danger\\\" [hidden]=\\\"adForm.get('image').valid\\\">\\n            Image is required\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\"><label class=\\\"label\\\">Price</label></div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field is-expanded\\\">\\n            <div class=\\\"field has-addons\\\">\\n              <p class=\\\"control\\\">\\n                <a class=\\\"button is-static\\\">\\n                  $\\n                </a>\\n              </p>\\n              <p class=\\\"control is-expanded\\\">\\n                <input class=\\\"input\\\" type=\\\"number\\\"\\n                       formControlName=\\\"price\\\"\\n                       (change)=\\\"saveAdChanges()\\\"\\n                       [ngClass]=\\\"{\\n                                   'is-success' :  adForm.get('price').valid &&  adForm.get('price').dirty,\\n                                   'is-danger'  :  !adForm.get('price').valid\\n                                 }\\\">\\n              </p>\\n            </div>\\n            <p class=\\\"error\\\" [hidden]=\\\"adForm.get('price').valid\\\">Price is not valid</p>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Details</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <div class=\\\"control\\\">\\n              <textarea class=\\\"textarea\\\"\\n                  formControlName=\\\"content\\\"\\n                  (change)=\\\"saveAdChanges()\\\"\\n                  [ngClass]=\\\"{\\n                               'is-success' :  adForm.get('content').valid &&  adForm.get('content').dirty,\\n                               'is-danger'  :  !adForm.get('content').valid\\n                             }\\\">\\n              </textarea>\\n              <p class=\\\"error\\\" [hidden]=\\\"adForm.get('content').valid\\\">Content is not valid</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<button class=\\\"button is-success\\\" (click)=\\\"startNewAdListing()\\\" *ngIf=\\\"!ad\\\" >Start New Ad Listing</button>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AdService } from '../../core/ad.service';\nimport { AdListing } from '../../core/AdListing';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'ad-listing',\n  templateUrl: './ad-listing.component.html',\n  styleUrls: ['./ad-listing.component.scss']\n})\nexport class AdListingComponent {\n\n  ad: any;\n  adForm: FormGroup;\n\n  constructor(private adService: AdService, private fb: FormBuilder) { }\n  //ngOnInit(){}\n\n  startNewAdListing() {\n    this.ad =     this.adService.createAd()\n    this.buildForm()\n  }\n\n  saveAdChanges() {\n    if (this.adForm.status != 'VALID') {\n      console.log('form is not valid, cannot save to database')\n      return\n    }\n\n    const data = this.adForm.value\n    this.adService.updateAd(this.ad, data)\n  }\n\n  private buildForm() {\n    this.adForm = this.fb.group({\n      title:    ['', Validators.required ],\n      content:  ['', Validators.required ],\n      price:    ['', Validators.required ],\n      image:    ['', Validators.required ]\n    });\n    this.ad.subscribe(ad => {\n      this.adForm.patchValue(ad)\n    })\n  }\n\n\n\n}\n","module.exports = \"<form [formGroup]=\\\"myForm\\\" profileResumeForm path=\\\"resume/{{resumename}}\\\" (stateChange)=\\\"changeHandler($event)\\\" class=\\\"example-form\\\">\\n\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column is-narrow\\\" style=\\\"background-color:#f4f5f7; \\\">\\n            <div class=\\\"\\\" style=\\\"width: 55px;\\\">\\n                <mat-toolbar style=\\\"background-color: transparent\\\">\\n                    <mat-toolbar-row>\\n                        <button mat-icon-button color=\\\"blue\\\">\\n                            <mat-icon class=\\\"example-icon\\\">description</mat-icon>\\n                        </button>\\n                    </mat-toolbar-row>\\n                    <mat-toolbar-row>\\n                        <button mat-icon-button color=\\\"\\\">\\n                            <mat-icon aria-label=\\\"\\\">note_add</mat-icon>\\n                        </button>\\n                    </mat-toolbar-row>\\n                    <mat-toolbar-row>\\n                        <button mat-icon-button color=\\\"\\\">\\n                            <mat-icon class=\\\"example-icon\\\">delete</mat-icon>\\n                        </button>\\n                    </mat-toolbar-row>\\n                </mat-toolbar>\\n            </div>\\n        </div>\\n        <div class=\\\"column\\\">\\n\\n            <div class=\\\"columns\\\">\\n                <div class=\\\"column is-12\\\">\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-10 is-offset-1\\\">\\n                            <h1 class=\\\"head\\\">Add Resume.</h1>\\n                            <h4>Let's start with your profile. This will help you succeed on HireMuse.</h4>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-10 is-offset-1\\\">\\n                            <mat-card>\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column\\\">\\n                                        <mat-form-field>\\n                                            <mat-label>Candidate Name</mat-label>\\n                                            <input matInput placeholder=\\\"Candidate Name\\\" formControlName=\\\"name\\\">\\n                                            <mat-hint>Candidate Name</mat-hint>\\n                                        </mat-form-field>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column\\\">\\n                                        <mat-form-field>\\n                                            <mat-label>Candidate Name</mat-label>\\n                                            <input matInput placeholder=\\\"Candidate Name\\\" formControlName=\\\"name\\\">\\n                                            <mat-hint>Candidate Name</mat-hint>\\n                                        </mat-form-field>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column\\\">\\n                                        <mat-form-field>\\n                                            <mat-label>Location</mat-label>\\n                                            <input matInput formControlName=\\\"location\\\" type=\\\"text\\\" class=\\\"google-place-input\\\"\\n                                                google-place (onSelect)=\\\"setAddress($event)\\\" placeholder=\\\"Type to search..\\\">\\n                                            <mat-hint>Candidate Name</mat-hint>\\n                                        </mat-form-field>\\n                                    </div>\\n                                    <div class=\\\"column\\\">\\n                                        <mat-form-field>\\n                                            <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\n                                        </mat-form-field>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column\\\">\\n                                        <mat-form-field>\\n                                            <textarea matInput #message rows=\\\"2\\\" maxlength=\\\"256\\\" placeholder=\\\"Mini Resume\\\"\\n                                                formControlName=\\\"miniresume\\\"></textarea>\\n                                            <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong></mat-hint>\\n                                            <mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint>\\n                                        </mat-form-field>\\n                                    </div>\\n                                </div>\\n\\n                                <br><br>\\n\\n                                <mat-tab-group dynamicHeight>\\n                                    <mat-tab label=\\\"Basics\\\">\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">&nbsp;</div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Role\\\" formControlName=\\\"role\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <textarea matInput placeholder=\\\"your message...\\\" formControlName=\\\"message\\\"></textarea>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">&nbsp;</div>\\n                                        </div>\\n                                    </mat-tab>\\n                                    <mat-tab label=\\\"Talent Profile\\\">\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">&nbsp;</div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\"><label class=\\\"label\\\">Search status</label></div>\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <mat-select placeholder=\\\"Job Search Status\\\" [(value)]=\\\"selected\\\"\\n                                                        formControlName=\\\"jobsearchstatus\\\">\\n                                                        <mat-option value=\\\"Actively Interviewing\\\">Actively\\n                                                            Interviewing</mat-option>\\n                                                    </mat-select>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            \\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <mat-select placeholder=\\\"Job Type\\\" multiple formControlName=\\\"jobtype\\\">\\n                                                        <mat-option *ngFor=\\\"let job of typesOfJobs\\\" [value]=\\\"job\\\">{{job}}</mat-option>\\n                                                    </mat-select>\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput formControlName=\\\"desiredannualsalary\\\" placeholder=\\\"Desired Annual Salary\\\"\\n                                                        type=\\\"number\\\" class=\\\"example-right-align\\\">\\n                                                    <span matPrefix>$&nbsp;</span>\\n                                                    <span matSuffix>.00</span>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Desired Location\\\" type=\\\"text\\\"\\n                                                        formControlName=\\\"desiredlocation\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div class=\\\"column\\\">\\n                                                <mat-checkbox formControlName=\\\"opentoworkremotely\\\">Open\\n                                                    to work\\n                                                    remotely</mat-checkbox>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <label class=\\\"label\\\">Work Authorization</label>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <h6>Are you legally authorized to work\\n                                                    in\\n                                                    the United\\n                                                    States</h6>\\n                                            </div>\\n                                            <div class=\\\"column\\\">\\n                                                <mat-radio-group formControlName=\\\"legallyauthorized\\\">\\n                                                    <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                                                    <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                                                </mat-radio-group>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <h6>Do you or will you require\\n                                                    sponsorship\\n                                                    for a US\\n                                                    employment visa</h6>\\n                                            </div>\\n                                            <div class=\\\"column\\\">\\n                                                <mat-radio-group formControlName=\\\"requiresponsorship\\\">\\n                                                    <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                                                    <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                                                </mat-radio-group>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                            </div>\\n                                            <div class=\\\"column\\\">\\n                                            </div>\\n                                        </div>\\n\\n                                    </mat-tab>\\n                                    <mat-tab label=\\\"Social\\\">\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">&nbsp;</div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                <input matInput placeholder=\\\"LinkedIn url\\\" type=\\\"url\\\"\\n                                                        formControlName=\\\"linkedinurl\\\">\\n                                                    <span matPrefix>http://&nbsp;</span>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Website url\\\"\\n                                                        formControlName=\\\"websiteurl\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Twitter url\\\"\\n                                                        formControlName=\\\"twitterurl\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"columns\\\">\\n                                            <div class=\\\"column\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Github url\\\"\\n                                                        formControlName=\\\"githuburl\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                       \\n                                    </mat-tab>\\n                                </mat-tab-group>\\n\\n                                <table class=\\\"table is-fullwidth\\\">\\n                                    <tr>\\n                                        <td>\\n                                            <div class=\\\"columns\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <h5>Skills</h5>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"columns\\\">\\n                                                <div class=\\\"column is-12\\\">\\n\\n                                                    <div class=\\\"columns\\\">\\n                                                        <div class=\\\"column is-12\\\">\\n                                                            <table class=\\\"table is-fullwidth\\\" formArrayName=\\\"skills\\\"\\n                                                                style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                                                <tr *ngIf=\\\"skillForms.controls == null\\\">\\n                                                                    <td>\\n                                                                        <h3>No skills added</h3>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr *ngFor=\\\"let skill of skillForms.controls; let i=index\\\"\\n                                                                    [formGroupName]=\\\"i\\\">\\n                                                                    <td style=\\\"border:0px; width: 650%;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <mat-select placeholder=\\\"Choose skill\\\"\\n                                                                                formControlName=\\\"skillname\\\">\\n                                                                                <mat-option value=\\\".NET\\\">.NET</mat-option>\\n                                                                                <mat-option value=\\\"Python\\\">Python</mat-option>\\n                                                                                <mat-option value=\\\"Java\\\">Java</mat-option>\\n                                                                            </mat-select>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                    <td style=\\\"border:0px; width: 40%;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <mat-select placeholder=\\\"Choose skill level\\\"\\n                                                                                formControlName=\\\"skilllevel\\\">\\n                                                                                <mat-option value=\\\"Expert\\\">Expert</mat-option>\\n                                                                                <mat-option value=\\\"Intermediate\\\">Intermediate</mat-option>\\n                                                                                <mat-option value=\\\"Beginner\\\">Beginner</mat-option>\\n                                                                            </mat-select>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                    <td style=\\\"border:0px; width: 5%;\\\">\\n                                                                        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteSkill(i)\\\">\\n                                                                            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                                                                        </button>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td colspan=\\\"3\\\">\\n                                                                        <table>\\n                                                                            <tr>\\n                                                                                <td>\\n                                                                                    <button mat-button (click)=\\\"addSkill()\\\">\\n                                                                                        <mat-icon aria-label=\\\"Add skill\\\">add_circle</mat-icon>\\n                                                                                        Add another skill\\n                                                                                    </button>\\n                                                                                </td>\\n                                                                            </tr>\\n\\n                                                                            <!-- <tr>\\n                                                                                        <td style=\\\"width:80%;\\\">\\n                                                                                            <mat-form-field>\\n                                                                                                <input #NewSkill matInput placeholder=\\\"Skill name\\\"\\n                                                                                                    required>\\n                                                                                            </mat-form-field>\\n                                                                                            <label #NewSkillError class=\\\"mat-error\\\" style=\\\"color:red;\\\"></label>\\n                                                                                        </td>\\n                                                                                        <td style=\\\"width:20%;\\\">\\n                                                                                            <button mat-button (click)=\\\"saveSkill(NewSkill, NewSkillError)\\\">\\n                                                                                                <mat-icon aria-label=\\\"Save skill\\\">save</mat-icon> Save\\n                                                                                                skill\\n                                                                                            </button>\\n                                                                                        </td>\\n                                                                                    </tr> -->\\n                                                                        </table>\\n\\n                                                                    </td>\\n                                                                </tr>\\n                                                            </table>\\n                                                            <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                                                <tr>\\n                                                                    <td>\\n                                                                        <mat-form-field>\\n                                                                            <textarea matInput placeholder=\\\"Additional skills\\\"\\n                                                                                formControlName=\\\"additionalskills\\\"></textarea>\\n                                                                            <mat-hint align=\\\"start\\\"><strong>Add skills\\n                                                                                    not in the drop down skill list.\\n                                                                                    Separate with comma.</strong>\\n                                                                            </mat-hint>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n                                                            </table>\\n                                                        </div>\\n                                                        <div>\\n                                                            &nbsp;\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n\\n\\n\\n                                            <div class=\\\"columns\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <div class=\\\"columns\\\">\\n                                                        <div class=\\\"column is-12\\\">\\n                                                            <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                                                <tr>\\n                                                                    <td style=\\\"width:30%;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <mat-select #AddType [(value)]=\\\"selected\\\">\\n                                                                                <mat-option value=\\\"Project\\\">Add Project</mat-option>\\n                                                                                <mat-option value=\\\"Title\\\">Add Title</mat-option>\\n                                                                                <mat-option value=\\\"Company Name\\\">Add\\n                                                                                    Company Name</mat-option>\\n                                                                            </mat-select>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                    <td style=\\\"width:70%;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <input #ProjectName matInput placeholder=\\\"{{AddType.value}}\\\"\\n                                                                                required>\\n                                                                            <mat-error>{{message.valid}}</mat-error>\\n                                                                        </mat-form-field>\\n                                                                        <label #tempError class=\\\"mat-error\\\" style=\\\"color:red;\\\"></label>\\n                                                                    </td>\\n\\n                                                                </tr>\\n                                                            </table>\\n                                                        </div>\\n                                                        <div>\\n                                                            <br>\\n                                                            <button mat-fab color=\\\"primary\\\" [disabled]=\\\"ProjectName.invalid\\\"\\n                                                                (click)=\\\"addExperience(AddType, ProjectName, tempError)\\\">\\n                                                                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">save</mat-icon>\\n                                                            </button>\\n\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n\\n\\n                                            <div class=\\\"columns\\\" formArrayName=\\\"experiences\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <div class=\\\"columns\\\" *ngFor=\\\"let exp of experienceForms.controls; let i=index\\\"\\n                                                        [formGroupName]=\\\"i\\\">\\n                                                        <div class=\\\"column is-12\\\">\\n                                                            <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                                        {{i+1}}\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"Project\\\"\\n                                                                                formControlName=\\\"project\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"Title\\\"\\n                                                                                formControlName=\\\"title\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\">\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"Company\\\"\\n                                                                                formControlName=\\\"company\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                    <td style=\\\"border:0px;\\\">\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"Location\\\"\\n                                                                                formControlName=\\\"location\\\" class=\\\"google-place-input\\\"\\n                                                                                google-place (onSelect)=\\\"setexperienceAddress($event, experiencelocation)\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <input matInput [matDatepicker]=\\\"picker\\\"\\n                                                                                formControlName=\\\"fromdate\\\" placeholder=\\\"From\\\"\\n                                                                                disabled>\\n                                                                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                                            <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                    <td style=\\\"border:0px;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <input matInput [matDatepicker]=\\\"dp3\\\"\\n                                                                                formControlName=\\\"todate\\\" placeholder=\\\"To\\\"\\n                                                                                disabled>\\n                                                                            <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n                                                                            <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n                                                                        </mat-form-field>\\n                                                                        <mat-checkbox formControlName=\\\"currentlyemployed\\\">Currently\\n                                                                            employed</mat-checkbox>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                                        <mat-form-field>\\n                                                                            <textarea matInput placeholder=\\\"Project description\\\"\\n                                                                                formControlName=\\\"projectdescription\\\"></textarea>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n\\n                                                            </table>\\n                                                        </div>\\n                                                        <div>\\n                                                            <br>\\n                                                            <button mat-fab color=\\\"warn\\\" (click)=\\\"openDialog('experience', i)\\\"\\n                                                                matTooltip=\\\"Delete experience\\\">\\n                                                                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                                                            </button>\\n                                                            <br><br>\\n                                                            <!-- <button mat-fab color=\\\"primary\\\" (click)=\\\"openDialog('experience',-1)\\\">\\n                                                                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                                                                    </button> -->\\n\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"columns\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <h5>Education</h5>\\n                                                </div>\\n                                            </div>\\n\\n\\n\\n                                            <div class=\\\"columns\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <div class=\\\"columns\\\">\\n                                                        <div class=\\\"column is-12\\\">\\n                                                            <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                                                <tr>\\n                                                                    <td style=\\\"width:30%;\\\">\\n                                                                        School Name\\n                                                                    </td>\\n                                                                    <td style=\\\"width:70%;\\\">\\n                                                                        <mat-form-field>\\n                                                                            <input #SchoolName matInput placeholder=\\\"School Name\\\"\\n                                                                                required>\\n                                                                        </mat-form-field>\\n                                                                        <label #SchoolNameError class=\\\"mat-error\\\" style=\\\"color:red;\\\"></label>\\n                                                                    </td>\\n\\n                                                                </tr>\\n                                                            </table>\\n                                                        </div>\\n                                                        <div>\\n                                                            <br>\\n                                                            <button mat-fab color=\\\"primary\\\" (click)=\\\"addSchool(SchoolName, SchoolNameError)\\\">\\n                                                                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">save</mat-icon>\\n                                                            </button>\\n\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n\\n\\n                                            <div class=\\\"columns\\\" formArrayName=\\\"educationalqualifications\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <div class=\\\"columns\\\" *ngFor=\\\"let school of educationalqualificationsForms.controls; let i=index\\\"\\n                                                        [formGroupName]=\\\"i\\\">\\n                                                        <div class=\\\"column is-12\\\">\\n                                                            <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                                        {{i+1}}\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"College / University name\\\"\\n                                                                                formControlName=\\\"collegeuniversityname\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                                        <mat-form-field>\\n                                                                            <input matInput [matDatepicker]=\\\"dateofcompletionpicker\\\"\\n                                                                                formControlName=\\\"dateofcompletion\\\"\\n                                                                                placeholder=\\\"Date of completion\\\"\\n                                                                                disabled>\\n                                                                            <mat-datepicker-toggle matSuffix [for]=\\\"dateofcompletionpicker\\\"></mat-datepicker-toggle>\\n                                                                            <mat-datepicker #dateofcompletionpicker\\n                                                                                disabled=\\\"false\\\"></mat-datepicker>\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n                                                                <tr>\\n                                                                    <td style=\\\"border:0px;\\\">\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"Degree Type\\\"\\n                                                                                formControlName=\\\"degreetype\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                    <td style=\\\"border:0px;\\\">\\n                                                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                                            <input matInput placeholder=\\\"Major Field of study\\\"\\n                                                                                formControlName=\\\"majorfieldofstudy\\\">\\n                                                                        </mat-form-field>\\n                                                                    </td>\\n                                                                </tr>\\n\\n                                                            </table>\\n                                                        </div>\\n                                                        <div>\\n                                                            <br>\\n                                                            <button mat-fab color=\\\"warn\\\" (click)=\\\"openDialog('education', i)\\\"\\n                                                                matTooltip=\\\"Delete education\\\">\\n                                                                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                                                            </button>\\n\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"columns\\\">\\n                                                <div class=\\\"column is-12\\\">\\n                                                    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"myForm.invalid || state !== 'modified'\\\">\\n                                                        <mat-icon aria-label=\\\"Save resume\\\">save</mat-icon> Save Resume\\n                                                    </button>\\n                                                    <a *ngIf=\\\"state === 'synced'\\\" mat-button routerLink=\\\".\\\"><i class=\\\"material-icons\\\">check_circle_outline</i>\\n                                                        Resume saved.</a>\\n                                                </div>\\n                                            </div>\\n                                        </td>\\n                                    </tr>\\n                                </table>\\n\\n\\n\\n                            </mat-card>\\n\\n\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</form>\"","module.exports = \"mat-form-field {\\n  display: block; }\\n\\n.example-form {\\n  min-width: 500px;\\n  max-width: 1500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.content table td {\\n  border: 0px; }\\n\"","import { Component, Inject, OnInit, NgZone, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl  } from '@angular/forms'\nimport { AngularFirestore } from 'angularfire2/firestore'\nimport { BehaviorSubject } from 'rxjs'\nimport { tap, first, take } from 'rxjs/operators';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {\n  MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSnackBarConfig,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition, MatTooltipModule\n} from '@angular/material';\n\n\nexport interface DialogData {\n  deletetype: 'experience' | 'education';\n  displaytext: string;\n}\n\n\n@Component({\n  selector: 'addresume',\n  templateUrl: './addresume.component.html',\n  styleUrls: ['./addresume.component.scss']\n})\nexport class AddresumeComponent implements OnInit {\n\n\n  resumename: string;\n  myForm: FormGroup;\n  myDoc;\n\n  typesOfJobs: string[] = ['Full time employee', 'Contractor', 'Intern'];\n  skillList: string[]= ['.NET', 'Python', 'Django'];\n  state: string;\n\n  message: string = 'Snack Bar opened.';\n  actionButtonLabel: string = 'Retry';\n  action: boolean = true;\n  setAutoHide: boolean = true;\n  autoHide: number = 2000;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  selected:string = 'Project';\n\n  public title = 'Places';\n  public addrKeys: string[];\n  public addr: object;\n  \n  constructor(private fb: FormBuilder, private afs: AngularFirestore, \n              public snackBar: MatSnackBar, public dialog: MatDialog,\n                private activatedRoute: ActivatedRoute,\n              private router: Router, private zone: NgZone) { \n    //this.resumename = this.revisedRandId();\n\n  }\n\n  //Method to be invoked everytime we receive a new instance \n  //of the address object from the onSelect event emitter.\n  setAddress(addrObj) {\n    //We are wrapping this in a NgZone to reflect the changes\n    //to the object in the DOM.\n    this.zone.run(() => {\n      this.addr = addrObj;\n      this.addrKeys = Object.keys(addrObj);\n      this.myForm.controls['location'].setValue(addrObj['formatted_address']);\n    });\n  }\n  \n  setexperienceAddress(addrObj, x)\n  {\n    console.log('in setexperienceAddress')\n    console.log(' caller : ' + x.value)\n    this.zone.run(() => {\n      this.addr = addrObj;\n      this.addrKeys = Object.keys(addrObj);\n      //this.myForm.controls['location'].setValue(addrObj['formatted_address'];\n      x.setValue(addrObj['formatted_address']);\n      \n    });\n\n  }\n\n  getFirestoreId(){\n    return this.afs.createId();\n  }\n\n  revisedRandId() {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  ngOnInit() {\n  \n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      console.log(params);\n      this.resumename = params['jid'];\n    });\n\n    if (this.resumename == undefined)\n    {\n      this.resumename = this.getFirestoreId();\n      this.navigateToFoo();\n    }\n\n    this.myForm = this.fb.group({\n      _id: [this.resumename],\n      name: ['', Validators.required],\n      location: ['', Validators.required],\n      miniresume: ['', Validators.required],\n      role: ['', Validators.required],\n      email: ['', Validators.required],\n      message: ['', Validators.required],\n      jobsearchstatus: [''],\n      jobtype: [''],\n      desiredannualsalary: [''],\n      desiredlocation: [''],\n      opentoworkremotely: [''],\n      legallyauthorized: [''],\n      requiresponsorship: [''],\n      linkedinurl: [''],\n      websiteurl: [''],\n      twitterurl: [''],\n      githuburl: [''],\n      skills: this.fb.array([]),\n      additionalskills: [''],\n      //phones: this.fb.array([]),\n      experiences: this.fb.array([]),\n      educationalqualifications: this.fb.array([])\n    })\n    //this.myDoc = this.afs.doc('contacts/test2').valueChanges();\n    this.myDoc = this.afs.doc('resume/' + this.resumename).valueChanges();\n\n    this.preloadData()\n  }\n\n  preloadData() {\n\n    console.log('createId: ' + this.afs.createId())\n    this.state = 'loading';\n\n    //this.afs.doc('contacts/x7rtxWnvtg5062p9ZXo5').valueChanges().pipe(\n    this.afs.doc('resume/' + this.resumename).valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.myForm.controls['name'].setValue(data['name'])\n          this.myForm.controls['location'].setValue(data['location'])\n          this.myForm.controls['miniresume'].setValue(data['miniresume'])\n          this.myForm.controls['role'].setValue(data['role'])\n          this.myForm.controls['email'].setValue(data['email'])\n          this.myForm.controls['message'].setValue(data['message'])\n\n          this.myForm.controls['jobsearchstatus'].setValue(data['jobsearchstatus'])\n          this.myForm.controls['jobtype'].setValue(data['jobtype'])\n          this.myForm.controls['desiredannualsalary'].setValue(data['desiredannualsalary'])\n          this.myForm.controls['desiredlocation'].setValue(data['desiredlocation'])\n          this.myForm.controls['opentoworkremotely'].setValue(data['opentoworkremotely'])\n          this.myForm.controls['legallyauthorized'].setValue(data['legallyauthorized'])\n          this.myForm.controls['requiresponsorship'].setValue(data['requiresponsorship'])\n\n          if (data['skills']) {\n            console.log('skills : ' + JSON.stringify(data['skills']))\n            //console.log('skills empty check : ' + Object.keys(data['skills']).length)\n\n            data['skills'].forEach(item => {\n              const skill = this.fb.group({\n                skillname: [item['skillname']],\n                skilllevel: [item['skilllevel']]\n              })\n              this.skillForms.push(skill);\n              \n            })\n          }\n          else\n          {\n            console.log('no skills')\n            //there are no skills available in DB add three skills as default\n            \n          }\n\n          this.myForm.controls['additionalskills'].setValue(data['additionalskills'])\n          \n\n          if (data['experiences']) {\n            console.log('experiences : ' + JSON.stringify(data['experiences']))\n            data['experiences'].forEach(item => {\n              const experience = this.fb.group({\n\n                project: [item['project']],\n                title: [item['title']],\n                company: [item['company']],\n                fromdate: [new Date(this.toDateTime(item['fromdate'] ? item['fromdate']['seconds'] : ''))],\n                todate: [new Date(this.toDateTime(item['todate'] ? item['todate']['seconds'] : ''))],\n                currentlyemployed: [item['currentlyemployed']],\n                location: [item['location']],\n                projectdescription: [item['projectdescription']]\n              })\n              this.experienceForms.push(experience);\n            })\n          }\n          else{\n            console.log('no experience found')\n          }\n\n\n          \n\n          if (data['educationalqualifications']) {\n            console.log('educationalqualifications : ' + JSON.stringify(data['educationalqualifications']))\n            data['educationalqualifications'].forEach(item => {\n              const education = this.fb.group({\n\n                collegeuniversityname: [item['collegeuniversityname']],\n                dateofcompletion:  [new Date(this.toDateTime(item['dateofcompletion'] ? item['dateofcompletion']['seconds'] : ''))],\n                degreetype: [item['degreetype']],\n                majorfieldofstudy: [item['majorfieldofstudy']],\n                \n              })\n              this.educationalqualificationsForms.push(education);\n            })\n          }\n          else{\n            console.log('no educationalqualifications found')\n          }\n\n          //this.isAdding = false;\n        }\n        else\n        {\n          //this.isAdding = true;\n          var i;\n            for (i = 0; i < 2; i++) {\n              const skill = this.fb.group({\n                skillname: '',\n                skilllevel: ''\n              })\n              this.skillForms.push(skill);\n            }\n        }\n      }),\n      take(1)\n    )\n      .subscribe()\n  }\n\n  toDateTime(utcSeconds) {\n    var returndate=\"\"\n    if(utcSeconds != null){\n      var myDate = new Date( utcSeconds *1000);\n      returndate = myDate.toLocaleString()\n    }\n    return returndate;\n  }\n\n  navigateToFoo(){\n    // changes the route without moving from the current view or\n    // triggering a navigation event\n    this.router.navigate([], {\n     relativeTo: this.activatedRoute,\n     queryParams: {\n       'jid': this.resumename\n     },\n     queryParamsHandling: 'merge', \n     // preserve the existing query params in the route\n     skipLocationChange: false\n     // do not trigger navigation\n   });\n  \n}\n\n  initSkill() {\n    console.log(\"in initSkill\")\n    // initialize our address\n    return this.fb.group({\n        level: ['', Validators.required],\n        skill: ['']\n    });\n  }\n\n  openSnackBar(message: string, action: string) {\n\n    let config = new MatSnackBarConfig();\n    config.verticalPosition = this.verticalPosition;\n    config.horizontalPosition = this.horizontalPosition;\n    config.duration = this.setAutoHide ? this.autoHide : 0;\n    this.snackBar.open(message, this.action ? this.actionButtonLabel : undefined, config);\n\n  }\n\n  openDialog(deltype: string, todelete:number) {\n    //const dialogRef = this.dialog.open(DialogContentExampleDialog);\n\n    const dialogRef = this.dialog.open(DeleteDialog, {\n      data: {\n        deletetype: deltype,\n        displaytext: 'todelete id: ' + todelete\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      console.log('####' + result)\n      if (result == true)\n      {\n        console.log('in result check true')\n        switch (deltype)\n        {\n          case \"experience\":\n            console.log('in switch case')\n            this.deleteExperience(todelete)\n            break;\n          case \"education\":\n            this.deleteEducation(todelete)\n            break;\n        }\n      }\n    });\n  }\n\n  get skillForms() {\n    return this.myForm.get('skills') as FormArray\n  }\n\n  get experienceForms() {\n    return this.myForm.get('experiences') as FormArray\n  }\n\n  get educationalqualificationsForms() {\n    return this.myForm.get('educationalqualifications') as FormArray\n  }\n\n  changeHandler(e) {\n    // console.log(e)\n    this.state = e;\n  }\n\n  addSkill() {\n    console.log('in add skill')\n    try{\n      const skill = this.fb.group({\n        skillname: [],\n        skilllevel: []\n      })\n  \n      this.skillForms.push(skill);\n    }\n    catch (err) {\n      console.error(err)\n    }\n   \n  }\n\n  saveSkill(skillName: HTMLInputElement, skilloutText: HTMLLabelElement) {\n    console.log(\"skillName.value : \" + skillName.value);\n\n    if (skillName.value.trim() != '')\n    {\n      const skill = this.fb.group({\n        skillname: [skillName.value],\n        skilllevel: ['']  \n      })\n\n      this.skillForms.push(skill);\n    }\n  }\n\n  addExperience(addtypevalue: HTMLInputElement, input : HTMLInputElement, outText: HTMLLabelElement) {\n    console.log('####' + input.value)\n    console.log('@@@' + addtypevalue.value)\n    if (input.value.trim() != '')\n    {\n      const experience = this.fb.group({\n        project: [input.value],\n        title: [],\n        company: [],\n        location: [],\n        fromdate: [],\n        todate: [],\n        currentlyemployed: [],\n        projectdescription: []\n      })\n\n      this.experienceForms.push(experience);\n    }\n    else\n    {\n\n      //console.log('Project name required!!')\n      //outText.textContent='Project name required!!'\n    }\n  }\n\n  addSchool(SchoolName : HTMLInputElement, SchoolNameError: HTMLLabelElement) {\n\n    if (SchoolName.value.trim() != '')\n    {\n      const school = this.fb.group({\n        collegeuniversityname: [SchoolName.value],\n        dateofcompletion: [],\n        degreetype: [],\n        majorfieldofstudy: []\n      })\n\n      this.educationalqualificationsForms.push(school);\n    }\n    else\n    {\n\n      //console.log('Project name required!!')\n      //outText.textContent='Project name required!!'\n    }\n  }\n\n\n  deleteExperience(i) {\n    console.log('in deleteExperience: ' + i)\n    this.experienceForms.removeAt(i)\n    this.openSnackBar('Experience deleted.','Succes')\n  }\n  \n  deleteSkill(i) {\n    //console.log('deleteStill @ ')\n    this.skillForms.removeAt(i)\n  }\n\n  deleteEducation(i) {\n    this.educationalqualificationsForms.removeAt(i)\n    this.openSnackBar('School deleted.','Succes')\n  }\n\n}\n\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DeleteDialog { \n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}","module.exports = \"<h2 mat-dialog-title><i class=\\\"material-icons\\\">thumbs_up_down</i> Confirm Delete</h2>\\n\\n\\n<mat-dialog-content class=\\\"mat-typography\\\">\\n    <h1>{{data.displaytext}}</h1>\\n    <h2>{{data.deletetype}}</h2>\\n    <ul>\\n        <li>\\n          <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\n        </li>\\n        <li>\\n          <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\n        </li>\\n        <li>\\n          <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\n        </li>\\n      </ul>\\n  <h3>Are you sure?</h3>\\n  <p> Vivamus varius lacus id elit venenatis aliquet. Duis vitae libero nisl. Sed vitae ligula id nisi ullamcorper vehicula. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse tristique et sapien eget egestas. Proin gravida erat et turpis tincidunt, quis consectetur tellus aliquet. Vivamus eu sapien diam. Proin sit amet convallis magna. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec arcu nec ante auctor ultricies. Sed efficitur cursus rutrum. In molestie lectus eu nulla posuere ultricies. Nunc porta nunc vulputate, imperdiet tortor ac, sollicitudin ante. Donec in vulputate augue, a tempus purus. Aliquam posuere porttitor sodales. </p>\\n\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Confirm Delete</button>\\n</mat-dialog-actions>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n    Use of this source code is governed by an MIT-style license that\\n    can be found in the LICENSE file at http://angular.io/license -->\"","import { Directive, Input, Output, EventEmitter, HostListener, OnInit, OnDestroy } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { FormControl, FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { tap, map, take, debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { Variable } from '@angular/compiler/src/render3/r3_ast';\nimport { isArray } from 'util';\n\n@Directive({\n  selector: '[fireForm]'\n})\nexport class FireFormDirective implements OnInit, OnDestroy {\n\n  // Inputs\n  @Input() path: string;\n  @Input() formGroup: FormGroup;\n\n  // Internal state\n  private _state: 'loading' | 'synced' | 'modified' | 'error';\n\n  // Outputs\n  @Output() stateChange = new EventEmitter<string>();\n  @Output() formError = new EventEmitter<string>();\n\n  // Firestore Document\n  private docRef: AngularFirestoreDocument;\n\n  // Subscriptions\n  private formSub: Subscription;\n\n  constructor(private fb: FormBuilder, private afs: AngularFirestore) { }\n\n\n  ngOnInit() {\n    this.preloadData();\n    this.autoSave();\n  }\n\n  // Loads initial form data from Firestore\n  preloadData() {\n    console.log('in preloadData')\n    this.state = 'loading';\n    this.docRef = this.getDocRef(this.path);\n    this.docRef\n      .valueChanges()\n      .pipe(\n        tap(doc => {\n          if (doc) {\n            //console.log('preloadData: ' + JSON.stringify(doc))\n            //this.formGroup.patchValue(doc);\n            // this.formGroup.patchValue({\n            //   email: 'nimeshmarker@path.com',\n            //   career: 'Clown',\n            //   bio: 'patch bio',\n            //   skillArrayForm:  [ \n            //     { \n            //       level: \"Advanced\", \n            //       skill: \"Juggler\" \n            //     }, \n            //     { \n            //       level: \"Medium\", \n            //       skill: \"Wizard\" \n            //     } \n            //   ] \n            // })\n            console.log('###email: ' + doc['email'])\n            console.log('@@' + JSON.stringify(doc['skillArrayForm']))\n            this.formGroup.setValue({\n              candidatename: doc['candidatename'],\n              email: doc['email'],\n              career: doc['career'],\n              bio: doc['bio']\n              //skillarrayjson: JSON.stringify(doc['skillArrayForm']),\n              //skillArrayForm: this.formGroup.setValue(doc['skillArrayForm'])\n              //skillArrayForm: JSON.stringify(doc['skillArrayForm'])\n              //skillArrayForm: this.getskillForms.setValue([ { level: \"Advanced\", skill: \"Juggler\" }])\n              //skillArrayForm: this.formGroup.setValue([ { level: \"Advanced\", skill: \"Juggler\" }, { level: \"Medium\", skill: \"Juggler\" }, { level: \"Beginner\", skill: \"Juggler\" } ])\n              //skillArrayForm: this.testparse(doc['skillArrayForm'])\n            });\n            console.log(this.formGroup)\n            this.formGroup.markAsPristine();\n            this.state = 'synced';\n          }\n        }),\n        take(1)\n      )\n      .subscribe();\n  }\n\n  get getskillForms() {\n    return this.formGroup.get('skillArrayForm') as FormArray\n  }\n  \n  addArray()\n  {\n    const phone = this.fb.group({ \n      level: ['level'],\n      skill: ['skill']\n    })\n    const control = <FormArray>this.formGroup.controls['skillArrayForm']\n    //control.setValue(phone)\n    console.log(control)\n  }\n\n  testparse(skillarray: Variable){\n    console.log('typeof: ' + typeof skillarray)\n    console.log('isarray: ' + isArray(skillarray))\n    console.log('in testparse: ' + skillarray)  \n    for (let temp in skillarray)\n    {\n      console.log('temp:' + temp.toString() + ' : ' + skillarray[temp.toString()]['level'] + ' : ' + skillarray[temp.toString()]['skill'])\n      \n      const phone = this.fb.group({ \n        level: [skillarray[temp.toString()]['level']],\n        skill: [skillarray[temp.toString()]['skill']]\n      })\n  \n      //this.getskillForms.push(phone)    \n      this.formGroup.setValue(phone)\n    }\n    \n\n    //return this.formGroup.setValue([ { level: \"Advanced\", skill: \"Juggler\" }, { level: \"Medium\", skill: \"Juggler\" }, { level: \"Beginner\", skill: \"Juggler\" } ])\n  }\n\n  // Autosaves form changes\n  autoSave() {\n    this.formSub = this.formGroup.valueChanges\n    .pipe(\n      tap(change => {\n        this.state = 'modified';\n      }),\n      debounceTime(2000),\n      tap(change => {\n        if (this.formGroup.valid && this._state === 'modified') {\n          this.setDoc();\n        }\n      })\n    )\n    .subscribe();\n  }\n\n  // Intercept form submissions to perform the document write\n  @HostListener('ngSubmit', ['$event'])\n  onSubmit(e) {\n    this.setDoc();\n  }\n\n\n  // Determines if path is a collection or document\n  getDocRef(path: string): any {\n    if (path.split('/').length % 2) {\n      return this.afs.doc(`${path}/${this.afs.createId()}`);\n    } else {\n      return this.afs.doc(path);\n    }\n  }\n\n  // Writes changes to Firestore\n  async setDoc() {\n    try {\n      await this.docRef.set(this.formGroup.value, { merge: true });\n      this.state = 'synced';\n    } catch (err) {\n      console.log(err)\n      this.formError.emit(err.message)\n      this.state = 'error';\n    }\n  }\n  \n  // Setter for state changes\n  set state(val) {\n    this._state = val;\n    this.stateChange.emit(val);\n  }\n\n  ngOnDestroy() {\n    this.formSub.unsubscribe();\n  }\n\n}\n","import { Directive, ElementRef, OnInit, Output, EventEmitter } from '@angular/core';\n\ndeclare var google:any;\n\n@Directive({\n  selector: '[google-place]'\n})\nexport class GooglePlacesDirective implements OnInit {\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n  private element: HTMLInputElement;\n\n  constructor(elRef: ElementRef) {\n    //elRef will get a reference to the element where\n    //the directive is placed\n    this.element = elRef.nativeElement;\n  }\n\n  getFormattedAddress(place) {\n    //@params: place - Google Autocomplete place object\n    //@returns: location_obj - An address object in human readable format\n    console.log(JSON.stringify(place))\n    let location_obj = {};\n    location_obj['response'] = JSON.stringify(place);\n    for (let i in place.address_components) {\n      \n      let item = place.address_components[i];\n      //let geometry = place.geometry;\n      //console.log(geometry)\n      location_obj['formatted_address'] = place.formatted_address;\n      if(item['types'].indexOf(\"locality\") > -1) {\n        location_obj['locality'] = item['long_name']\n      } else if (item['types'].indexOf(\"administrative_area_level_1\") > -1) {\n        location_obj['admin_area_l1'] = item['short_name']\n      } else if (item['types'].indexOf(\"street_number\") > -1) {\n        location_obj['street_number'] = item['short_name']\n      } else if (item['types'].indexOf(\"route\") > -1) {\n        location_obj['route'] = item['long_name']\n      } else if (item['types'].indexOf(\"country\") > -1) {\n        location_obj['country'] = item['long_name']\n      } else if (item['types'].indexOf(\"postal_code\") > -1) {\n        location_obj['postal_code'] = item['short_name']\n      }\n     \n    }\n    return location_obj;\n  }\n\n  ngOnInit() {\n    const autocomplete = new google.maps.places.Autocomplete(this.element);\n    //Event listener to monitor place changes in the input\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      //Emit the new address object for the updated place\n      this.onSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n    });\n  }\n\n  \n}","module.exports = \"<div class=\\\"columns\\\" style=\\\"min-height:500px;\\\">\\n  <div class=\\\"column is-10 is-offset-1\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-12 freehand\\\">Job search</div>\\n    </div>\\n    <div class=\\\"columns is-gapless  is-centered\\\">\\n      <div class=\\\"column is-6\\\">\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>Job search term</mat-label>\\n          <input matInput placeholder=\\\"Placeholder\\\">\\n          <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          <!-- <mat-icon matSuffix>next_week</mat-icon> -->\\n          <mat-hint>Ex: Python, Java, MongoDB</mat-hint>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"column is-5\\\">\\n        <mat-form-field appearance=\\\"fill\\\">\\n          <mat-label>\\n            <mat-icon matSuffix>place</mat-icon>Location\\n          </mat-label>\\n          <mat-select [(value)]=\\\"selected\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option value=\\\"option1\\\">San Francisco</mat-option>\\n            <mat-option value=\\\"option2\\\">San Jose</mat-option>\\n          </mat-select>\\n\\n          <mat-hint>Hint</mat-hint>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"column is-1\\\">\\n          <p style=\\\"padding-left:20px;\\\">\\n            <button mat-fab color=\\\"basic\\\">Search</button>\\n          </p>\\n      </div>\\n    </div>\\n\\n    <!-- <div class=\\\"columns is-centered\\\">\\n      <div class=\\\"column is-1\\\">\\n        <button class=\\\"example-full-width\\\" mat-raised-button>Search</button>\\n      </div>\\n    </div> -->\\n\\n    <div class=\\\"columns is-centered\\\">\\n      <div class=\\\"column half\\\">\\n\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <mat-card-title>CANDIDATES</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-actions>\\n            <button mat-button [routerLink]=\\\"['/searchcandidates']\\\">View all candidates</button>\\n            <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/onboarding/welcome']\\\">ADD RESUME <i class=\\\"material-icons\\\">note_add</i></button>\\n          </mat-card-actions>\\n          <mat-card-content>\\n            <p>\\n              The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n              A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n              bred for hunting.\\n            </p>\\n          </mat-card-content>\\n\\n        </mat-card>\\n\\n      </div>\\n      <div class=\\\"column half\\\">\\n\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <mat-card-title>JOBS</mat-card-title>\\n          </mat-card-header>\\n          <mat-card-actions>\\n            <button mat-button>View all jobs</button>\\n            <button mat-raised-button [routerLink]=\\\"['/postjob']\\\" color=\\\"accent\\\">POST JOB <i class=\\\"material-icons\\\">add_circle_outline</i></button>\\n          </mat-card-actions>\\n          <mat-card-content>\\n            <p>\\n              The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n              A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n              bred for hunting.\\n            </p>\\n          </mat-card-content>\\n\\n        </mat-card>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"columns\\\">\\n  <div class=\\\"column is-10 is-offset-1\\\">\\n\\n\\n\\n    <h1>#### Welcome to Firestarter</h1>\\n\\n    <a href=\\\"https://slackin-pbfjhfxnsa.now.sh\\\"><img src=\\\"https://slackin-pbfjhfxnsa.now.sh/badge.svg\\\"></a><br>\\n    <a href=\\\"https://circleci.com/gh/codediodeio/angular-firestarter\\\"><img src=\\\"https://circleci.com/gh/codediodeio/angular-firestarter.svg?style=svg\\\"></a>\\n\\n    <p>I am a Progressive Web App (PWA) built with Angular and Firebase.</p>\\n\\n    <h2>Have Questions?</h2>\\n\\n    <br>\\n    <a [routerLink]=\\\"['/adlisting']\\\">\\n      Ad listing\\n    </a>\\n    <br>\\n    <a [routerLink]=\\\"['/postjob']\\\">\\n      Post Job\\n    </a>\\n    <br>\\n    <a [routerLink]=\\\"['/addresume']\\\">\\n      Add Resume\\n    </a>\\n    <br>\\n    <a [routerLink]=\\\"['/viewresume']\\\">\\n      View Resume\\n    </a>\\n\\n    <br>\\n    <a [routerLink]=\\\"['/resumelist']\\\">\\n      List Resume\\n    </a>\\n\\n    <br>\\n    <a [routerLink]=\\\"['/profile']\\\">\\n      Profile\\n    </a>\\n    <br>\\n    <a [routerLink]=\\\"['/profileresume']\\\">\\n      Profile Resume\\n    </a>\\n    <br>\\n    <br>\\n    <a [routerLink]=\\\"['/onboarding/welcome']\\\">on boarding welcome</a>\\n    <br>\\n    <br>\\n    <a [routerLink]=\\\"['/searchcandidates']\\\">search candidates</a>\\n    <br>\\n    <br>\\n    <br>\\n    <a [routerLink]=\\\"['/onboarding/builder']\\\">resume builder</a>\\n    <br>\\n    <p>\\n      <i class=\\\"fa fa-slack fa-lg\\\"></i> Let's talk on the <a target=\\\"blank\\\" href=\\\"https://goo.gl/qF8Q5r\\\">\\n        Angular Firebase Developers Slack Team\\n      </a>\\n    </p>\\n\\n    <h2>Free Open Source Screencasts</h2>\\n\\n    <p>\\n      <i class=\\\"fa fa-youtube fa-lg\\\"></i> Subscribe to the <a href=\\\"https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA\\\">AngularFirebase\\n        YouTube Channel</a> for weekly lessons.\\n    </p>\\n  </div>\\n</div>\"","module.exports = \"mat-form-field {\\n  display: block; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.freehand {\\n  font-family: 'Gochi Hand', cursive;\\n  font-size: 40px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"spinner\\\">\\n  <div class=\\\"rect1\\\"></div>\\n  <div class=\\\"rect2\\\"></div>\\n  <div class=\\\"rect3\\\"></div>\\n  <div class=\\\"rect4\\\"></div>\\n  <div class=\\\"rect5\\\"></div>\\n</div>\\n\"","module.exports = \".spinner {\\n  margin: 100px auto;\\n  width: 50px;\\n  height: 40px;\\n  text-align: center;\\n  font-size: 10px; }\\n\\n.spinner > div {\\n  background-color: #333;\\n  height: 100%;\\n  width: 6px;\\n  display: inline-block;\\n  -webkit-animation: sk-stretchdelay 1.2s infinite ease-in-out;\\n  animation: sk-stretchdelay 1.2s infinite ease-in-out; }\\n\\n.spinner .rect2 {\\n  -webkit-animation-delay: -1.1s;\\n  animation-delay: -1.1s; }\\n\\n.spinner .rect3 {\\n  -webkit-animation-delay: -1.0s;\\n  animation-delay: -1.0s; }\\n\\n.spinner .rect4 {\\n  -webkit-animation-delay: -0.9s;\\n  animation-delay: -0.9s; }\\n\\n.spinner .rect5 {\\n  -webkit-animation-delay: -0.8s;\\n  animation-delay: -0.8s; }\\n\\n@-webkit-keyframes sk-stretchdelay {\\n  0%, 40%, 100% {\\n    -webkit-transform: scaleY(0.4); }\\n  20% {\\n    -webkit-transform: scaleY(1); } }\\n\\n@keyframes sk-stretchdelay {\\n  0%, 40%, 100% {\\n    transform: scaleY(0.4);\\n    -webkit-transform: scaleY(0.4); }\\n  20% {\\n    transform: scaleY(1);\\n    -webkit-transform: scaleY(1); } }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\">\\n    <div class=\\\"navbar-brand\\\">\\n        <a class=\\\"navbar-item\\\" routerLink=\\\"/\\\">\\n            <img src=\\\"assets/images/angularfirebase.png\\\" width=\\\"30px\\\" alt=\\\"Firestarter Angular4 Demo App\\\" /> FireStarter\\n        </a>\\n\\n        <a id=\\\"navToggle\\\" role=\\\"button\\\" class=\\\"navbar-burger\\\" (click)=\\\"toggleCollapse()\\\" [ngClass]=\\\"{'is-active': show}\\\">\\n            <span aria-hidden=\\\"true\\\"></span>\\n            <span aria-hidden=\\\"true\\\"></span>\\n            <span aria-hidden=\\\"true\\\"></span>\\n        </a>\\n        \\n    </div>\\n\\n      \\n    <!-- User NOT logged in -->\\n    <ng-template #guest>\\n    <!-- <p class=\\\"card-text\\\">Login to get started...</p> -->\\n    <div class=\\\"navbar-end\\\">\\n        <a class=\\\"navbar-item\\\" routerLink=\\\"/login\\\">Login</a>\\n        <a class=\\\"navbar-item\\\" routerLink=\\\"/ssr\\\">SSR Universal</a>\\n        <a class=\\\"navbar-item\\\" routerLink=\\\"/notes\\\">Firestore</a>\\n        <a class=\\\"navbar-item\\\" routerLink=\\\"/uploads\\\">File Uploads</a>\\n    </div>\\n    </ng-template>\\n    \\n    <!-- User logged in -->\\n    <ng-template #authenticated>\\n    <div class=\\\"navbar-end\\\" *ngIf=\\\"auth.user | async as user\\\">\\n        <a class=\\\"navbar-item\\\" [matMenuTriggerFor]=\\\"menu\\\">Howdy, <i class=\\\"material-icons\\\">\\n            account_circle\\n            </i>{{ user.displayName }}</a>\\n        \\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item>\\n              <mat-icon>dialpad</mat-icon>\\n              <span>Redial</span>\\n            </button>\\n            <button mat-menu-item disabled>\\n              <mat-icon>voicemail</mat-icon>\\n              <span>Check voicemail</span>\\n            </button>\\n            <button mat-menu-item>\\n              <mat-icon>notifications_off</mat-icon>\\n              <span>Disable alerts</span>\\n            </button>\\n          </mat-menu>\\n        <!-- <a class=\\\"navbar-item mat-icon-button\\\" [matMenuTriggerFor]=\\\"notifications\\\"><i class=\\\"material-icons\\\">\\n            notification_important\\n            </i></a>  \\n        <mat-menu #notifications=\\\"matMenu\\\"></mat-menu> -->\\n        <a class=\\\"navbar-item\\\" (click)=\\\"logout()\\\">Logout <i class=\\\"material-icons\\\">\\n            exit_to_app\\n            </i></a>\\n    </div>\\n    </ng-template>\\n    \\n    <div class=\\\"navbar-menu\\\" [ngClass]=\\\"{'is-active': show}\\\">\\n        <div class=\\\"navbar-item\\\"  *ngIf=\\\"auth.user | async; then authenticated else guest\\\">\\n            \\n                    <!-- template will replace this div -->\\n            \\n        </div>\\n    </div>\\n</nav>\\n\\n  \\n  \"","module.exports = \"nav {\\n  border-bottom: 1px solid #E4E4E4; }\\n\\n.navbar-brand {\\n  padding: 0 3em 0 2em; }\\n\\n.navbar-menu {\\n  padding-right: 3em; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/auth.service';\n@Component({\n  selector: 'main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss']\n})\nexport class MainNavComponent {\n\n  show = false;\n\n  constructor(public auth: AuthService) { }\n\n  toggleCollapse() {\n    this.show = !this.show;\n  }\n\n  logout() {\n    this.auth.signOut();\n  }\n}\n","module.exports = \"<div *ngIf=\\\"notify.msg | async as msg\\\" class=\\\"notification\\\"\\n  [ngClass]=\\\"{ \\n    'is-danger': msg.style == 'error',\\n    'is-success': msg.style == 'success',\\n    'is-info': msg.style == 'info'\\n  }\\\">\\n  <button class=\\\"delete\\\" (click)=\\\"notify.clear()\\\"></button>\\n  {{ msg.content }}\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NotifyService } from '../../core/notify.service';\n\n@Component({\n  selector: 'notification-message',\n  templateUrl: './notification-message.component.html',\n  styleUrls: ['./notification-message.component.scss']\n})\nexport class NotificationMessageComponent {\n\n  constructor(public notify: NotifyService) { }\n}\n","module.exports = \"<h3>Linear Vertical Stepper Demo using a single form</h3>\\n<form [formGroup]=\\\"formGroup\\\" profileResumeForm path=\\\"location/500\\\" (stateChange)=\\\"changeHandler($event)\\\">\\n  <mat-vertical-stepper #linearVerticalStepper=\\\"matVerticalStepper\\\" formArrayName=\\\"formArray\\\" [linear]=\\\"false\\\">\\n    <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"formArray?.get([0])\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <mat-label>First name</mat-label>\\n        <input matInput formControlName=\\\"firstNameFormCtrl\\\" required>\\n        <mat-error>This field is required</mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-label>Last name</mat-label>\\n        <input matInput formControlName=\\\"lastNameFormCtrl\\\" required>\\n        <mat-error>This field is required</mat-error>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </mat-step>\\n\\n    <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"formArray?.get([1])\\\">\\n      <ng-template matStepLabel>\\n        <div>Fill out your email address</div>\\n      </ng-template>\\n      <mat-form-field>\\n        <mat-label>Email address</mat-label>\\n        <input matInput formControlName=\\\"emailFormCtrl\\\">\\n        <mat-error>The input is invalid.</mat-error>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </mat-step>\\n\\n    <mat-step>\\n      <ng-template matStepLabel>Confirm your information</ng-template>\\n      Everything seems correct.\\n      <div>\\n        <button mat-button>Done</button>\\n        <button type=\\\"button\\\" mat-button (click)=\\\"linearVerticalStepper.reset()\\\">Reset</button>\\n      </div>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n</form>\\n\\n\"","module.exports = \"\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { AngularFirestore } from 'angularfire2/firestore'\nimport { tap, first, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'builder',\n  templateUrl: './builder.component.html',\n  styleUrls: ['./builder.component.scss']\n})\nexport class BuilderComponent implements OnInit {\n\n  fruits: Array<string> = [\"apple\", \"pear\", \"kiwi\", \"banana\", \"grape\", \"strawberry\", \"grapefruit\", \"melon\", \"mango\", \"plum\"];\n\n  formGroup: FormGroup;\n  myDoc;\n  state: string;\n  nameFormGroup: FormGroup;\n  emailFormGroup: FormGroup;\n\n  steps = [\n    {label: 'Confirm your name', content: 'Last name, First name.'},\n    {label: 'Confirm your contact information', content: '123-456-7890'},\n    {label: 'Confirm your address', content: '1600 Amphitheater Pkwy MTV'},\n    {label: 'You are now done', content: 'Finished!'}\n  ];\n\n  /** Returns a FormArray with the name 'formArray'. */\n  get formArray(): AbstractControl | null { return this.formGroup.get('formArray'); }\n\n  constructor(private _formBuilder: FormBuilder, private afs: AngularFirestore, private zone: NgZone) { }\n\n  ngOnInit() {\n    this.formGroup = this._formBuilder.group({\n      formArray: this._formBuilder.array([\n        this._formBuilder.group({\n          firstNameFormCtrl: ['', Validators.required],\n          lastNameFormCtrl: ['', Validators.required],\n        }),\n        this._formBuilder.group({\n          emailFormCtrl: ['', Validators.email]\n        }),\n      ])\n    });\n\n    this.myDoc = this.afs.doc('location/500').valueChanges();\n\n    this.preloadData()\n    \n    this.nameFormGroup = this._formBuilder.group({\n      firstNameCtrl: ['', Validators.required],\n      lastNameCtrl: ['', Validators.required],\n    });\n\n    this.emailFormGroup = this._formBuilder.group({\n      emailCtrl: ['', Validators.email]\n    });\n  }\n\n  changeHandler(e) {\n    console.log(e)\n    //this.state = e;\n  }\n\n  preloadData() {\n\n    this.state = 'loading';\n\n    this.afs.doc('location/500').valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.formGroup.controls['location'].setValue(data['location'])\n          \n        }\n      }),take(1)\n    )\n    .subscribe()\n  }\n}\n","module.exports = \"\\n<form [formGroup]=\\\"myForm\\\" profileResumeForm path=\\\"location/1\\\" \\n      (stateChange)=\\\"changeHandler($event)\\\">\\n<div class=\\\"columns\\\">\\n  <div class=\\\"column is-12\\\">\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column is-10 is-offset-1\\\">\\n            <h1 class=\\\"head\\\">Welcome to HireMuse!</h1>\\n            <h4>Let's start with your profile. This will help you succeed on HireMuse.</h4>\\n        </div>\\n    </div>\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n          <mat-card>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-label>Current city, state or country</mat-label>\\n                  <input \\n                    #locationinput\\n                    matInput\\n                    formControlName=\\\"location\\\"\\n                    type=\\\"text\\\"\\n                    class=\\\"google-place-input\\\"\\n                    google-place\\n                    (onSelect)=\\\"setAddress($event)\\\"\\n                    placeholder=\\\"Type to search..\\\">\\n                  <mat-hint>Current location</mat-hint>\\n\\n              </mat-form-field>\\n              <!-- Displaying the contents of the address object received from our event emitter -->\\n              <!-- <ul style=\\\"list-style-type: none;\\\">\\n                <li *ngFor=\\\"let key of addrKeys\\\">\\n                  <span style=\\\"font-weight: bold\\\">{{key}}</span>: <span>{{addr[key]}}</span>\\n                </li>\\n              </ul> -->\\n              <br><br><br>\\n              <div class=\\\"columns is-mobile is-centered\\\">\\n                <div class=\\\"column is-half\\\">\\n                  <button class=\\\"example-full-width\\\" mat-raised-button color=\\\"primary\\\">Save & continue</button>\\n                  <br><br>\\n                  <a mat-button class=\\\"example-full-width\\\" [routerLink]=\\\"['/onboarding/looking']\\\">Skip for now >></a>\\n                </div>\\n              </div>\\n                              \\n          </mat-card>\\n        </div>\\n      </div>\\n    </div>\\n    \\n</div>\\n            \\n</form>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.head {\\n  font-family: 'IBM Plex Sans', sans-serif; }\\n\"","import { Component, NgZone, OnInit } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore'\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl  } from '@angular/forms'\nimport { tap, first, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.scss']\n})\nexport class LocationComponent implements OnInit {\n\n  public title = 'Places';\n  public addrKeys: string[];\n  public addr: object;\n  \n  myForm: FormGroup;\n  myDoc;\n  state: string;\n\n  //Method to be invoked everytime we receive a new instance \n  //of the address object from the onSelect event emitter.\n  setAddress(addrObj) {\n    //We are wrapping this in a NgZone to reflect the changes\n    //to the object in the DOM.\n    //console.log(JSON.stringify(addrObj))\n    this.zone.run(() => {\n      this.addr = addrObj;\n      this.addrKeys = Object.keys(addrObj);\n      console.log(addrObj['formatted_address'])\n      //this.myForm.controls['location'].setValue(addrObj)\n      this.myForm.controls['location'].setValue(addrObj['formatted_address'])\n      \n      //this.myForm.addControl('location', new FormControl('formatted_address'));\n      \n      this.myForm.addControl('locationname', new FormControl(addrObj, Validators.required));\n      //this.state = 'modified';\n    });\n  }\n\n  constructor(private fb: FormBuilder, private afs: AngularFirestore, private zone: NgZone) {}\n\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      location: [''],\n      chosenlocations: this.fb.array([])\n      }\n    )\n\n    this.myDoc = this.afs.doc('location/1').valueChanges();\n\n    this.preloadData()\n  }\n\n\n  changeHandler(e) {\n    console.log(e)\n    //this.state = e;\n  }\n  locationprint(inVal: HTMLInputElement) {\n    console.log(inVal.value);\n    this.state = 'modified';\n    //console.log(locationname.value);\n  \n  }\n\n  get chosenlocationForms() {\n    return this.myForm.get('chosenlocations') as FormArray\n  }\n\n  preloadData() {\n\n    this.state = 'loading';\n\n    this.afs.doc('location/1').valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.myForm.controls['location'].setValue(data['location'])\n          //this.myForm.controls['locationname'].setValue(data['locationname'])\n          \n          if (data['chosenlocations']){\n            data['chosenlocations'].forEach(item => {\n              const pickedlocation = this.fb.group({\n                locale : [item['location']]\n              })\n              \n            });\n          }\n\n        }\n      }),take(1)\n    )\n    .subscribe()\n  }\n    \n}\n","module.exports = \"<div class=\\\"columns\\\">\\n  <div class=\\\"column is-12\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n        <h1 class=\\\"head\\\">Resume onboarding</h1>\\n      </div>\\n    </div>\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n        <mat-card>\\n\\n\\n\\n          <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n            <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n              \\n              <form [formGroup]=\\\"firstFormGroup\\\" profileResumeForm path=\\\"location/100\\\" (stateChange)=\\\"changeHandler($event)\\\">\\n                <ng-template matStepLabel>Desired job location</ng-template>\\n\\n                <h5 class=\\\"hiremusefont\\\">Apply privately. No middlemen. Build your network and future team.</h5>\\n                <mat-divider></mat-divider>\\n                <br>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <mat-label>Current city, state or country</mat-label>\\n                    <input \\n                      matInput\\n                      formControlName=\\\"location\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Type to search..\\\">\\n                    <mat-hint>Current location</mat-hint>\\n                  </mat-form-field>\\n                <!-- <div class=\\\"columns\\\">\\n                  <div class=\\\"column is-5\\\">\\n                    <mat-radio-group class=\\\"example-radio-group\\\">\\n                      <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"1\\\">Yes, Actively looking</mat-radio-button>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"2\\\">No, NOT actively</mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div> -->\\n                <!-- <div class=\\\"columns is-mobile is-centered\\\">\\n                        <div class=\\\"column is-5\\\">\\n                          <button class=\\\"example-full-width\\\" mat-raised-button color=\\\"primary\\\">Save & continue</button>\\n                          <br><br>\\n                          <a mat-button class=\\\"example-full-width\\\" [routerLink]=\\\"['/onboarding/profile']\\\">Skip for now >></a>\\n                        </div>\\n                      </div> -->\\n\\n                <div>\\n                  <button mat-button matStepperNext>Next</button>\\n                </div>\\n              </form>\\n            </mat-step>\\n            <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n              <form [formGroup]=\\\"secondFormGroup\\\">\\n                <ng-template matStepLabel>Fill out your address</ng-template>\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n                </mat-form-field>\\n                <div>\\n                  <button mat-button matStepperPrevious>Back</button>\\n                  <button mat-button matStepperNext>Next</button>\\n                </div>\\n              </form>\\n            </mat-step>\\n            <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\n              <form [formGroup]=\\\"thirdFormGroup\\\">\\n                <ng-template matStepLabel>Fill out your address</ng-template>\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Address\\\" formControlName=\\\"thirdCtrl\\\" required>\\n                </mat-form-field>\\n                <div>\\n                  <button mat-button matStepperPrevious>Back</button>\\n                  <button mat-button matStepperNext>Next</button>\\n                </div>\\n              </form>\\n\\n            </mat-step>\\n            <mat-step>\\n              <ng-template matStepLabel>Done</ng-template>\\n              You are now done.\\n              <div>\\n                <button mat-button matStepperPrevious>Back</button>\\n                <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n              </div>\\n            </mat-step>\\n          </mat-vertical-stepper>\\n        </mat-card>\\n\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \".example-radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.example-radio-button {\\n  margin: 5px; }\\n\\n.example-selected-value {\\n  margin: 15px 0; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\"","import { Component, NgZone, OnInit } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore'\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { tap, first, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'looking',\n  templateUrl: './looking.component.html',\n  styleUrls: ['./looking.component.scss']\n})\nexport class LookingComponent implements OnInit {\n\n  //firstFormGroup: FormGroup;\n  myDoc;\n  state: string;\n\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  formGroup: FormGroup;\n\n  constructor(private _formBuilder: FormBuilder, private afs: AngularFirestore, private zone: NgZone) { }\n\n  ngOnInit() {\n\n\n    this.firstFormGroup = this._formBuilder.group({\n      location: ['']\n      }\n    )\n\n    this.myDoc = this.afs.doc('location/100').valueChanges();\n\n    this.preloadData()\n\n    this.firstFormGroup = this._formBuilder.group({\n      location: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n    this.thirdFormGroup = this._formBuilder.group({\n      thirdCtrl: ['', Validators.required]\n    });\n  }\n\n\n  changeHandler(e) {\n    console.log(e)\n    //this.state = e;\n  }\n\n  preloadData() {\n\n    this.state = 'loading';\n\n    this.afs.doc('location/100').valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.firstFormGroup.controls['location'].setValue(data['location'])\n          \n        }\n      }),take(1)\n    )\n    .subscribe()\n  }\n    \n\n}\n","module.exports = \"<div class=\\\"columns\\\">\\n  <div class=\\\"column is-12\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n        <h1 class=\\\"head\\\">Profile basics.</h1>\\n        <h4>Tell potential employers who you are and what you do.</h4>\\n      </div>\\n    </div>\\n    <div class=\\\"columns\\\" style=\\\"min-height:500px;\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n\\n        <div class=\\\"columns\\\">\\n          <div class=\\\"column\\\">\\n            <h5>* Are you a student or a new grad?</h5>\\n            <mat-radio-group class=\\\"example-radio-group\\\">\\n              <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"1\\\">Yes</mat-radio-button>\\n              <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"2\\\">No</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"columns\\\">\\n          <div class=\\\"column\\\">\\n            <h5>* What best describes your current role?</h5>\\n            <mat-checkbox class=\\\"example-margin\\\">Software Engineer</mat-checkbox>\\n            <mat-checkbox class=\\\"example-margin\\\">Designer UI/UX</mat-checkbox>\\n            <mat-checkbox class=\\\"example-margin\\\">Software Architect</mat-checkbox>\\n            <mat-checkbox class=\\\"example-margin\\\">Product Manager</mat-checkbox>\\n            <mat-checkbox class=\\\"example-margin\\\">Quality Assurance</mat-checkbox>\\n\\n          </div>\\n        </div>\\n\\n        <br><br><br>\\n        <div class=\\\"columns is-mobile is-centered\\\">\\n          <div class=\\\"column is-5\\\">\\n            <button class=\\\"example-full-width\\\" mat-raised-button color=\\\"primary\\\">Save and continue</button>\\n            <br><br>\\n            <a mat-button class=\\\"example-full-width\\\" [routerLink]=\\\"['/onboarding/preferences']\\\">Skip for now <i class=\\\"material-icons\\\">arrow_forward_ios</i>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".example-margin {\\n  margin: 0 10px; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'onboardingprofile',\n  templateUrl: './onboardingprofile.component.html',\n  styleUrls: ['./onboardingprofile.component.scss']\n})\nexport class OnboardingprofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"columns\\\">\\n    <div class=\\\"column is-12\\\">\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column is-10 is-offset-1\\\">\\n          <h1 class=\\\"head\\\">Find the right opportunities</h1>\\n          <h4>Your answers determine which jobs we recommend for you and which companies see your profile.</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"columns\\\" style=\\\"min-height:500px;\\\">\\n        <div class=\\\"column is-10 is-offset-1\\\">\\n  \\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column\\\">\\n              <h5>* What types of job are you interested in?</h5>\\n              <mat-radio-group class=\\\"example-radio-group\\\">\\n                <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"Full-time Employee\\\">Full-time Employee</mat-radio-button>\\n                <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"Contractor\\\">Contractor</mat-radio-button>\\n                <mat-radio-button class=\\\"example-radio-button\\\" value=\\\"Intern\\\">Intern</mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n          </div>\\n  \\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column\\\">\\n              <h5>* Desired salary?</h5>\\n              <mat-form-field>\\n                  <input matInput \\n                      placeholder=\\\"Desired Annual Salary\\\" type=\\\"number\\\" class=\\\"example-right-align\\\">\\n                  <span matPrefix>$&nbsp;</span>\\n                  <span matSuffix>.00</span>\\n              </mat-form-field>\\n  \\n            </div>\\n          </div>\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column\\\">\\n              <h5>* Are you legally authorized to work in the United States?</h5>\\n              <mat-radio-group>\\n                  <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                  <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n          </div>\\n  \\n          <div class=\\\"columns\\\">\\n              <div class=\\\"column\\\">\\n                <h5>* Do you or will you require sponsorship for a US employment visa?</h5>\\n                <mat-radio-group>\\n                    <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                    <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                </mat-radio-group>\\n              </div>\\n            </div>\\n\\n          <br><br><br>\\n          <div class=\\\"columns is-mobile is-centered\\\">\\n            <div class=\\\"column is-5\\\">\\n              <button class=\\\"example-full-width\\\" mat-raised-button color=\\\"primary\\\">Save and continue</button>\\n              <br><br>\\n              <a mat-button class=\\\"example-full-width\\\" [routerLink]=\\\"['/profileresume']\\\">Skip for now <i class=\\\"material-icons\\\">arrow_forward_ios</i>\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'preferences',\n  templateUrl: './preferences.component.html',\n  styleUrls: ['./preferences.component.scss']\n})\nexport class PreferencesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  preview works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.scss']\n})\nexport class PreviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"columns\\\">\\n  <div class=\\\"column is-12\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n        <h1 class=\\\"head\\\">What are you interested in?</h1>\\n        <h4>Personalize your experience</h4>\\n      </div>\\n    </div>\\n    <div class=\\\"columns\\\" style=\\\"min-height:500px;\\\">\\n      <div class=\\\"column is-10 is-offset-1\\\">\\n        \\n          <div class=\\\"columns is-centered\\\">\\n            <div class=\\\"column half\\\">\\n              <h5 class=\\\"hiremusefont\\\">FOR INDIVIDUALS</h5>\\n              <mat-divider></mat-divider>\\n              <br>\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column\\\">\\n                  <mat-checkbox class=\\\"example-margin\\\">Jobs</mat-checkbox>\\n                  <br><span class=\\\"testpad\\\">Search apply, connect with teams and companies.</span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column\\\">\\n                  <mat-checkbox class=\\\"example-margin\\\">Build your network</mat-checkbox>\\n                  <br><span class=\\\"testpad\\\">Extend your network.</span>\\n                </div>\\n              </div>\\n\\n            </div>\\n            <div class=\\\"column half\\\">\\n              <h5 class=\\\"hiremusefont\\\">FOR COMPANIES</h5>\\n              <mat-divider></mat-divider>\\n              <br>\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column\\\">\\n                  <mat-checkbox class=\\\"example-margin\\\">Recruit</mat-checkbox>\\n                  <br><span class=\\\"testpad\\\">Meet your future team.</span>\\n                </div>\\n              </div>\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column\\\">\\n                  <mat-checkbox class=\\\"example-margin\\\">Promote your company</mat-checkbox>\\n                  <br><span class=\\\"testpad\\\">Share your product(s), inspire, find partners.</span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <br><br><br>\\n          <div class=\\\"columns is-mobile is-centered\\\">\\n            <div class=\\\"column is-half\\\">\\n              <button class=\\\"example-full-width\\\" mat-raised-button color=\\\"primary\\\">Save and continue</button>\\n              <br><br>\\n              <a mat-button class=\\\"example-full-width\\\" [routerLink]=\\\"['/onboarding/location']\\\">Skip for now <i class=\\\"material-icons\\\">arrow_forward_ios</i>\\n              </a>\\n            </div>\\n          </div>\\n\\n        \\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \".example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 0 10px;\\n  width: 100%; }\\n\\n.testpad {\\n  margin: 40px; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.head {\\n  font-family: 'IBM Plex Sans', sans-serif; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  checked = false;\n  indeterminate = false;\n  labelPosition = 'after';\n  disabled = false;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"myForm\\\" profileResumeForm path=\\\"jobs/1\\\" (stateChange)=\\\"changeHandler($event)\\\">\\n\\n<div class=\\\"columns\\\">\\n  <div class=\\\"column is-narrow\\\" style=\\\"background-color:#f4f5f7; \\\">\\n    <div class=\\\"\\\" style=\\\"width: 55px;\\\">\\n      <mat-toolbar style=\\\"background-color: transparent\\\">\\n          <mat-toolbar-row>\\n            <button mat-icon-button color=\\\"blue\\\">\\n              <mat-icon class=\\\"example-icon\\\">description</mat-icon>\\n            </button>\\n          </mat-toolbar-row>\\n          <mat-toolbar-row>\\n            <button mat-icon-button color=\\\"\\\">\\n              <mat-icon aria-label=\\\"\\\">note_add</mat-icon>\\n            </button>\\n          </mat-toolbar-row>\\n          <mat-toolbar-row>\\n            <button mat-icon-button color=\\\"\\\">\\n              <mat-icon class=\\\"example-icon\\\">delete</mat-icon>\\n            </button>\\n          </mat-toolbar-row>\\n        </mat-toolbar>\\n    </div>\\n  </div>\\n  <div class=\\\"column\\\">\\n    \\n      <div class=\\\"columns\\\">\\n          <div class=\\\"column is-12\\\">\\n            <div class=\\\"columns\\\">\\n              <div class=\\\"column is-10 is-offset-1\\\">\\n                <h1 class=\\\"head\\\">Post Job!!</h1>\\n                <h4>Let's start with your profile. This will help you succeed on HireMuse.</h4>\\n              </div>\\n            </div>\\n            <div class=\\\"columns\\\">\\n              <div class=\\\"column is-10 is-offset-1\\\">\\n                <mat-card>\\n    \\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <mat-label>Job Title</mat-label>\\n                    <input matInput placeholder=\\\"Candidate Name\\\" formControlName=\\\"jobtitle\\\">\\n                    <mat-hint>Ex: Software Engineer, Product Manager</mat-hint>\\n                  </mat-form-field>\\n                    \\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput #jobdescription maxlength=\\\"500\\\" placeholder=\\\"Job Description\\\" cdkTextareaAutosize\\n                      #autosize=\\\"cdkTextareaAutosize\\\" cdkAutosizeMinRows=\\\"2\\\" cdkAutosizeMaxRows=\\\"15\\\" formControlName=\\\"jobdescription\\\"></textarea>\\n                    <mat-hint align=\\\"start\\\"><strong>Regular job duties, expected and performed.</strong>\\n                    </mat-hint>\\n                    <mat-hint align=\\\"end\\\">{{jobdescription.value.length}} / 500</mat-hint>\\n                  </mat-form-field>\\n                  \\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Choose skill\\\" formControlName=\\\"skillname\\\">\\n                      <mat-option value=\\\".NET\\\">.NET</mat-option>\\n                      <mat-option value=\\\"Python\\\">Python</mat-option>\\n                      <mat-option value=\\\"Java\\\">Java</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n    \\n                  <div class=\\\"columns\\\">\\n                    <div class=\\\"column is-6\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <mat-label>Current city, state or country</mat-label>\\n                        <input #locationinput matInput formControlName=\\\"location\\\" type=\\\"text\\\" class=\\\"google-place-input\\\"\\n                          google-place (onSelect)=\\\"setAddress($event)\\\" placeholder=\\\"Type to search..\\\">\\n                        <mat-hint>Current location</mat-hint>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"column is-6\\\">\\n                      <mat-checkbox formControlName=\\\"canworkremotely\\\">Can work remotely</mat-checkbox>\\n                    </div>\\n                  </div>\\n                  <br>\\n    \\n                  <mat-accordion class=\\\"example-headers-align\\\">\\n                    <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          Other details\\n                        </mat-panel-title>\\n                        <mat-panel-description class=\\\"is-pulled-right\\t\\\">\\n                          Type, experience and role\\n                          <mat-icon>account_circle</mat-icon>\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n                      <p>I'm visible because I am open</p>\\n                      <div class=\\\"columns\\\">\\n                          <div class=\\\"column is-5\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                              <mat-select placeholder=\\\"Job Type\\\" multiple formControlName=\\\"jobtype\\\">\\n                                <mat-option *ngFor=\\\"let job of typesOfJobs\\\" [value]=\\\"job\\\">{{job}}</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                          <div class=\\\"column is-5\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                              <mat-select placeholder=\\\"Role\\\" multiple formControlName=\\\"primaryrole\\\">\\n                                <mat-option *ngFor=\\\"let role of listRole\\\" [value]=\\\"role\\\">{{role}}</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n            \\n                        <div class=\\\"columns\\\">\\n                          <div class=\\\"column is-5\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                              <mat-select placeholder=\\\"Work experience\\\" formControlName=\\\"workexperience\\\">\\n                                <mat-option value=\\\"0-1 years\\\">0-1 years</mat-option>\\n                                <mat-option value=\\\"1-5 years\\\">1-5 years</mat-option>\\n                                <mat-option value=\\\"5-8 years\\\">5-8 years</mat-option>\\n                                <mat-option value=\\\"8-15 years\\\">8-15 years</mat-option>\\n                                <mat-option value=\\\"15+ years\\\">15+ years</mat-option>\\n                              </mat-select>\\n                            </mat-form-field>\\n                          </div>\\n                          <div class=\\\"column is-6\\\"></div>\\n                        </div>\\n            \\n    \\n                      <mat-action-row>\\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n                      </mat-action-row>\\n                    </mat-expansion-panel>\\n    \\n                    <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                            Work Authorization\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          Sponsorship and authorization\\n                          <mat-icon>map</mat-icon>\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n    \\n                      <h6>Are you legally authorized to work in the United\\n                          States</h6>\\n                        <mat-radio-group formControlName=\\\"legallyauthorized\\\">\\n                          <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                          <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                        </mat-radio-group>\\n                        <h6>Do you or will you require sponsorship for a US\\n                          employment visa</h6>\\n                        <mat-radio-group formControlName=\\\"requiresponsorship\\\">\\n                          <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                          <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                        </mat-radio-group>\\n    \\n                      <mat-action-row>\\n                        <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n                      </mat-action-row>\\n                    </mat-expansion-panel>\\n    \\n                    <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          Day of the trip\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          Inform the date you wish to travel\\n                          <mat-icon>date_range</mat-icon>\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n    \\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly>\\n                      </mat-form-field>\\n                      <mat-datepicker #picker></mat-datepicker>\\n    \\n                      <mat-action-row>\\n                        <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button>\\n                      </mat-action-row>\\n                    </mat-expansion-panel>\\n    \\n                  </mat-accordion>\\n    \\n                  <br><br>\\n                  <div class=\\\"columns\\\">\\n                    <div class=\\\"column is-6\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <mat-label>Your name</mat-label>\\n                        <input matInput formControlName=\\\"contactname\\\" type=\\\"text\\\" placeholder=\\\"Job contact name.\\\">\\n                        <mat-hint>Job posted by name</mat-hint>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"column is-6\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <mat-label>Your company name</mat-label>\\n                        <input matInput formControlName=\\\"companyname\\\" type=\\\"text\\\" placeholder=\\\"Company name.\\\">\\n                        <mat-hint>Company name</mat-hint>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"columns\\\">\\n                    <div class=\\\"column is-3\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <mat-label>Contact phone number</mat-label>\\n                        <input matInput formControlName=\\\"contactphonenumber1\\\" type=\\\"text\\\" placeholder=\\\"Phone number\\\">\\n                        <mat-hint>Contact phone number</mat-hint>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"column is-3\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <mat-label>Alternate phone number</mat-label>\\n                        <input matInput formControlName=\\\"contactphonenumber2\\\" type=\\\"text\\\" placeholder=\\\"Alternate phone number\\\">\\n                        <mat-hint>Alternate phone number</mat-hint>\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"column is-3\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput placeholder=\\\"Enter your email\\\" formControlName=\\\"contactemail\\\" required>\\n                        <!-- <mat-error *ngIf=\\\"contactemail.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\n                      </mat-form-field>\\n                    </div>\\n                    <div class=\\\"column is-3\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput placeholder=\\\"Confirm your email\\\" formControlName=\\\"confirmcontactemail\\\" required>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                  <br>\\n    \\n                  <br><br><br>\\n                  <div class=\\\"columns is-mobile is-centered\\\">\\n                    <div class=\\\"column is-half\\\">\\n                      <button class=\\\"example-full-width\\\" mat-raised-button color=\\\"primary\\\">Save & continue</button>\\n                    </div>\\n                  </div>\\n    \\n                </mat-card>\\n              </div>\\n            </div>\\n          </div>\\n    \\n        </div>\\n  </div>\\n</div>\\n\\n\\n</form>\"","module.exports = \".form {\\n  width: 100%; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n#contentAddJob {\\n  /* padding: 20px;\\n    width: 70%;\\n    margin: 10px;\\n    z-index: 3;\\n    display: inline-block; */\\n  /*width: 930px;*/\\n  margin: 0 auto;\\n  left: 0;\\n  right: 0;\\n  padding: 20px 20px 20px;\\n  margin-bottom: 20px;\\n  z-index: 3;\\n  position: relative; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n  align-items: right; }\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: right; }\\n\"","import { Component, EventEmitter, Input, Output, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl, AbstractControl } from '@angular/forms'\nimport { AngularFirestore } from 'angularfire2/firestore'\nimport { BehaviorSubject } from 'rxjs'\nimport { tap, first, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'postjob',\n  templateUrl: './postjob.component.html',\n  styleUrls: ['./postjob.component.scss']\n})\nexport class PostjobComponent implements OnInit {\n  \n  public title = 'Places';\n  public addrKeys: string[];\n  public addr: object;\n\n  myForm: FormGroup;\n  myDoc;\n  state: string;\n\n  typesOfJobs: string[] = ['Full time employee', 'Contractor', 'Intern'];\n  listRole: string[] = ['Software Engineer', 'Product Manager', 'Designer'];\n  constructor(private fb: FormBuilder, private afs: AngularFirestore, private zone: NgZone) { }\n\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      jobtitle: [''],\n      jobdescription: [''],\n      jobtype: [''],\n      primaryrole: [''],\n      workexperience: [''],\n      skillname: [''],\n      location: [''],\n      legallyauthorized: [''],\n      canworkremotely: [''],\n      requiresponsorship: [''],\n      contactname: [''],\n      companyname: [''],\n      contactemail: [''],\n      confirmcontactemail: [''],\n      contactphonenumber1: [''],\n      contactphonenumber2:['']\n      //contactemail: ['', Validators.required, Validators.email]\n      //chosenlocations: this.fb.array([])\n      }\n    )\n\n    this.myDoc = this.afs.doc('jobs/1').valueChanges();\n\n    this.preloadData()\n  }\n\n\n  preloadData() {\n\n    this.state = 'loading';\n\n    this.afs.doc('jobs/1').valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.myForm.controls['jobtitle'].setValue(data['jobtitle'])\n          this.myForm.controls['jobdescription'].setValue(data['jobdescription'])\n          this.myForm.controls['location'].setValue(data['location'])\n          this.myForm.controls['canworkremotely'].setValue(data['canworkremotely'])\n          \n          this.myForm.controls['jobtype'].setValue(data['jobtype'])\n          this.myForm.controls['primaryrole'].setValue(data['primaryrole'])\n          this.myForm.controls['workexperience'].setValue(data['workexperience']);\n          this.myForm.controls['skillname'].setValue(data['skillname']);\n\n          \n          \n          this.myForm.controls['legallyauthorized'].setValue(data['legallyauthorized']);\n          this.myForm.controls['requiresponsorship'].setValue(data['requiresponsorship']);\n\n\n          this.myForm.controls['contactname'].setValue(data['contactname']);\n          this.myForm.controls['companyname'].setValue(data['companyname']);\n          this.myForm.controls['contactemail'].setValue(data['contactemail']);\n          this.myForm.controls['confirmcontactemail'].setValue(data['confirmcontactemail']);\n          this.myForm.controls['contactphonenumber1'].setValue(data['contactphonenumber1']);\n          this.myForm.controls['contactphonenumber2'].setValue(data['contactphonenumber2']);\n          //this.myForm.controls[''].setValue(data['']);\n\n          // if (data['chosenlocations']){\n          //   data['chosenlocations'].forEach(item => {\n          //     const pickedlocation = this.fb.group({\n          //       locale : [item['location']]\n          //     })\n              \n          //   });\n          // }\n\n        }\n      }),take(1)\n    )\n    .subscribe()\n  }\n\n\n  changeHandler(e) {\n    console.log(e)\n    //this.state = e;\n  }\n\n\n  //Method to be invoked everytime we receive a new instance \n  //of the address object from the onSelect event emitter.\n  setAddress(addrObj) {\n    //We are wrapping this in a NgZone to reflect the changes\n    //to the object in the DOM.\n    //console.log(JSON.stringify(addrObj))\n    this.zone.run(() => {\n      this.addr = addrObj;\n      this.addrKeys = Object.keys(addrObj);\n      console.log(addrObj['formatted_address'])\n      //this.myForm.controls['location'].setValue(addrObj)\n      this.myForm.controls['location'].setValue(addrObj['formatted_address'])\n      \n      //this.myForm.addControl('location', new FormControl('formatted_address'));\n      \n      //this.myForm.addControl('locationname', new FormControl(addrObj, Validators.required));\n      //this.state = 'modified';\n    });\n  }\n  locationprint(inVal: HTMLInputElement) {\n    console.log(inVal.value);\n    this.state = 'modified';\n    //console.log(locationname.value);\n  \n  }\n\n  step = 1;\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  getErrorMessage() {\n    return this.myForm.controls['contactemail'].hasError('required') ? 'You must enter a value' :\n    this.myForm.controls['contactemail'].hasError('email') ? 'Not a valid email' :\n            '';\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostListener, OnInit, OnDestroy } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { tap, map, take, debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport {\n  MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSnackBarConfig,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition\n} from '@angular/material';\n\n\n@Directive({\n  selector: '[profileResumeForm]'\n})\nexport class ProfileResumeFormDirective implements OnInit, OnDestroy {\n\n  // Inputs\n  @Input() path: string;\n  @Input() formGroup: FormGroup;\n\n  // Internal state\n  private _state: 'loading' | 'synced' | 'modified' | 'error';\n\n  message: string = 'Snack Bar opened.';\n  actionButtonLabel: string = 'Retry';\n  action: boolean = true;\n  setAutoHide: boolean = true;\n  autoHide: number = 2000;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  // Outputs\n  @Output() stateChange = new EventEmitter<string>();\n  @Output() formError = new EventEmitter<string>();\n\n  // Firestore Document\n  private docRef: AngularFirestoreDocument;\n\n  // Subscriptions\n  private formSub: Subscription;\n\n  constructor(private fb: FormBuilder, private afs: AngularFirestore,\n    public snackBar: MatSnackBar, public dialog: MatDialog) { }\n\n\n  ngOnInit() {\n    this.docRef = this.getDocRef(this.path);\n    this.autoSave();\n  }\n\n  \n  // Autosaves form changes\n  autoSave() {\n    this.formSub = this.formGroup.valueChanges\n    .pipe(\n      tap(change => {\n        this.state = 'modified';\n      }),\n      debounceTime(2000),\n      tap(change => {\n        if (this.formGroup.valid && this._state === 'modified') {\n          this.setDoc();\n        }\n      })\n    )\n    .subscribe();\n  }\n\n  // Intercept form submissions to perform the document write\n  @HostListener('ngSubmit', ['$event'])\n  onSubmit(e) {\n    this.setDoc();\n  }\n\n\n  // Determines if path is a collection or document\n  getDocRef(path: string): any {\n    if (path.split('/').length % 2) {\n      return this.afs.doc(`${path}/${this.afs.createId()}`);\n    } else {\n      return this.afs.doc(path);\n    }\n  }\n\n  openSnackBar(message: string, action: string) {\n\n    let config = new MatSnackBarConfig();\n    config.verticalPosition = this.verticalPosition;\n    config.horizontalPosition = this.horizontalPosition;\n    config.duration = this.setAutoHide ? this.autoHide : 0;\n    //this.snackBar.open(message, this.action ? this.actionButtonLabel : undefined, config);\n    this.snackBar.open(message,'',config)\n  }\n\n  // Writes changes to Firestore\n  async setDoc() {\n    try {\n      await this.docRef.set(this.formGroup.value, { merge: true });\n      this.state = 'synced';\n      this.openSnackBar('Auto saved.','Succes')\n    } catch (err) {\n      console.log(err)\n      this.formError.emit(err.message)\n      this.state = 'error';\n    }\n  }\n  \n  // Setter for state changes\n  set state(val) {\n    this._state = val;\n    this.stateChange.emit(val);\n  }\n\n  ngOnDestroy() {\n    this.formSub.unsubscribe();\n  }\n\n\n}\n","module.exports = \"<h1 mat-dialog-title>Hi {{data.name}}</h1>\\n<div mat-dialog-content>\\n  <p>What's your favorite animal?</p>\\n  <mat-form-field>\\n    <!-- <input matInput [(ngModel)]=\\\"data.animal\\\"> -->\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\n  <button mat-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>\\n</div>\"","module.exports = \"<form [formGroup]=\\\"myForm\\\">\\n  <!-- <mat-drawer-container class=\\\"example-container\\\" autosize>\\n    <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\">\\n      <p>Auto-resizing sidenav</p>\\n      <p *ngIf=\\\"showFiller\\\">Lorem, ipsum dolor sit amet consectetur.</p>\\n      <button (click)=\\\"showFiller = !showFiller\\\" mat-raised-button>\\n        Toggle extra text\\n      </button>\\n    </mat-drawer>\\n    <hr>\\n    <button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">\\n      Toggle sidenav\\n    </button> -->\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column is-12\\\">\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column is-10 is-offset-1\\\">\\n          <span class=\\\"font-family: 'Raleway', sans-serif;\\\">Resume</span>\\n        </div>\\n      </div>\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column is-10 is-offset-1\\\">\\n          <mat-tab-group dynamicHeight>\\n            <mat-tab label=\\\"Basics\\\">\\n              <div class=\\\"example-large-box mat-elevation-z4\\\">\\n                <div class=\\\"columns\\\">\\n                  <div class=\\\"column is-11\\\">\\n                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">&nbsp;</td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Candidate Name\\\" formControlName=\\\"name\\\">\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Location\\\" formControlName=\\\"location\\\">\\n                          </mat-form-field>\\n                        </td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <!-- <textarea matInput placeholder=\\\"Mini Resume\\\" formControlName=\\\"miniresume\\\"></textarea> -->\\n                            <textarea matInput #message maxlength=\\\"256\\\" placeholder=\\\"Mini Resume\\\" formControlName=\\\"miniresume\\\"></textarea>\\n                            <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong> </mat-hint>\\n                            <mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Role\\\" formControlName=\\\"role\\\">\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <textarea matInput placeholder=\\\"your message...\\\" formControlName=\\\"message\\\"></textarea>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                    </table>\\n\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Talent Profile\\\">\\n              <div class=\\\"example-large-box mat-elevation-z4\\\">\\n                <div class=\\\"columns\\\">\\n                  <div class=\\\"column is-11\\\">\\n                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">&nbsp;</td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <label class=\\\"label\\\">Search status</label>\\n                        </td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <mat-select placeholder=\\\"Job Search Status\\\" [(value)]=\\\"selected\\\" formControlName=\\\"jobsearchstatus\\\">\\n                              <mat-option value=\\\"Actively Interviewing\\\">Actively Interviewing</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <label class=\\\"label\\\">Job Type</label>\\n                        </td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <mat-select placeholder=\\\"Job Type\\\" multiple formControlName=\\\"jobtype\\\">\\n                              <mat-option *ngFor=\\\"let job of typesOfJobs\\\" [value]=\\\"job\\\">{{job}}</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <label class=\\\"label\\\">Annual Salary</label>\\n                        </td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput formControlName=\\\"desiredannualsalary\\\" placeholder=\\\"Desired Annual Salary\\\"\\n                              type=\\\"number\\\" class=\\\"example-right-align\\\">\\n                            <span matPrefix>$&nbsp;</span>\\n                            <span matSuffix>.00</span>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Desired Location\\\" type=\\\"text\\\" formControlName=\\\"desiredlocation\\\">\\n                          </mat-form-field>\\n                        </td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-checkbox formControlName=\\\"opentoworkremotely\\\">Open to work remotely</mat-checkbox>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <label class=\\\"label\\\">Work Authorization</label>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <table>\\n                            <tr>\\n                              <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                <h6>Are you legally authorized to work in the United States</h6>\\n                              </td>\\n                              <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                <mat-radio-group formControlName=\\\"legallyauthorized\\\">\\n                                  <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                                  <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                                </mat-radio-group>\\n                              </td>\\n                            </tr>\\n                            <tr>\\n                              <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                <h6>Do you or will you require sponsorship for a US employment visa</h6>\\n                              </td>\\n                              <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                <mat-radio-group formControlName=\\\"requiresponsorship\\\">\\n                                  <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                                  <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                                </mat-radio-group>\\n                              </td>\\n                            </tr>\\n                          </table>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Social\\\">\\n              <div class=\\\"example-large-box mat-elevation-z4\\\">\\n                <div class=\\\"columns\\\">\\n                  <div class=\\\"column is-11\\\">\\n                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">&nbsp;</td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"LinkedIn url\\\" type=\\\"url\\\" formControlName=\\\"linkedinurl\\\">\\n                            <span matPrefix>http://&nbsp;</span>\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Website url\\\" formControlName=\\\"websiteurl\\\">\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Twitter url\\\" formControlName=\\\"twitterurl\\\">\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"Github url\\\" formControlName=\\\"githuburl\\\">\\n                          </mat-form-field>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-tab>\\n          </mat-tab-group>\\n\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">&nbsp;</div>\\n          </div>\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n              <h5>Skills</h5>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n              \\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column is-11\\\">\\n                  <table class=\\\"table is-fullwidth\\\" formArrayName=\\\"skills\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                    <tr *ngIf=\\\"skillForms.controls == null\\\"><td><h3>No skills added</h3></td></tr>\\n                    <tr *ngFor=\\\"let skill of skillForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                        <!-- <td style=\\\"border:0px;\\\">\\n                            {{i+1}}</td> -->\\n                      <td style=\\\"border:0px;\\\">\\n                        <mat-form-field>\\n                          <mat-select placeholder=\\\"Choose skill\\\" formControlName=\\\"skillname\\\">\\n                            <mat-option value=\\\".NET\\\">.NET</mat-option>\\n                            <mat-option value=\\\"Python\\\">Python</mat-option>\\n                            <mat-option value=\\\"Java\\\">Java</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput placeholder=\\\"Skill Name\\\" formControlName=\\\"skillname\\\">\\n                        </mat-form-field> -->\\n                      </td>\\n                      <td style=\\\"border:0px;\\\">\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"Choose skill level\\\" formControlName=\\\"skilllevel\\\">\\n                              <mat-option value=\\\"Expert\\\">Expert</mat-option>\\n                              <mat-option value=\\\"Intermediate\\\">Intermediate</mat-option>\\n                              <mat-option value=\\\"Beginner\\\">Beginner</mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                      </td>\\n                      <td style=\\\"border:0px;\\\">&nbsp;\\n                        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteSkill(i)\\\">\\n                          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon> Delete\\n                        </button>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <td>\\n                          <button mat-button (click)=\\\"addSkill()\\\">\\n                              <mat-icon aria-label=\\\"Add skill\\\">add_circle</mat-icon> Add skill</button>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div>\\n                  &nbsp;\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column is-11\\\">\\n                  \\n                  <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                    <tr>\\n                        <td style=\\\"border:0px;\\\">Add</td>\\n                      <td>\\n                        <mat-form-field>\\n                          <mat-select [(value)]=\\\"selected\\\" placeholder=\\\"Choose skill\\\">\\n                            \\n                            <mat-option *ngFor=\\\"let sk of skillList\\\" [value]=\\\"sk\\\">\\n                                {{sk}}\\n                              </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </td>\\n                      <td>\\n                        <mat-form-field>\\n                            <mat-select [(value)]=\\\"selected\\\" placeholder=\\\"Choose skill level\\\">\\n                                <mat-option value=\\\"Beginner\\\">Beginner</mat-option>\\n                                <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n                                <mat-option value=\\\"Expert\\\">Expert</mat-option>\\n                              </mat-select>\\n                        </mat-form-field>\\n                      </td>\\n                      <td>\\n                          <button mat-button (click)=\\\"addSkill()\\\">\\n                              <mat-icon aria-label=\\\"Add skill\\\">add_circle</mat-icon> Save skill</button>\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div>\\n                  <!-- <br>\\n                  <button mat-fab color=\\\"primary\\\" (click)=\\\"addSkill()\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">save</mat-icon>\\n                  </button> -->\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">&nbsp;</div>\\n          </div>\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n              <h5>Experience</h5>\\n              <button mat-button (click)=\\\"openSnackBar('message.value', 'action.value')\\\">Show snack-bar</button>\\n              <button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\\n            </div>\\n          </div>\\n\\n\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n              <div class=\\\"columns\\\">\\n                <div class=\\\"column is-11\\\">\\n                  <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                    <tr>\\n                      <td>\\n                        <mat-form-field>\\n                          <mat-select [(value)]=\\\"selected\\\">\\n                            <mat-option value=\\\"Project\\\">Add Project</mat-option>\\n                            <mat-option value=\\\"Title\\\">Add Title</mat-option>\\n                            <mat-option value=\\\"Company Name\\\">Add Company Name</mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </td>\\n                      <td>\\n                        <mat-form-field>\\n                          <input matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                      </td>\\n                      <td>\\n                        <button mat-raised-button matTooltip=\\\"Info about the action\\\" (click)=\\\"addExperience()\\\">Add</button>\\n\\n                      </td>\\n                    </tr>\\n                  </table>\\n                </div>\\n                <div>\\n                  <br>\\n                  <button mat-fab color=\\\"primary\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">save</mat-icon>\\n                  </button>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"columns\\\" formArrayName=\\\"experiences\\\">\\n            <div class=\\\"column is-12\\\">\\n              <div class=\\\"columns\\\" *ngFor=\\\"let exp of experienceForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                <div class=\\\"column is-11\\\">\\n                  <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                    <tr>\\n                      <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                        {{i+1}}\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput placeholder=\\\"Project\\\" formControlName=\\\"project\\\">\\n                        </mat-form-field>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\n                        </mat-form-field>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <td style=\\\"border:0px;\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\n                        </mat-form-field>\\n                      </td>\\n                      <td style=\\\"border:0px;\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput placeholder=\\\"Location\\\" formControlName=\\\"location\\\">\\n                        </mat-form-field>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <td style=\\\"border:0px;\\\">\\n                        <mat-form-field class=\\\"example-full-width\\\">\\n                          <input matInput placeholder=\\\"fromdate\\\" formControlName=\\\"fromdate\\\">\\n                        </mat-form-field>\\n                        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"fromdate\\\" placeholder=\\\"Choose a date\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\n                              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n                            </mat-datepicker-toggle>\\n                            <mat-datepicker #picker></mat-datepicker>\\n                          </mat-form-field> -->\\n\\n\\n                      </td>\\n                      <td style=\\\"border:0px;\\\">\\n                      </td>\\n                    <tr>\\n                      <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                        <mat-form-field>\\n                          <textarea matInput placeholder=\\\"Project description\\\" formControlName=\\\"projectdescription\\\"></textarea>\\n                        </mat-form-field>\\n                      </td>\\n                    </tr>\\n\\n                  </table>\\n                </div>\\n                <div>\\n                  <button mat-fab color=\\\"warn\\\" (click)=\\\"deleteExperience(i)\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                  </button>\\n                  <br><br>\\n                  <button mat-fab color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                  </button>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column is-12\\\">\\n              <button mat-button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"savedata()\\\" [disabled]=\\\"myForm.invalid\\\">Submit\\n                Form</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n  <!-- <h5>Phone numbers</h5>\\n    <table formArrayName=\\\"phones\\\" class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n      <tr *ngFor=\\\"let phone of phoneForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n        <td style=\\\"border:0px;\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"City\\\" formControlName=\\\"area\\\">\\n          </mat-form-field>\\n        </td>\\n        <td style=\\\"border:0px;\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"State\\\" formControlName=\\\"prefix\\\">\\n          </mat-form-field>\\n        </td>\\n        <td style=\\\"border:0px;\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" formControlName=\\\"line\\\">\\n            <mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint>\\n          </mat-form-field>\\n        </td>\\n        <td style=\\\"border:0px;\\\">\\n          <button mat-button (click)=\\\"deletePhone(i)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n    <button mat-raised-button (click)=\\\"addPhone()\\\">Add Phone Number</button> -->\\n\\n\\n\\n  <!-- </mat-drawer-container> -->\\n</form>\\n\\n<div *ngIf=\\\"success\\\" class=\\\"notification is-success\\\">\\n  Yay! We received your submission\\n</div>\"","module.exports = \"mat-form-field {\\n  display: block; }\\n\\ntextarea {\\n  min-height: 130px; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.content table td {\\n  border: 0px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { tap, first, take } from 'rxjs/operators';\nimport {\n  MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSnackBarConfig,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition\n} from '@angular/material';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\n\n\nexport class ProfileComponent implements OnInit {\n\n  resumename: string;\n  isAdding = false;\n  typesOfJobs: string[] = ['Full time employee', 'Contractor', 'Intern'];\n  toppings = new FormControl();\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n  skillList: string[]= ['.NET', 'Python', 'Django'];\n  myForm: FormGroup;\n\n  // Form state\n  loading = false;\n  success = false;\n\n  animal: string;\n  name: string;\n\n  selected = 'Project';\n\n  message: string = 'Snack Bar opened.';\n  actionButtonLabel: string = 'Retry';\n  action: boolean = true;\n  setAutoHide: boolean = true;\n  autoHide: number = 2000;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n\n  constructor(private fb: FormBuilder, private afs: AngularFirestore,\n    public snackBar: MatSnackBar, public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n      location: ['', Validators.required],\n      miniresume: ['', Validators.required],\n      role: ['', Validators.required],\n      email: ['', Validators.required],\n      message: ['', Validators.required],\n      jobsearchstatus: [''],\n      jobtype: [''],\n      desiredannualsalary: [''],\n      desiredlocation: [''],\n      opentoworkremotely: [''],\n      legallyauthorized: [''],\n      requiresponsorship: [''],\n      linkedinurl: [''],\n      websiteurl: [''],\n      twitterurl: [''],\n      githuburl: [''],\n      skills: this.fb.array([]),\n      //phones: this.fb.array([]),\n      experiences: this.fb.array([])\n    })\n    \n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      console.log(params);\n      this.resumename = params['jid'];\n    });\n\n    if (this.resumename == undefined)\n    {\n      this.resumename = this.afs.createId();\n      this.navigateToFoo();\n    }\n\n\n    this.preloadData()\n  }\n\n  navigateToFoo(){\n    // changes the route without moving from the current view or\n    // triggering a navigation event\n    this.router.navigate([], {\n     relativeTo: this.activatedRoute,\n     queryParams: {\n       'jid': this.resumename\n     },\n     queryParamsHandling: 'merge', \n      // preserve the existing query params in the route\n      skipLocationChange: false\n      // do not trigger navigation\n    });\n    \n  }\n\n  openSnackBar(message: string, action: string) {\n\n    let config = new MatSnackBarConfig();\n    config.verticalPosition = this.verticalPosition;\n    config.horizontalPosition = this.horizontalPosition;\n    config.duration = this.setAutoHide ? this.autoHide : 0;\n    this.snackBar.open(message, this.action ? this.actionButtonLabel : undefined, config);\n\n  }\n\n  openDialog() {\n    // const dialogRef = this.dialog.open(DialogContentExampleDialog);\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   console.log(`Dialog result: ${result}`);\n    // });\n  }\n\n  isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n  }\n\n  get skillForms() {\n    //console.log(this.myForm.get('experiences').toString)\n    return this.myForm.get('skills') as FormArray\n  }\n\n  get experienceForms() {\n    //console.log(this.myForm.get('experiences').toString)\n    return this.myForm.get('experiences') as FormArray\n  }\n\n  // get phoneForms() {\n    \n  //   return this.myForm.get('phones') as FormArray\n  // }\n\n  addSkill() {\n    console.log('in add skill')\n    try{\n      const skill = this.fb.group({\n        skillname: [],\n        skilllevel: []\n      })\n  \n      this.skillForms.push(skill);\n    }\n    catch (err) {\n      console.error(err)\n    }\n   \n  }\n\n  addExperience() {\n\n    const experience = this.fb.group({\n      project: [],\n      title: [],\n      company: [],\n      location: [],\n      fromdate: [],\n      projectdescription: []\n    })\n\n    this.experienceForms.push(experience);\n  }\n\n  // addPhone() {\n\n  //   const phone = this.fb.group({\n  //     area: [],\n  //     prefix: [],\n  //     line: [],\n  //   })\n\n  //   this.phoneForms.push(phone);\n  // }\n\n  // deletePhone(i) {\n  //   this.phoneForms.removeAt(i)\n  // }\n\n  deleteExperience(i) {\n    this.experienceForms.removeAt(i)\n  }\n  \n  deleteSkill(i) {\n    //console.log('deleteStill @ ')\n    this.skillForms.removeAt(i)\n  }\n\n  async savedata() {\n    const formValue = this.myForm.value;\n\n    try {\n      //this.afs.doc('contacts/x7rtxWnvtg5062p9ZXo5').update(formValue)\n      \n      if (this.isAdding){\n        await this.afs.doc('contacts/' + this.resumename).set(formValue, {merge:true})\n      }\n      else\n      {\n        await this.afs.doc('contacts/' + this.resumename).update(formValue)\n      }\n      \n      this.openSnackBar('saved','')\n      this.success = true;\n    } catch (err) {\n      console.error(err)\n    }\n\n  }\n\n  \n  // async submitHandler() {\n  //   this.loading = true;\n\n  //   const formValue = this.myForm.value;\n\n  //   try {\n  //     await this.afs.collection('contacts').add(formValue);\n  //     this.success = true;\n  //   } catch(err) {\n  //     console.error(err)\n  //   }\n\n  //   this.loading = false;\n  // }\n\n  preloadData() {\n\n    console.log('createId: ' + this.afs.createId())\n\n    //this.afs.doc('contacts/x7rtxWnvtg5062p9ZXo5').valueChanges().pipe(\n    this.afs.doc('contacts/' + this.resumename).valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.myForm.controls['name'].setValue(data['name'])\n          this.myForm.controls['location'].setValue(data['location'])\n          this.myForm.controls['miniresume'].setValue(data['miniresume'])\n          this.myForm.controls['role'].setValue(data['role'])\n          this.myForm.controls['email'].setValue(data['email'])\n          this.myForm.controls['message'].setValue(data['message'])\n\n          this.myForm.controls['jobsearchstatus'].setValue(data['jobsearchstatus'])\n          this.myForm.controls['jobtype'].setValue(data['jobtype'])\n          this.myForm.controls['desiredannualsalary'].setValue(data['desiredannualsalary'])\n          this.myForm.controls['desiredlocation'].setValue(data['desiredlocation'])\n          this.myForm.controls['opentoworkremotely'].setValue(data['opentoworkremotely'])\n          this.myForm.controls['legallyauthorized'].setValue(data['legallyauthorized'])\n          this.myForm.controls['requiresponsorship'].setValue(data['requiresponsorship'])\n\n          //this.myForm.controls['phones'].setValue(this.fb.array([{\"area\":\"123\", \"line\":\"\", \"prefix\":\"\"}]))\n          //this.myForm.controls['phones'].setValue(this.fb.array([{\"area\":\"1312\",\"line\":\"q3332\",\"prefix\":\"13\"},{\"area\":\"13123\",\"line\":\"123123\",\"prefix\":\"123123\"},{\"area\":\"13123\",\"line\":\"123123\",\"prefix\":\"123123\"}]))\n          //this.myForm.controls['phones'].setValue(this.fb.array([]))\n          //const phone = this.fb.group({ \n          //  area: ['123'],\n          //  prefix: ['456'],\n          //  line: ['7890'],\n          //})\n          //console.log(data['phones'][0]['area'])\n\n          if (data['skills']) {\n            console.log('skills : ' + JSON.stringify(data['skills']))\n            data['skills'].forEach(item => {\n              const skill = this.fb.group({\n                skillname: [item['skillname']],\n                skilllevel: [item['skilllevel']]\n              })\n              this.skillForms.push(skill);\n            })\n          }\n\n\n          // if (data['phones']) {\n          //   data['phones'].forEach(item => {\n          //     console.log(item['area'] + ':' + item['line'] + ':' + item['prefix'])\n          //     const phone = this.fb.group({\n          //       area: [item['area']],\n          //       prefix: [item['line']],\n          //       line: [item['prefix']],\n          //     })\n          //     this.phoneForms.push(phone);\n          //   })\n          // }\n\n          if (data['experiences']) {\n            console.log('experiences : ' + JSON.stringify(data['experiences']))\n            data['experiences'].forEach(item => {\n              const experience = this.fb.group({\n\n                project: [item['project']],\n                title: [item['title']],\n                company: [item['company']],\n                //fromdate: [new FormControl(new Date(item['fromdate']*1000))],\n                fromdate: new FormControl((new Date()).toISOString()),\n                //fromdate: new FormControl((new Date(Date.parse(item['fromdate']))).toISOString()),\n                location: [item['location']],\n                projectdescription: [item['projectdescription']]\n              })\n              this.experienceForms.push(experience);\n            })\n          }\n          else{\n            console.log('no experience found')\n          }\n          //this.phoneForms.push(phone);\n          this.isAdding = false;\n        }\n        else{\n          this.isAdding = true;\n        }\n      }),\n      take(1)\n    )\n      .subscribe()\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n// @Component({\n//   selector: 'dialog-content-example-dialog',\n//   templateUrl: 'dialog-content-example-dialog.html',\n// })\n// export class DialogContentExampleDialog { }","module.exports = \"<h2 mat-dialog-title><i class=\\\"material-icons\\\">thumbs_up_down</i> Confirm Delete</h2>\\n\\n\\n<mat-dialog-content class=\\\"mat-typography\\\">\\n    <h1>{{data.displaytext}}</h1>\\n    <h2>{{data.deletetype}}</h2>\\n    <ul>\\n        <li>\\n          <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\n        </li>\\n        <li>\\n          <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\n        </li>\\n        <li>\\n          <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\n        </li>\\n      </ul>\\n  <h3>Are you sure?</h3>\\n  <p> Vivamus varius lacus id elit venenatis aliquet. Duis vitae libero nisl. Sed vitae ligula id nisi ullamcorper vehicula. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse tristique et sapien eget egestas. Proin gravida erat et turpis tincidunt, quis consectetur tellus aliquet. Vivamus eu sapien diam. Proin sit amet convallis magna. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec arcu nec ante auctor ultricies. Sed efficitur cursus rutrum. In molestie lectus eu nulla posuere ultricies. Nunc porta nunc vulputate, imperdiet tortor ac, sollicitudin ante. Donec in vulputate augue, a tempus purus. Aliquam posuere porttitor sodales. </p>\\n\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Confirm Delete</button>\\n</mat-dialog-actions>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n    Use of this source code is governed by an MIT-style license that\\n    can be found in the LICENSE file at http://angular.io/license -->\"","module.exports = \"<!-- <div [ngSwitch]=\\\"state || null\\\"> -->\\n\\n<form [formGroup]=\\\"myForm\\\" profileResumeForm path=\\\"resume/{{resumename}}\\\" (stateChange)=\\\"changeHandler($event)\\\">\\n\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column is-12\\\">\\n            <div class=\\\"columns\\\">\\n                <div class=\\\"column is-10 is-offset-1\\\">\\n                    <h1>MDA</h1>\\n                </div>\\n            </div>\\n            <div class=\\\"columns\\\">\\n                <div class=\\\"column is-10 is-offset-1\\\">\\n\\n                    <div *ngIf=\\\"state === 'synced'\\\" class=\\\"notification is-success\\\">\\n                        Form is synced with Firestore\\n                    </div>\\n\\n                    <div *ngIf=\\\"state === 'modified'\\\" class=\\\"notification is-warning\\\">\\n                        Form has unsaved changes\\n                    </div>\\n                    <!-- Getting an ERROR Error: ExpressionChangedAfterItHasBeenCheckedError -->\\n                    <!-- <div *ngIf=\\\"state === 'loading'\\\" class=\\\"notification is-info\\\">\\n                            Form data is preloading\\n                        </div> -->\\n                    <div *ngIf=\\\"state === 'error'\\\" class=\\\"notification is-danger\\\">\\n                        Form tried and failed to save to Firestore\\n                    </div>\\n                    <!-- </div> -->\\n\\n                </div>\\n            </div>\\n            <div class=\\\"columns\\\">\\n                <div class=\\\"column is-10 is-offset-1\\\">\\n                    <mat-tab-group dynamicHeight>\\n                        <mat-tab label=\\\"Basics\\\">\\n                            <div class=\\\"example-large-box mat-elevation-z4\\\">\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column is-11\\\">\\n                                        <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">&nbsp;</td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <mat-label>Candidate Name</mat-label>\\n                                                        <input matInput placeholder=\\\"Candidate Name\\\" formControlName=\\\"name\\\">\\n                                                        <mat-hint>Candidate Name</mat-hint>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    \\n                                                    <mat-form-field>\\n                                                        <mat-label>Location</mat-label>\\n                                                        <input \\n                                                            matInput\\n                                                            formControlName=\\\"location\\\"\\n                                                            type=\\\"text\\\"\\n                                                            class=\\\"google-place-input\\\"\\n                                                            google-place\\n                                                            (onSelect)=\\\"setAddress($event)\\\"\\n                                                            placeholder=\\\"Type to search..\\\">\\n                                                        <mat-hint>Candidate Name</mat-hint>\\n                                                    </mat-form-field>\\n                                                    \\n                                                </td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <!-- <textarea matInput placeholder=\\\"Mini Resume\\\" formControlName=\\\"miniresume\\\"></textarea> -->\\n                                                        <textarea matInput #message maxlength=\\\"256\\\" placeholder=\\\"Mini Resume\\\"\\n                                                            formControlName=\\\"miniresume\\\"></textarea>\\n                                                        <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong>\\n                                                        </mat-hint>\\n                                                        <mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"Role\\\" formControlName=\\\"role\\\">\\n                                                    </mat-form-field>\\n\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <textarea matInput placeholder=\\\"your message...\\\"\\n                                                            formControlName=\\\"message\\\"></textarea>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                        </table>\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </mat-tab>\\n                        <mat-tab label=\\\"Talent Profile\\\">\\n                            <div class=\\\"example-large-box mat-elevation-z4\\\">\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column is-11\\\">\\n                                        <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">&nbsp;</td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243); width: 20%;\\\">\\n                                                    <label class=\\\"label\\\">Search status</label>\\n                                                </td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <mat-select placeholder=\\\"Job Search Status\\\" [(value)]=\\\"selected\\\"\\n                                                            formControlName=\\\"jobsearchstatus\\\">\\n                                                            <mat-option value=\\\"Actively Interviewing\\\">Actively\\n                                                                Interviewing</mat-option>\\n                                                        </mat-select>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <label class=\\\"label\\\">Job Type</label>\\n                                                </td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <mat-select placeholder=\\\"Job Type\\\" multiple formControlName=\\\"jobtype\\\">\\n                                                            <mat-option *ngFor=\\\"let job of typesOfJobs\\\" [value]=\\\"job\\\">{{job}}</mat-option>\\n                                                        </mat-select>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <label class=\\\"label\\\">Annual Salary</label>\\n                                                </td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput formControlName=\\\"desiredannualsalary\\\"\\n                                                            placeholder=\\\"Desired Annual Salary\\\" type=\\\"number\\\" class=\\\"example-right-align\\\">\\n                                                        <span matPrefix>$&nbsp;</span>\\n                                                        <span matSuffix>.00</span>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <label class=\\\"label\\\">Annual Salary</label>\\n                                                </td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"Desired Location\\\" type=\\\"text\\\"\\n                                                            formControlName=\\\"desiredlocation\\\">\\n                                                    </mat-form-field>\\n                                                    <br>\\n                                                    <mat-checkbox formControlName=\\\"opentoworkremotely\\\">Open to work\\n                                                        remotely</mat-checkbox>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <label class=\\\"label\\\">Work Authorization</label>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <table>\\n                                                        <tr>\\n                                                            <td style=\\\"border-bottom-color:rgb(245, 243, 243); width: 50%;\\\">\\n                                                                <h6>Are you legally authorized to work in the United\\n                                                                    States</h6>\\n                                                            </td>\\n                                                            <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                                <mat-radio-group formControlName=\\\"legallyauthorized\\\">\\n                                                                    <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                                                                    <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                                                                </mat-radio-group>\\n                                                            </td>\\n                                                        </tr>\\n                                                        <tr>\\n                                                            <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                                <h6>Do you or will you require sponsorship for a US\\n                                                                    employment visa</h6>\\n                                                            </td>\\n                                                            <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                                <mat-radio-group formControlName=\\\"requiresponsorship\\\">\\n                                                                    <mat-radio-button value=\\\"Yes\\\">Yes</mat-radio-button>\\n                                                                    <mat-radio-button value=\\\"No\\\">No</mat-radio-button>\\n                                                                </mat-radio-group>\\n                                                            </td>\\n                                                        </tr>\\n                                                    </table>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td colspan=\\\"2\\\" style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\"></td>\\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </mat-tab>\\n                        <mat-tab label=\\\"Social\\\">\\n                            <div class=\\\"example-large-box mat-elevation-z4\\\">\\n                                <div class=\\\"columns\\\">\\n                                    <div class=\\\"column is-11\\\">\\n                                        <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">&nbsp;</td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"LinkedIn url\\\" type=\\\"url\\\"\\n                                                            formControlName=\\\"linkedinurl\\\">\\n                                                        <span matPrefix>http://&nbsp;</span>\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"Website url\\\" formControlName=\\\"websiteurl\\\">\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"Twitter url\\\" formControlName=\\\"twitterurl\\\">\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td style=\\\"border-bottom-color:rgb(245, 243, 243);\\\">\\n                                                    <mat-form-field>\\n                                                        <input matInput placeholder=\\\"Github url\\\" formControlName=\\\"githuburl\\\">\\n                                                    </mat-form-field>\\n                                                </td>\\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </mat-tab>\\n                    </mat-tab-group>\\n\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">&nbsp;</div>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <h5>Skills</h5>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n\\n                            <div class=\\\"columns\\\">\\n                                <div class=\\\"column is-11\\\">\\n                                    <table class=\\\"table is-fullwidth\\\" formArrayName=\\\"skills\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                        <tr *ngIf=\\\"skillForms.controls == null\\\">\\n                                            <td>\\n                                                <h3>No skills added</h3>\\n                                            </td>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let skill of skillForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                                            <td style=\\\"border:0px; width: 650%;\\\">\\n                                                <mat-form-field>\\n                                                    <mat-select placeholder=\\\"Choose skill\\\" formControlName=\\\"skillname\\\">\\n                                                        <mat-option value=\\\".NET\\\">.NET</mat-option>\\n                                                        <mat-option value=\\\"Python\\\">Python</mat-option>\\n                                                        <mat-option value=\\\"Java\\\">Java</mat-option>\\n                                                    </mat-select>\\n                                                </mat-form-field>\\n                                            </td>\\n                                            <td style=\\\"border:0px; width: 40%;\\\">\\n                                                <mat-form-field>\\n                                                    <mat-select placeholder=\\\"Choose skill level\\\" formControlName=\\\"skilllevel\\\">\\n                                                        <mat-option value=\\\"Expert\\\">Expert</mat-option>\\n                                                        <mat-option value=\\\"Intermediate\\\">Intermediate</mat-option>\\n                                                        <mat-option value=\\\"Beginner\\\">Beginner</mat-option>\\n                                                    </mat-select>\\n                                                </mat-form-field>\\n                                            </td>\\n                                            <td style=\\\"border:0px; width: 5%;\\\">\\n                                                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteSkill(i)\\\">\\n                                                    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td colspan=\\\"3\\\">\\n                                                <table>\\n                                                    <tr>\\n                                                        <td>\\n                                                            <button mat-button (click)=\\\"addSkill()\\\">\\n                                                                <mat-icon aria-label=\\\"Add skill\\\">add_circle</mat-icon>\\n                                                                Add another skill\\n                                                            </button>\\n                                                        </td>\\n                                                    </tr>\\n                                                    \\n                                                    <!-- <tr>\\n                                                        <td style=\\\"width:80%;\\\">\\n                                                            <mat-form-field>\\n                                                                <input #NewSkill matInput placeholder=\\\"Skill name\\\"\\n                                                                    required>\\n                                                            </mat-form-field>\\n                                                            <label #NewSkillError class=\\\"mat-error\\\" style=\\\"color:red;\\\"></label>\\n                                                        </td>\\n                                                        <td style=\\\"width:20%;\\\">\\n                                                            <button mat-button (click)=\\\"saveSkill(NewSkill, NewSkillError)\\\">\\n                                                                <mat-icon aria-label=\\\"Save skill\\\">save</mat-icon> Save\\n                                                                skill\\n                                                            </button>\\n                                                        </td>\\n                                                    </tr> -->\\n                                                </table>\\n\\n                                            </td>\\n                                        </tr>\\n                                    </table>\\n                                    <table class=\\\"table is-fullwidth\\\"  style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                        <tr>\\n                                            <td>\\n                                                <mat-form-field>\\n                                                    <textarea matInput placeholder=\\\"Additional skills\\\" formControlName=\\\"additionalskills\\\"></textarea>\\n                                                    <mat-hint align=\\\"start\\\"><strong>Add skills not in the drop down skill list. Separate with comma.</strong>\\n                                                    </mat-hint>\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div>\\n                                    &nbsp;\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">&nbsp;</div>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <h5>Experience</h5>\\n                            <button mat-button (click)=\\\"openSnackBar('message.value', 'action.value')\\\">Show snack-bar</button>\\n                            <button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <div class=\\\"columns\\\">\\n                                <div class=\\\"column is-11\\\">\\n                                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                        <tr>\\n                                            <td style=\\\"width:30%;\\\">\\n                                                <mat-form-field>\\n                                                    <mat-select #AddType [(value)]=\\\"selected\\\">\\n                                                        <mat-option value=\\\"Project\\\">Add Project</mat-option>\\n                                                        <mat-option value=\\\"Title\\\">Add Title</mat-option>\\n                                                        <mat-option value=\\\"Company Name\\\">Add Company Name</mat-option>\\n                                                    </mat-select>\\n                                                </mat-form-field>\\n                                            </td>\\n                                            <td style=\\\"width:70%;\\\">\\n                                                <mat-form-field>\\n                                                    <input #ProjectName matInput placeholder=\\\"{{AddType.value}}\\\"\\n                                                        required>\\n                                                    <mat-error>{{message.valid}}</mat-error>\\n                                                </mat-form-field>\\n                                                <label #tempError class=\\\"mat-error\\\" style=\\\"color:red;\\\"></label>\\n                                            </td>\\n\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div>\\n                                    <br>\\n                                    <button mat-fab color=\\\"primary\\\" [disabled]=\\\"ProjectName.invalid\\\" (click)=\\\"addExperience(AddType, ProjectName, tempError)\\\">\\n                                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">save</mat-icon>\\n                                    </button>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"columns\\\" formArrayName=\\\"experiences\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <div class=\\\"columns\\\" *ngFor=\\\"let exp of experienceForms.controls; let i=index\\\"\\n                                [formGroupName]=\\\"i\\\">\\n                                <div class=\\\"column is-11\\\">\\n                                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                {{i+1}}\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Project\\\" formControlName=\\\"project\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                            <td style=\\\"border:0px;\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Location\\\" formControlName=\\\"location\\\"\\n                                                    class=\\\"google-place-input\\\"\\n                                                            google-place\\n                                                            (onSelect)=\\\"setexperienceAddress($event, experiencelocation)\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"fromdate\\\"\\n                                                        placeholder=\\\"From\\\" disabled>\\n                                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                                                </mat-form-field>\\n                                            </td>\\n                                            <td style=\\\"border:0px;\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput [matDatepicker]=\\\"dp3\\\" formControlName=\\\"todate\\\"\\n                                                        placeholder=\\\"To\\\" disabled>\\n                                                    <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n                                                    <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n                                                </mat-form-field>\\n                                                <mat-checkbox formControlName=\\\"currentlyemployed\\\">Currently employed</mat-checkbox>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                <mat-form-field>\\n                                                    <textarea matInput placeholder=\\\"Project description\\\"\\n                                                        formControlName=\\\"projectdescription\\\"></textarea>\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n\\n                                    </table>\\n                                </div>\\n                                <div>\\n                                    <br>\\n                                    <button mat-fab color=\\\"warn\\\" (click)=\\\"openDialog('experience', i)\\\" matTooltip=\\\"Delete experience\\\">\\n                                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                                    </button>\\n                                    <br><br>\\n                                    <!-- <button mat-fab color=\\\"primary\\\" (click)=\\\"openDialog('experience',-1)\\\">\\n                                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n                                    </button> -->\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n\\n\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">&nbsp;</div>\\n                    </div>\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <h5>Education</h5>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <div class=\\\"columns\\\">\\n                                <div class=\\\"column is-11\\\">\\n                                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                        <tr>\\n                                            <td style=\\\"width:30%;\\\">\\n                                                School Name\\n                                            </td>\\n                                            <td style=\\\"width:70%;\\\">\\n                                                <mat-form-field>\\n                                                    <input #SchoolName matInput placeholder=\\\"School Name\\\" required>\\n                                                </mat-form-field>\\n                                                <label #SchoolNameError class=\\\"mat-error\\\" style=\\\"color:red;\\\"></label>\\n                                            </td>\\n\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div>\\n                                    <br>\\n                                    <button mat-fab color=\\\"primary\\\" (click)=\\\"addSchool(SchoolName, SchoolNameError)\\\">\\n                                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">save</mat-icon>\\n                                    </button>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"columns\\\" formArrayName=\\\"educationalqualifications\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <div class=\\\"columns\\\" *ngFor=\\\"let school of educationalqualificationsForms.controls; let i=index\\\"\\n                                [formGroupName]=\\\"i\\\">\\n                                <div class=\\\"column is-11\\\">\\n                                    <table class=\\\"table is-fullwidth\\\" style=\\\"background-color:rgb(245, 243, 243)\\\">\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                {{i+1}}\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"College / University name\\\"\\n                                                        formControlName=\\\"collegeuniversityname\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\" colspan=\\\"2\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput [matDatepicker]=\\\"dateofcompletionpicker\\\"\\n                                                        formControlName=\\\"dateofcompletion\\\" placeholder=\\\"Date of completion\\\"\\n                                                        disabled>\\n                                                    <mat-datepicker-toggle matSuffix [for]=\\\"dateofcompletionpicker\\\"></mat-datepicker-toggle>\\n                                                    <mat-datepicker #dateofcompletionpicker disabled=\\\"false\\\"></mat-datepicker>\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n                                        <tr>\\n                                            <td style=\\\"border:0px;\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Degree Type\\\" formControlName=\\\"degreetype\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                            <td style=\\\"border:0px;\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Major Field of study\\\" formControlName=\\\"majorfieldofstudy\\\">\\n                                                </mat-form-field>\\n                                            </td>\\n                                        </tr>\\n\\n                                    </table>\\n                                </div>\\n                                <div>\\n                                    <br>\\n                                    <button mat-fab color=\\\"warn\\\" (click)=\\\"openDialog('education', i)\\\" matTooltip=\\\"Delete education\\\">\\n                                        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n                                    </button>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"columns\\\">\\n                        <div class=\\\"column is-12\\\">\\n                            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"myForm.invalid || state !== 'modified'\\\">\\n                                <mat-icon aria-label=\\\"Save resume\\\">save</mat-icon> Save Resume\\n                            </button>\\n                            <a *ngIf=\\\"state === 'synced'\\\" mat-button routerLink=\\\".\\\"><i class=\\\"material-icons\\\">check_circle_outline</i>\\n                                Resume saved.</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <hr> Fireform state: {{ state }} <br>\\n        <hr>\\n\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"myForm.invalid || state !== 'modified'\\\">Save</button>\\n\\n        <div class=\\\"columns\\\">\\n            <div class=\\\"column\\\">\\n                <h3>Reactive Form Data</h3><br> {{ myForm.value | json }}\\n            </div>\\n\\n            <div class=\\\"column\\\">\\n\\n                <h3>Firestore Data</h3><br> {{ myDoc | async | json }}\\n                <br>\\n                trial: {{ myDoc.bio | async | json }}\\n            </div>\\n\\n\\n        </div>\\n\\n    </div>\\n</form>\"","module.exports = \"mat-form-field {\\n  display: block; }\\n\\ntextarea {\\n  min-height: 130px; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.content table td {\\n  border: 0px; }\\n\"","import { Component, Inject, OnInit, NgZone, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl  } from '@angular/forms'\nimport { AngularFirestore } from 'angularfire2/firestore'\nimport { BehaviorSubject } from 'rxjs'\nimport { tap, first, take } from 'rxjs/operators';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {\n  MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSnackBarConfig,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition, MatTooltipModule\n} from '@angular/material';\n\n\nexport interface DialogData {\n  deletetype: 'experience' | 'education';\n  displaytext: string;\n}\n\n\n@Component({\n  selector: 'profileresume',\n  templateUrl: './profileresume.component.html',\n  styleUrls: ['./profileresume.component.scss']\n})\nexport class ProfileresumeComponent implements OnInit {\n\n  resumename: string;\n  myForm: FormGroup;\n  myDoc;\n\n  typesOfJobs: string[] = ['Full time employee', 'Contractor', 'Intern'];\n  skillList: string[]= ['.NET', 'Python', 'Django'];\n  state: string;\n\n  message: string = 'Snack Bar opened.';\n  actionButtonLabel: string = 'Retry';\n  action: boolean = true;\n  setAutoHide: boolean = true;\n  autoHide: number = 2000;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'left';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  selected:string = 'Project';\n\n  public title = 'Places';\n  public addrKeys: string[];\n  public addr: object;\n  \n  constructor(private fb: FormBuilder, private afs: AngularFirestore, \n              public snackBar: MatSnackBar, public dialog: MatDialog,\n                private activatedRoute: ActivatedRoute,\n              private router: Router, private zone: NgZone) { \n    //this.resumename = this.revisedRandId();\n\n  }\n  \n  //Method to be invoked everytime we receive a new instance \n  //of the address object from the onSelect event emitter.\n  setAddress(addrObj) {\n    //We are wrapping this in a NgZone to reflect the changes\n    //to the object in the DOM.\n    this.zone.run(() => {\n      this.addr = addrObj;\n      this.addrKeys = Object.keys(addrObj);\n      this.myForm.controls['location'].setValue(addrObj['formatted_address']);\n    });\n  }\n  \n  setexperienceAddress(addrObj, x)\n  {\n    console.log('in setexperienceAddress')\n    console.log(' caller : ' + x.value)\n    this.zone.run(() => {\n      this.addr = addrObj;\n      this.addrKeys = Object.keys(addrObj);\n      //this.myForm.controls['location'].setValue(addrObj['formatted_address'];\n      x.setValue(addrObj['formatted_address']);\n      \n    });\n\n  }\n\n  getFirestoreId(){\n    return this.afs.createId();\n  }\n\n  revisedRandId() {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  }\n\n  ngOnInit() {\n  \n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      console.log(params);\n      this.resumename = params['jid'];\n    });\n\n    if (this.resumename == undefined)\n    {\n      this.resumename = this.getFirestoreId();\n      this.navigateToFoo();\n    }\n\n    this.myForm = this.fb.group({\n      _id: [this.resumename],\n      name: ['', Validators.required],\n      location: ['', Validators.required],\n      miniresume: ['', Validators.required],\n      role: ['', Validators.required],\n      email: ['', Validators.required],\n      message: ['', Validators.required],\n      jobsearchstatus: [''],\n      jobtype: [''],\n      desiredannualsalary: [''],\n      desiredlocation: [''],\n      opentoworkremotely: [''],\n      legallyauthorized: [''],\n      requiresponsorship: [''],\n      linkedinurl: [''],\n      websiteurl: [''],\n      twitterurl: [''],\n      githuburl: [''],\n      skills: this.fb.array([]),\n      additionalskills: [''],\n      //phones: this.fb.array([]),\n      experiences: this.fb.array([]),\n      educationalqualifications: this.fb.array([])\n    })\n    //this.myDoc = this.afs.doc('contacts/test2').valueChanges();\n    this.myDoc = this.afs.doc('resume/' + this.resumename).valueChanges();\n\n    this.preloadData()\n  }\n\n  preloadData() {\n\n    console.log('createId: ' + this.afs.createId())\n    this.state = 'loading';\n\n    //this.afs.doc('contacts/x7rtxWnvtg5062p9ZXo5').valueChanges().pipe(\n    this.afs.doc('resume/' + this.resumename).valueChanges().pipe(\n      tap(data => {\n        //this.myForm.patchValue(data);\n        if (data) {\n          console.log(JSON.stringify(data));\n\n          this.myForm.controls['name'].setValue(data['name'])\n          this.myForm.controls['location'].setValue(data['location'])\n          this.myForm.controls['miniresume'].setValue(data['miniresume'])\n          this.myForm.controls['role'].setValue(data['role'])\n          this.myForm.controls['email'].setValue(data['email'])\n          this.myForm.controls['message'].setValue(data['message'])\n\n          this.myForm.controls['jobsearchstatus'].setValue(data['jobsearchstatus'])\n          this.myForm.controls['jobtype'].setValue(data['jobtype'])\n          this.myForm.controls['desiredannualsalary'].setValue(data['desiredannualsalary'])\n          this.myForm.controls['desiredlocation'].setValue(data['desiredlocation'])\n          this.myForm.controls['opentoworkremotely'].setValue(data['opentoworkremotely'])\n          this.myForm.controls['legallyauthorized'].setValue(data['legallyauthorized'])\n          this.myForm.controls['requiresponsorship'].setValue(data['requiresponsorship'])\n\n          if (data['skills']) {\n            console.log('skills : ' + JSON.stringify(data['skills']))\n            //console.log('skills empty check : ' + Object.keys(data['skills']).length)\n\n            data['skills'].forEach(item => {\n              const skill = this.fb.group({\n                skillname: [item['skillname']],\n                skilllevel: [item['skilllevel']]\n              })\n              this.skillForms.push(skill);\n              \n            })\n          }\n          else\n          {\n            console.log('no skills')\n            //there are no skills available in DB add three skills as default\n            \n          }\n\n          this.myForm.controls['additionalskills'].setValue(data['additionalskills'])\n          \n\n          if (data['experiences']) {\n            console.log('experiences : ' + JSON.stringify(data['experiences']))\n            data['experiences'].forEach(item => {\n              const experience = this.fb.group({\n\n                project: [item['project']],\n                title: [item['title']],\n                company: [item['company']],\n                fromdate: [new Date(this.toDateTime(item['fromdate'] ? item['fromdate']['seconds'] : ''))],\n                todate: [new Date(this.toDateTime(item['todate'] ? item['todate']['seconds'] : ''))],\n                currentlyemployed: [item['currentlyemployed']],\n                location: [item['location']],\n                projectdescription: [item['projectdescription']]\n              })\n              this.experienceForms.push(experience);\n            })\n          }\n          else{\n            console.log('no experience found')\n          }\n\n\n          \n\n          if (data['educationalqualifications']) {\n            console.log('educationalqualifications : ' + JSON.stringify(data['educationalqualifications']))\n            data['educationalqualifications'].forEach(item => {\n              const education = this.fb.group({\n\n                collegeuniversityname: [item['collegeuniversityname']],\n                dateofcompletion:  [new Date(this.toDateTime(item['dateofcompletion'] ? item['dateofcompletion']['seconds'] : ''))],\n                degreetype: [item['degreetype']],\n                majorfieldofstudy: [item['majorfieldofstudy']],\n                \n              })\n              this.educationalqualificationsForms.push(education);\n            })\n          }\n          else{\n            console.log('no educationalqualifications found')\n          }\n\n          //this.isAdding = false;\n        }\n        else\n        {\n          //this.isAdding = true;\n          var i;\n            for (i = 0; i < 2; i++) {\n              const skill = this.fb.group({\n                skillname: '',\n                skilllevel: ''\n              })\n              this.skillForms.push(skill);\n            }\n        }\n      }),\n      take(1)\n    )\n      .subscribe()\n  }\n\n  toDateTime(utcSeconds) {\n    var returndate=\"\"\n    if(utcSeconds != null){\n      var myDate = new Date( utcSeconds *1000);\n      returndate = myDate.toLocaleString()\n    }\n    return returndate;\n  }\n\n  navigateToFoo(){\n    // changes the route without moving from the current view or\n    // triggering a navigation event\n    this.router.navigate([], {\n     relativeTo: this.activatedRoute,\n     queryParams: {\n       'jid': this.resumename\n     },\n     queryParamsHandling: 'merge', \n     // preserve the existing query params in the route\n     skipLocationChange: false\n     // do not trigger navigation\n   });\n  \n}\n\n  initSkill() {\n    console.log(\"in initSkill\")\n    // initialize our address\n    return this.fb.group({\n        level: ['', Validators.required],\n        skill: ['']\n    });\n  }\n\n  openSnackBar(message: string, action: string) {\n\n    let config = new MatSnackBarConfig();\n    config.verticalPosition = this.verticalPosition;\n    config.horizontalPosition = this.horizontalPosition;\n    config.duration = this.setAutoHide ? this.autoHide : 0;\n    this.snackBar.open(message, this.action ? this.actionButtonLabel : undefined, config);\n\n  }\n\n  openDialog(deltype: string, todelete:number) {\n    //const dialogRef = this.dialog.open(DialogContentExampleDialog);\n\n    const dialogRef = this.dialog.open(DialogContentExampleDialog, {\n      data: {\n        deletetype: deltype,\n        displaytext: 'todelete id: ' + todelete\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      console.log('####' + result)\n      if (result == true)\n      {\n        console.log('in result check true')\n        switch (deltype)\n        {\n          case \"experience\":\n            console.log('in switch case')\n            this.deleteExperience(todelete)\n            break;\n          case \"education\":\n            this.deleteEducation(todelete)\n            break;\n        }\n      }\n    });\n  }\n\n  get skillForms() {\n    return this.myForm.get('skills') as FormArray\n  }\n\n  get experienceForms() {\n    return this.myForm.get('experiences') as FormArray\n  }\n\n  get educationalqualificationsForms() {\n    return this.myForm.get('educationalqualifications') as FormArray\n  }\n\n  changeHandler(e) {\n    // console.log(e)\n    this.state = e;\n  }\n\n  addSkill() {\n    console.log('in add skill')\n    try{\n      const skill = this.fb.group({\n        skillname: [],\n        skilllevel: []\n      })\n  \n      this.skillForms.push(skill);\n    }\n    catch (err) {\n      console.error(err)\n    }\n   \n  }\n\n  saveSkill(skillName: HTMLInputElement, skilloutText: HTMLLabelElement) {\n    console.log(\"skillName.value : \" + skillName.value);\n\n    if (skillName.value.trim() != '')\n    {\n      const skill = this.fb.group({\n        skillname: [skillName.value],\n        skilllevel: ['']  \n      })\n\n      this.skillForms.push(skill);\n    }\n  }\n\n  addExperience(addtypevalue: HTMLInputElement, input : HTMLInputElement, outText: HTMLLabelElement) {\n    console.log('####' + input.value)\n    console.log('@@@' + addtypevalue.value)\n    if (input.value.trim() != '')\n    {\n      const experience = this.fb.group({\n        project: [input.value],\n        title: [],\n        company: [],\n        location: [],\n        fromdate: [],\n        todate: [],\n        currentlyemployed: [],\n        projectdescription: []\n      })\n\n      this.experienceForms.push(experience);\n    }\n    else\n    {\n\n      //console.log('Project name required!!')\n      //outText.textContent='Project name required!!'\n    }\n  }\n\n  addSchool(SchoolName : HTMLInputElement, SchoolNameError: HTMLLabelElement) {\n\n    if (SchoolName.value.trim() != '')\n    {\n      const school = this.fb.group({\n        collegeuniversityname: [SchoolName.value],\n        dateofcompletion: [],\n        degreetype: [],\n        majorfieldofstudy: []\n      })\n\n      this.educationalqualificationsForms.push(school);\n    }\n    else\n    {\n\n      //console.log('Project name required!!')\n      //outText.textContent='Project name required!!'\n    }\n  }\n\n\n  deleteExperience(i) {\n    console.log('in deleteExperience: ' + i)\n    this.experienceForms.removeAt(i)\n    this.openSnackBar('Experience deleted.','Succes')\n  }\n  \n  deleteSkill(i) {\n    //console.log('deleteStill @ ')\n    this.skillForms.removeAt(i)\n  }\n\n  deleteEducation(i) {\n    this.educationalqualificationsForms.removeAt(i)\n    this.openSnackBar('School deleted.','Succes')\n  }\n\n}\n\n\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog { \n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}","module.exports = \"\\n\\n<div class=\\\"columns\\\">\\n    <div class=\\\"column is-12\\\">\\n        <div class=\\\"columns\\\">\\n            <div class=\\\"column is-10 is-offset-1\\\">\\n                <h1>MDA</h1>\\n            </div>\\n        </div>\\n        <div class=\\\"columns\\\">\\n          <div class=\\\"column is-10 is-offset-1\\\">\\n\\n            <mat-tab-group dynamicHeight>\\n              <mat-tab label=\\\"Short tab\\\">\\n                <!-- <div class=\\\"example-small-box mat-elevation-z4\\\"> -->\\n                  Small content\\n                  <!-- <postjob></postjob> -->\\n                <!-- </div> -->\\n              </mat-tab>\\n              <mat-tab label=\\\"Long tab\\\">\\n                <div class=\\\"example-large-box mat-elevation-z4 columns\\\">\\n                  \\n                  <main class=\\\"column is-7\\\">\\n                    <mat-form-field>\\n                      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n                    </mat-form-field>\\n                    \\n                    <br>\\n                    \\n                    <mat-table #table [dataSource]=\\\"dataSource\\\" \\n                          [trackBy]=\\\"trackByUid\\\" matSort class=\\\"animate\\\">\\n                  \\n                          \\n                      <ng-container matColumnDef=\\\"name\\\">\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let hacker\\\"> {{ hacker.name }} </mat-cell>\\n                      </ng-container>\\n                  \\n                  \\n                      <ng-container matColumnDef=\\\"age\\\">\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> age </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let hacker\\\"> {{ hacker.age }} <br> {{ hacker.email }} </mat-cell>\\n                      </ng-container>\\n                  \\n                  \\n                      <!-- <ng-container matColumnDef=\\\"email\\\">\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let hacker\\\"> {{ hacker.email }} </mat-cell>\\n                      </ng-container> -->\\n                  \\n                  \\n                      <ng-container matColumnDef=\\\"phrase\\\">\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Phrase </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let hacker\\\"> {{ hacker.phrase }} </mat-cell>\\n                      </ng-container>\\n                  \\n                      <!-- <ng-container matColumnDef=\\\"edit\\\">\\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> Edit </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let hacker\\\"> \\n                            <button mat-raised-button  color=\\\"primary\\\" (click)=\\\"openDialog(hacker)\\\">Edit</button> \\n                          </mat-cell>\\n                      </ng-container> -->\\n                  \\n                  \\n                    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selectRow(row)\\\"></mat-row>\\n                  \\n                  </mat-table>\\n                \\n                  <mat-paginator [length]=\\\"100\\\"\\n                                [pageSize]=\\\"10\\\"\\n                                [pageSizeOptions]=\\\"[2, 5, 10, 25, 100]\\\">\\n                    </mat-paginator>\\n                  </main>\\n                  <aside class=\\\"column is-2\\\">\\n                    <h5>show details</h5>\\n                    {{todisplayname}}\\n                    <br>\\n                    {{todisplayage}}\\n                    <br>\\n                    {{todisplayphrase}}\\n                  </aside>\\n                  </div>\\n              </mat-tab>\\n            </mat-tab-group>\\n\\n          </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","module.exports = \".example-small-box, .example-large-box {\\n  margin: 16px;\\n  padding: 16px;\\n  border-radius: 8px; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\"","import { Component, AfterViewInit, ViewChild } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { MatTableDataSource, MatSort, MatDialog, MatPaginator } from '@angular/material';\nimport * as faker from 'faker';\nimport { Observable} from 'rxjs';\nimport { map} from 'rxjs/operators';\nimport { JSDocTagName } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'resumelist',\n  templateUrl: './resumelist.component.html',\n  styleUrls: ['./resumelist.component.scss']\n})\n\nexport class ResumelistComponent implements AfterViewInit {\n\n  //displayedColumns = ['name', 'age', 'email', 'phrase', 'edit'];\n  displayedColumns = ['name', 'age', 'phrase'];\n  dataSource: MatTableDataSource<any>; \n  todisplayname: string;\n  todisplayage: string;\n  todisplayphrase: string;\n\n  private itemsCollection: AngularFirestoreCollection<any>;\n  items: Observable<any[]>;\n  countItems = 0;\n  \n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  constructor(private afs: AngularFirestore, public dialog: MatDialog) { }\n\n  addOne() {\n    const hacker = {\n      name: faker.name.findName(),\n      age: faker.random.number({ min: 18, max: 99 }),\n      email: faker.internet.email(),\n      phrase: faker.hacker.phrase(),\n      uid: faker.random.alphaNumeric(16)\n    }\n    this.afs.collection('hackers').doc(hacker.uid).set(hacker)\n  }\n\n  ngAfterViewInit() {\n     \n    this.afs.collection<any>('resume').valueChanges().subscribe(data => {\n      console.log(JSON.stringify(data))\n      \n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n  \n    // this.fetchData().subscribe(data => {\n    //     console.log(JSON.stringify(data))\n        \n    //     this.dataSource = new MatTableDataSource(data);\n    //     this.dataSource.sort = this.sort;\n    //     this.dataSource.paginator = this.paginator;\n    //   })\n    \n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); \n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n    \n  }\n\n  fetchData()\n  {\n\n    this.itemsCollection = this.afs.collection<any>('resume');\n    this.items = this.itemsCollection.snapshotChanges().pipe(map(actions =>{\n      this.countItems = actions.length;\n      return actions.map(action => ({$key: action.payload.doc.id}))\n      })\n    )\n  \n  }\n\n  //openDialog(data): void {\n  //  const dialogRef = this.dialog.open(EditDialogComponent, {\n  //    width: '350px',\n  //    data: data\n  //  });\n  //}\n\n  trackByUid(index, item) {\n    return item.uid\n  }\n\n  selectRow(row) {\n    console.log(row);\n    this.todisplayname = row['name'];\n    this.todisplayage = row['email'];\n    this.todisplayphrase = row['phrase'];\n  }\n\n}\n","module.exports = \"<div class=\\\"columns\\\">\\n  <div class=\\\"column is-narrow\\\">\\n    <div class=\\\"\\\" style=\\\"width: 150px;\\\">\\n      <!-- <p class=\\\"title is-5\\\">Narrow column</p>\\n      <p class=\\\"subtitle\\\">This column is only 200px wide.</p>\\n      <mat-toolbar color=\\\"\\\">\\n          <mat-toolbar-row>\\n            Custom Toolbar\\n          </mat-toolbar-row>\\n        \\n          <mat-toolbar-row>\\n            <span>Second Line</span>\\n            <span class=\\\"example-spacer\\\"></span>\\n            <mat-icon class=\\\"example-icon\\\">verified_user</mat-icon>\\n          </mat-toolbar-row>\\n        \\n          <mat-toolbar-row>\\n            <span>Third Line</span>\\n            <span class=\\\"example-spacer\\\"></span>\\n            <mat-icon class=\\\"example-icon\\\">favorite</mat-icon>\\n            <mat-icon class=\\\"example-icon\\\">delete</mat-icon>\\n          </mat-toolbar-row>\\n        </mat-toolbar> -->\\n    </div>\\n  </div>\\n  <div class=\\\"column\\\">\\n    <mat-drawer-container class=\\\"example-container\\\" autosize>\\n      <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"over\\\">\\n        <button mat-icon-button class=\\\"is-pulled-right\\\" (click)=\\\"drawer.toggle()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">clear</mat-icon>\\n        </button>\\n        {{todisplayname}}\\n        <br>\\n        {{todisplayage}}\\n        <br>\\n        {{todisplayphrase}}\\n\\n        <p>Auto-resizing sidenav asdf sadf dsf dsf df dsaf sdaf sdaf asdf dsaf sdaf sadfad dsaf sdfd</p>\\n        <p *ngIf=\\\"showFiller\\\">Lorem, ipsum dolor sit amet consectetur.</p>\\n        <button (click)=\\\"showFiller = !showFiller\\\" mat-raised-button>\\n          Toggle extra text\\n        </button>\\n        <button (click)=\\\"drawer.toggle()\\\" mat-raised-button>\\n          Close\\n        </button>\\n      </mat-drawer>\\n\\n      <div class=\\\"example-sidenav-content\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n        <br>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" [trackBy]=\\\"trackByUid\\\" matSort class=\\\"animate\\\">\\n\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let hacker\\\">\\n              {{ hacker.name }} {{ hacker.email }}\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"age\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> age </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let hacker\\\"> {{ hacker.age }} <br> {{ hacker.email }} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"phrase\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> Phrase </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let hacker\\\"> {{ hacker.phrase }} </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selectRow(row); drawer.toggle();\\\"></mat-row>\\n\\n        </mat-table>\\n\\n        <mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[2, 5, 10, 25, 100]\\\">\\n        </mat-paginator>\\n        \\n\\n\\n      </div>\\n\\n    </mat-drawer-container>\\n\\n  </div>\\n</div>\"","module.exports = \".example-container {\\n  width: 100%; }\\n\\n.example-sidenav-content {\\n  height: 100%;\\n  min-height: 500px; }\\n\\n.example-sidenav {\\n  padding: 20px; }\\n\"","import { Component, AfterViewInit, ViewChild } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { MatTableDataSource, MatSort, MatDialog, MatPaginator } from '@angular/material';\nimport * as faker from 'faker';\nimport { Observable} from 'rxjs';\nimport { map} from 'rxjs/operators';\nimport { JSDocTagName } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'searchcandidates',\n  templateUrl: './searchcandidates.component.html',\n  styleUrls: ['./searchcandidates.component.scss']\n})\nexport class SearchcandidatesComponent implements AfterViewInit {\n  displayedColumns = ['name', 'age', 'phrase'];\n  dataSource: MatTableDataSource<any>; \n  todisplayname: string;\n  todisplayage: string;\n  todisplayphrase: string;\n\n  private itemsCollection: AngularFirestoreCollection<any>;\n  items: Observable<any[]>;\n  countItems = 0;\n  \n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  constructor(private afs: AngularFirestore, public dialog: MatDialog) { }\n  ngAfterViewInit() {\n     \n    this.afs.collection<any>('resume').valueChanges().subscribe(data => {\n      console.log(JSON.stringify(data))\n      \n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); \n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n    \n  }\n\n  trackByUid(index, item) {\n    return item.uid\n  }\n\n  selectRow(row) {\n    console.log(row);\n    this.todisplayname = row['name'];\n    this.todisplayage = row['email'];\n    this.todisplayphrase = row['phrase'];\n  }\n}\n","module.exports = \"<h1>Angular Universal Server Rendered Page</h1>\\n\\n<p>\\n  This page is prerendered with Angular Universal and is 100% search engine and linkbot friedly - and highly performant. Give this URL a whirl in the\\n  <a href=\\\"https://cards-dev.twitter.com/validator\\\">twitter-card validator</a>\\n</p>\\n\\n<p>Learn all about <a href=\\\"https://angularfirebase.com/tag/ssr/\\\">server-side rendering strategies in Angular</a></p>\\n\\n<h2>Dynamic Firebase Data</h2>\\n\\n<p>Need SSR with dynamic Firebase data? No problem. Here are some animals I retrieved from Cloud Firestore.</p>\\n\\n<div *ngFor=\\\"let animal of animals\\\" class=\\\"box\\\">\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-left\\\">\\n      <figure class=\\\"image is-128x128\\\">\\n        <img [src]=\\\"animal.imgURL\\\" alt=\\\"{{ animal.bio }}\\\">\\n      </figure>\\n    </div>\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n        <p>\\n          <strong>{{ animal.name }}</strong>\\n          <br> {{ animal.bio }}\\n        </p>\\n      </div>\\n    </div>\\n  </article>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { AngularFirestore } from 'angularfire2/firestore';\n\nimport { tap, startWith } from 'rxjs/operators';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nconst DATA = makeStateKey<any>('animals');\n\n@Component({\n  selector: 'ssr-page',\n  templateUrl: './ssr-page.component.html',\n  styleUrls: ['./ssr-page.component.scss']\n})\nexport class SsrPageComponent implements OnInit {\n\n  animals;\n\n  constructor(\n    private afs: AngularFirestore,\n    private meta: Meta,\n    private titleService: Title,\n    private state: TransferState\n  ) { }\n\n  ngOnInit() {\n   // set metatags for twitter\n   this.setMetaTags();\n\n    // Get the animals from the database\n    const animals$ = this.afs.collection('animals').valueChanges();\n\n    // If state is available, start with it your observable\n    const exists = this.state.get(DATA, [] as any);\n    if (!exists.length) {\n      animals$.pipe(\n        tap(list => {\n          this.state.set(DATA, list);\n          this.animals = list;\n        })\n      )\n      .subscribe();\n    } else {\n      this.animals = exists;\n    }\n\n\n  }\n\n  setMetaTags() {\n    this.titleService.setTitle('Angular Firebase Animals');\n\n    // Set meta tags\n    this.meta.updateTag({ name: 'twitter:card', content: 'summary' });\n    this.meta.updateTag({ name: 'twitter:site', content: '@angularfirebase' });\n    this.meta.updateTag({ name: 'twitter:title', content: 'Angular Firebase Animals' });\n    this.meta.updateTag({ name: 'twitter:description', content: 'A server-rendered list of animals from Cloud Firestore in Angular' });\n    this.meta.updateTag({ name: 'twitter:image', content: 'https://goo.gl/MzskMe'});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\nimport { NotificationMessageComponent } from './notification-message/notification-message.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { SsrPageComponent } from './ssr-page/ssr-page.component';\nimport { PostjobComponent } from './postjob/postjob.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule, MatMenuModule, MatInputModule, MatSnackBarModule, MatDatepicker,\n  MatToolbarModule, MatDialogModule, MatSidenavModule, MatNativeDateModule, MatExpansionModule,\n  MatCardModule, MatTabsModule, MatIconModule, MatPaginatorModule, MatFormFieldModule, MatRadioModule, MatIcon, MatListOption,\n  MatSortModule, MatTableModule, MatGridListModule, MatInput, MatSelectModule, MatDialog, MatDatepickerModule, MatListModule,\n  MatTooltipModule, MatStepperModule } from '@angular/material';\nimport { FireFormDirective } from './fire-form.directive';\nimport { ProfileResumeFormDirective } from './profile-resume-form.directive';\nimport { AddresumeComponent } from './addresume/addresume.component';\nimport { ViewresumeComponent } from './viewresume/viewresume.component';\nimport { ResumelistComponent } from './resumelist/resumelist.component';\nimport { AdListingComponent } from './ad-listing/ad-listing.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DialogOverviewExampleDialog} from './profile/profile.component';\nimport { DialogContentExampleDialog } from './profileresume/profileresume.component';\nimport { DeleteDialog } from './addresume/addresume.component';\nimport { ProfileresumeComponent } from './profileresume/profileresume.component';\nimport { LocationComponent } from './onboarding/location/location.component';\nimport { WelcomeComponent } from './onboarding/welcome/welcome.component';\nimport { LookingComponent } from './onboarding/looking/looking.component';\nimport { PreferencesComponent } from './onboarding/preferences/preferences.component';\nimport { PreviewComponent } from './onboarding/preview/preview.component';\nimport { GooglePlacesDirective } from './google-places.directive';\nimport { SearchcandidatesComponent } from './searchcandidates/searchcandidates.component';\nimport { OnboardingprofileComponent } from './onboarding/onboardingprofile/onboardingprofile.component';\nimport { BuilderComponent } from './onboarding/builder/builder.component';\n//import { Ng4GeoautocompleteModule } from 'ng4-geoautocomplete';\n//import 'rxjs/Rx';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, ReactiveFormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule, MatCheckboxModule, MatMenuModule, \n    MatInputModule, MatSnackBarModule,\n    MatToolbarModule, MatDialogModule, \n    MatSidenavModule, MatNativeDateModule,MatExpansionModule,\n    MatCardModule, MatTabsModule, MatRadioModule,\n    MatIconModule, MatFormFieldModule, MatDatepickerModule,\n    MatTableModule, MatPaginatorModule, MatSortModule, \n    MatPaginatorModule, MatGridListModule, MatSelectModule, MatListModule,\n    MatTabsModule, MatIconModule, MatTooltipModule, MatStepperModule\n    //Ng4GeoautocompleteModule.forRoot()\n  ],\n  declarations: [\n    UserLoginComponent,\n    HomePageComponent,\n    MainNavComponent,\n    LoadingSpinnerComponent,\n    NotificationMessageComponent,\n    UserProfileComponent,\n    UserFormComponent,\n    SsrPageComponent,\n    PostjobComponent,\n    FireFormDirective,\n    ProfileResumeFormDirective,\n    AddresumeComponent,\n    ViewresumeComponent,\n    ResumelistComponent,\n    AdListingComponent,\n    ProfileComponent,\n    DialogOverviewExampleDialog,\n    DialogContentExampleDialog,\n    DeleteDialog,\n    ProfileresumeComponent,\n    LocationComponent,\n    WelcomeComponent,\n    LookingComponent,\n    PreferencesComponent,\n    PreviewComponent,\n    GooglePlacesDirective,\n    SearchcandidatesComponent,\n    OnboardingprofileComponent,\n    BuilderComponent\n  ],\n  exports: [\n    MainNavComponent,\n    LoadingSpinnerComponent,\n    NotificationMessageComponent,\n    UserProfileComponent,\n    UserFormComponent\n  ],\n  entryComponents: [ DialogOverviewExampleDialog, DialogContentExampleDialog, DeleteDialog],\n  providers: []\n})\nexport class UiModule {}\n","module.exports = \"<form [formGroup]=\\\"userForm\\\" *ngIf=\\\"newUser\\\" (ngSubmit)=\\\"signup()\\\">\\n\\n    <h3>New User Signup</h3>\\n    <p class=\\\"button is-small\\\" (click)=\\\"toggleForm()\\\">Already Registered?</p>\\n    <hr>\\n\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"email\\\" class=\\\"input\\\" formControlName=\\\"email\\\" name=\\\"email\\\" required autocomplete=\\\"new-password\\\">\\n\\n    <div *ngIf=\\\"formErrors.email\\\" class=\\\"notification is-danger\\\">\\n        {{ formErrors.email }}\\n    </div>\\n\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"input\\\" formControlName=\\\"password\\\" name=\\\"password\\\" required>\\n\\n    <div *ngIf=\\\"formErrors.password\\\" class=\\\"notification is-danger\\\">\\n        {{ formErrors.password }}\\n    </div>\\n\\n    <div *ngIf=\\\"userForm.valid\\\" class=\\\"notification is-success\\\">Form is valid</div>\\n    <button type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!userForm.valid\\\">Submit</button>\\n\\n</form>\\n\\n\\n<form [formGroup]=\\\"userForm\\\" *ngIf=\\\"!newUser\\\" (ngSubmit)=\\\"login()\\\">\\n\\n    <h3>Existing User Login</h3>\\n    <p class=\\\"btn button is-small\\\" (click)=\\\"toggleForm()\\\">New User?</p>\\n    <hr>\\n\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email2\\\" class=\\\"input\\\" formControlName=\\\"email\\\" required autocomplete=\\\"new-password\\\">\\n\\n    <div *ngIf=\\\"formErrors.email\\\" class=\\\"help is-danger\\\">\\n        {{ formErrors.email }}\\n    </div>\\n\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password2\\\" class=\\\"input\\\" formControlName=\\\"password\\\" required autocomplete=\\\"new-password\\\">\\n\\n    <div *ngIf=\\\"formErrors.password\\\" class=\\\"help is-danger\\\">\\n        {{ formErrors.password }}\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!userForm.valid\\\">Submit</button>\\n\\n    <span *ngIf=\\\"userForm.valid\\\" class=\\\"help is-success\\\">Form Looks Valid</span>\\n\\n    <a *ngIf=\\\"!passReset && userForm.controls.email.valid\\\" class=\\\"help is-info\\\" (click)=\\\"resetPassword()\\\">Reset Password for {{userForm.value.email}}?</a>\\n    <p *ngIf=\\\"passReset\\\" class=\\\"help is-info\\\">Reset requested. Check your email instructions.</p>\\n\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { AuthService } from '../../core/auth.service';\n\ntype UserFields = 'email' | 'password';\ntype FormErrors = { [u in UserFields]: string };\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss'],\n})\nexport class UserFormComponent implements OnInit {\n\n  userForm: FormGroup;\n  newUser = true; // to toggle login or signup form\n  passReset = false; // set to true when password reset is triggered\n  formErrors: FormErrors = {\n    'email': '',\n    'password': '',\n  };\n  validationMessages = {\n    'email': {\n      'required': 'Email is required.',\n      'email': 'Email must be a valid email',\n    },\n    'password': {\n      'required': 'Password is required.',\n      'pattern': 'Password must be include at one letter and one number.',\n      'minlength': 'Password must be at least 4 characters long.',\n      'maxlength': 'Password cannot be more than 40 characters long.',\n    },\n  };\n\n  constructor(private fb: FormBuilder, private auth: AuthService) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  toggleForm() {\n    this.newUser = !this.newUser;\n  }\n\n  signup() {\n    this.auth.emailSignUp(this.userForm.value['email'], this.userForm.value['password']);\n  }\n\n  login() {\n    this.auth.emailLogin(this.userForm.value['email'], this.userForm.value['password']);\n  }\n\n  resetPassword() {\n    //this.auth.resetPassword(this.userForm.value['email'])\n    //  .then(() => this.passReset = true);\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      'email': ['', [\n        Validators.required,\n        Validators.email,\n      ]],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25),\n      ]],\n    });\n\n    this.userForm.valueChanges.subscribe((data) => this.onValueChanged(data));\n    this.onValueChanged(); // reset validation messages\n  }\n\n  // Updates validation state on form changes.\n  onValueChanged(data?: any) {\n    if (!this.userForm) { return; }\n    const form = this.userForm;\n    for (const field in this.formErrors) {\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field) && (field === 'email' || field === 'password')) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          if (control.errors) {\n            for (const key in control.errors) {\n              if (Object.prototype.hasOwnProperty.call(control.errors, key) ) {\n                this.formErrors[field] += `${(messages as {[key: string]: string})[key]} `;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","module.exports = \"<h1>Firebase User Auth Demo</h1>\\n\\n<p>\\n  Learn more about \\n  <a href=\\\"https://angularfirebase.com/tag/authentication\\\">Firebase auth strategies</a>.\\n</p>\\n<hr>\\n\\n<div *ngIf=\\\"!(auth.user | async); else alreadyLoggedIn\\\">\\n\\n  <h3>Social Login</h3>\\n\\n    <button (click)=\\\"signInWithGoogle()\\\" class=\\\"button btn-social btn-google\\\">\\n      <i class=\\\"fa fa-google fa-lg\\\"></i> Connect Google\\n    </button>\\n\\n    <button (click)=\\\"signInWithGithub()\\\" class=\\\"button btn-social btn-github\\\" disabled>\\n      <i class=\\\"fa fa-github fa-lg\\\"></i> Connect GitHub\\n    </button>\\n\\n    <button (click)=\\\"signInWithFacebook()\\\" class=\\\"button  btn-social btn-facebook\\\" disabled>\\n      <i class=\\\"fa fa-facebook fa-lg\\\"></i> Connect Facebook\\n    </button>\\n\\n    <button (click)=\\\"signInWithTwitter()\\\" class=\\\"button  btn-social btn-twitter\\\" disabled>\\n      <i class=\\\"fa fa-twitter fa-lg\\\"></i> Connect Twitter\\n    </button>\\n\\n    <hr>\\n\\n    <h3>Anonymous Login</h3>\\n\\n      <button (click)=\\\"signInAnonymously()\\\" class=\\\"button button-info\\\">\\n        <i class=\\\"fa fa-user-secret fa-lg\\\"></i> Connect Anonymously\\n      </button>\\n\\n    <hr>\\n\\n    <user-form></user-form>\\n\\n</div>\\n\\n<ng-template #alreadyLoggedIn>\\n  <p class=\\\"text-success\\\">\\n    You are logged in <i class=\\\"fa fa-thumbs-up\\\"></i>\\n  </p>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.scss'],\n})\nexport class UserLoginComponent {\n\n  constructor(public auth: AuthService,\n              private router: Router) { }\n\n  /// Social Login\n\n  async signInWithGithub() {\n    await this.auth.githubLogin();\n    return await this.afterSignIn();\n  }\n\n  async signInWithGoogle() {\n    await this.auth.googleLogin();\n    return await this.afterSignIn();\n  }\n\n  async signInWithFacebook() {\n    await this.auth.facebookLogin();\n    await this.afterSignIn();\n  }\n\n  async signInWithTwitter() {\n    await this.auth.twitterLogin();\n    return await this.afterSignIn();\n  }\n\n  /// Anonymous Sign In\n\n  async signInAnonymously() {\n    await this.auth.anonymousLogin();\n    return await this.afterSignIn();\n  }\n\n  /// Shared\n\n  private afterSignIn() {\n    // Do after login stuff here, such router redirects, toast messages, etc.\n    return this.router.navigate(['/']);\n  }\n\n}\n","module.exports = \"<div class=\\\"\\\" >\\n  <div *ngIf=\\\"auth.user | async; then authenticated else guest\\\">\\n          <!-- template will replace this div -->\\n  </div>\\n</div>\\n\\n<!-- User NOT logged in -->\\n<ng-template #guest class=\\\"box\\\">\\n  <h3>Howdy, GUEST</h3>\\n  <p class=\\\"card-text\\\">Login to get started...</p>\\n  <button class=\\\"button\\\" routerLink=\\\"/login\\\">Login</button>\\n</ng-template>\\n\\n<!-- User logged in -->\\n<ng-template #authenticated>\\n  <div *ngIf=\\\"auth.user | async as user\\\">\\n    <h3>Howdy, {{ user.displayName }}</h3>\\n    <img class=\\\"card-img-top\\\" [src]=\\\"user.photoURL || 'https://api.adorable.io/avatars/109/fire.png'\\\" width=50px>\\n    <p class=\\\"text-truncate\\\">UID: {{ user.uid }}</p>\\n    <button class=\\\"button\\\" (click)=\\\"logout()\\\">Logout</button>\\n  </div>\\n</ng-template>\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent {\n\n  constructor(public auth: AuthService) { }\n\n  logout() {\n    this.auth.signOut();\n  }\n}\n","module.exports = \"<p>\\n  viewresume works!\\n  \\n  <br>\\n  <span *ngIf=\\\"resumeObservable | async as resume\\\">\\n    bio: <i>{{resume.bio}}</i><br>\\n    career: <i>{{resume.career}}</i><br>\\n    skill: <i>{{resume.skillArrayForm}}</i>\\n\\n    <ul>\\n      <li *ngFor=\\\"let skills of resume.skillArrayForm\\\">\\n      {{ skills.level }} by {{ skills.skill }}\\n      </li>\\n    </ul>\\n    \\n  </span>\\n  <br>\\n  {{resumeObservable | async | json }}\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Subscription, Observable } from 'rxjs';\nimport { AngularFireDatabase, AngularFireObject, AngularFireList } from 'angularfire2/database';\nimport { Resume } from './resume';\n\n@Component({\n  selector: 'viewresume',\n  templateUrl: './viewresume.component.html',\n  styleUrls: ['./viewresume.component.scss']\n})\n\n\n\nexport class ViewresumeComponent implements OnInit {\n\n  myDoc;\n  resumeRef : AngularFireList<Resume>\n  resumeObservable: Observable<Resume>;\n\n  constructor(private afs: AngularFirestore) { }\n\n  ngOnInit() {\n\n    this.myDoc = this.afs.doc('contacts/test');\n  \n    this.resumeObservable = this.myDoc.valueChanges()\n    \n  }\n\n}\n","import { Directive, HostListener, HostBinding, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[dropZone]'\n})\nexport class DropZoneDirective {\n\n  @Output() dropped =  new EventEmitter<FileList>();\n  @Output() hovered =  new EventEmitter<boolean>();\n\n  constructor() { }\n\n  @HostListener('drop', ['$event'])\n  onDrop($event) {\n    $event.preventDefault();\n    this.dropped.emit($event.dataTransfer.files);\n    this.hovered.emit(false);\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver($event) {\n    $event.preventDefault();\n    this.hovered.emit(true);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  onDragLeave($event) {\n    $event.preventDefault();\n    this.hovered.emit(false);\n  }\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst FILE_SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst FILE_SIZE_UNITS_LONG = ['Bytes', 'Kilobytes', 'Megabytes', 'Gigabytes', 'Pettabytes', 'Exabytes', 'Zettabytes', 'Yottabytes'];\n\n\n@Pipe({\n  name: 'fileSize'\n})\nexport class FileSizePipe implements PipeTransform {\n\n  transform(sizeInBytes: number, longForm: boolean): string {\n    const units = longForm\n      ? FILE_SIZE_UNITS_LONG\n      : FILE_SIZE_UNITS;\n\n    let power = Math.round(Math.log(sizeInBytes) / Math.log(1024));\n    power = Math.min(power, units.length - 1);\n\n    const size = sizeInBytes / Math.pow(1024, power); // size in new units\n    const formattedSize = Math.round(size * 100) / 100; // keep up to 2 decimals\n    const unit = units[power];\n\n    return size ? `${formattedSize} ${unit}` : '0';\n  }\n\n}\n","module.exports = \"<h1>Firebase Storage Demo</h1>\\n\\n<p>\\n  Learn how to build an\\n  <a href=\\\"https://angularfirebase.com/lessons/firebase-storage-with-angularfire-dropzone-file-uploader/\\\">AngularFirebase dropzone uploader</a>\\n</p>\\n\\n<hr>\\n\\n<div class=\\\"dropzone\\\" dropZone (hovered)=\\\"toggleHover($event)\\\" (dropped)=\\\"startUpload($event)\\\" [class.hovering]=\\\"isHovering\\\">\\n\\n  <h3>AngularFire Drop Zone</h3>\\n  <p>Drag and Drop a File</p>\\n  <div class=\\\"file\\\">\\n    <label class=\\\"file-label\\\">\\n\\n\\n      <input class=\\\"file-input\\\" type=\\\"file\\\" (change)=\\\"startUpload($event.target.files)\\\">\\n\\n      <span class=\\\"file-cta\\\">\\n        <span class=\\\"file-icon\\\">\\n          <i class=\\\"fa fa-upload\\\"></i>\\n        </span>\\n        <span class=\\\"file-label\\\">\\n          or choose a file…\\n        </span>\\n      </span>\\n    </label>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<div *ngIf=\\\"percentage | async as pct\\\">\\n\\n  <progress class=\\\"progress is-info\\\" [value]=\\\"pct\\\" max=\\\"100\\\">\\n  </progress>\\n\\n  {{ pct | number }}%\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n<div *ngIf=\\\"(snapshot | async) as snap\\\">\\n  {{ snap.bytesTransferred | fileSize }} of {{ snap.totalBytes | fileSize }}\\n\\n\\n  <div *ngIf=\\\"downloadURL | async as url\\\">\\n    <h3>Results!</h3>\\n    <img [src]=\\\"url\\\">\\n    <br>\\n    <a [href]=\\\"url\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Download Me!</a>\\n  </div>\\n  <hr>\\n\\n\\n\\n\\n\\n\\n  <button (click)=\\\"task.pause()\\\" class=\\\"button is-warning\\\" [disabled]=\\\"!isActive(snap)\\\">Pause</button>\\n  <button (click)=\\\"task.cancel()\\\" class=\\\"button is-danger\\\" [disabled]=\\\"!isActive(snap)\\\">Cancel</button>\\n  <button (click)=\\\"task.resume()\\\" class=\\\"button is-info\\\" [disabled]=\\\"!(snap?.state === 'paused')\\\">Resume</button>\\n\\n\\n</div>\"","module.exports = \".dropzone {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  font-weight: 200;\\n  height: 300px;\\n  border: 2px dashed #f16624;\\n  border-radius: 5px;\\n  background: white;\\n  margin: 10px 0; }\\n  .dropzone.hovering {\\n    border: 2px solid #f16624;\\n    color: #dadada !important; }\\n  .dropzone .file-label {\\n    font-size: 1.2em; }\\n  progress::-webkit-progress-value {\\n  transition: width 0.1s ease; }\\n  img {\\n  width: 250px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  AngularFireStorage,\n  AngularFireUploadTask\n} from 'angularfire2/storage';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { tap, finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'upload-page',\n  templateUrl: './upload-page.component.html',\n  styleUrls: ['./upload-page.component.scss']\n})\nexport class UploadPageComponent {\n  // Main task\n  task: AngularFireUploadTask;\n\n  // Progress monitoring\n  percentage: Observable<number>;\n\n  snapshot: Observable<any>;\n\n  // Download URL\n  downloadURL: Observable<string>;\n\n  // State for dropzone CSS toggling\n  isHovering: boolean;\n\n  constructor(\n    private storage: AngularFireStorage,\n    private db: AngularFirestore\n  ) {}\n\n  toggleHover(event: boolean) {\n    this.isHovering = event;\n  }\n\n  startUpload(event: FileList) {\n    // The File object\n    const file = event.item(0);\n\n    // Client-side validation example\n    if (file.type.split('/')[0] !== 'image') {\n      console.error('unsupported file type :( ');\n      return;\n    }\n\n    // The storage path\n    const path = `test/${new Date().getTime()}_${file.name}`;\n\n    // Totally optional metadata\n    const customMetadata = { app: 'My AngularFire-powered PWA!' };\n\n    // The main task\n    this.task = this.storage.upload(path, file, { customMetadata });\n\n    // Progress monitoring\n    this.percentage = this.task.percentageChanges();\n    this.snapshot = this.task.snapshotChanges().pipe(\n      tap(snap => {\n        if (snap.bytesTransferred === snap.totalBytes) {\n          // Update firestore on completion\n          this.db.collection('photos').add({ path, size: snap.totalBytes });\n        }\n      }),\n      finalize(() => this.downloadURL = this.storage.ref(path).getDownloadURL() )\n    );\n\n\n    // The file's download URL\n  }\n\n  // Determines if the upload task is active\n  isActive(snapshot) {\n    return (\n      snapshot.state === 'running' &&\n      snapshot.bytesTransferred < snapshot.totalBytes\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadPageComponent } from './upload-page/upload-page.component';\nimport { DropZoneDirective } from './drop-zone.directive';\nimport { FileSizePipe } from './file-size.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [UploadPageComponent, DropZoneDirective, FileSizePipe]\n})\nexport class UploadsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAjU-xUFinMv34LwGnyB0V23r0mPQLIQHs\",\n    authDomain: \"hiremuse-3da59.firebaseapp.com\",\n    databaseURL: \"https://hiremuse-3da59.firebaseio.com\",\n    projectId: \"hiremuse-3da59\",\n    storageBucket: \"hiremuse-3da59.appspot.com\",\n    messagingSenderId: \"590426111911\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n});\n"],"sourceRoot":""}